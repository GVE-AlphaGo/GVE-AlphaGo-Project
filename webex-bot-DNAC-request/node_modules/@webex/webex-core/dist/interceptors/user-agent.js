'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _weakMap = require('babel-runtime/core-js/weak-map');

var _weakMap2 = _interopRequireDefault(_weakMap);

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

var _common = require('@webex/common');

var _httpCore = require('@webex/http-core');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*!
 * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.
 */

var strings = new _weakMap2.default();

/**
 * Sets a 'user-agent' header on all requests if one is not present.
 * Defaults to '@webex/http-core' though a custom user-agent can be set
 * using the appName and appVersion configuration. e.g.
 *
 *   webex = WebexSdk.init({
 *     credentials: {
 *       supertoken: superToken
 *     },
 *     config: {
 *       credentials: {
 *         client_id,
 *         client_secret
 *       },
 *       appName: 'custom-user-agent',
 *       appVersion: '1.0',
 *     }
 *   });
 */

var UserAgentInterceptor = function (_Interceptor) {
  (0, _inherits3.default)(UserAgentInterceptor, _Interceptor);

  /**
   * @param {Object} [options={}]
   * @param {WebexCore} [options.webex]
   * @private
   * @returns {UserAgentInterceptor}
   */
  function UserAgentInterceptor() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck3.default)(this, UserAgentInterceptor);

    var appName = (0, _get3.default)(options, 'webex.config.appName');
    var appVersion = (0, _get3.default)(options, 'webex.config.appVersion') || '0.0';

    var _this = (0, _possibleConstructorReturn3.default)(this, (UserAgentInterceptor.__proto__ || (0, _getPrototypeOf2.default)(UserAgentInterceptor)).call(this, options));

    if (appName) {
      strings.set(_this, appName + '/' + appVersion);
    } else {
      strings.set(_this, '@webex/http-core'); // Using the traditional default from http-core
    }
    return _this;
  }

  /**
   * @returns {UserAgentInterceptor}
   */


  (0, _createClass3.default)(UserAgentInterceptor, [{
    key: 'onRequest',


    /**
     * @see Interceptor#onRequest
     * @param {Object} options
     * @returns {Object}
     */
    value: function onRequest(options) {
      // Do not set a custom user-agent for browsers
      if (_common.inBrowser) {
        return options;
      }

      options.headers = options.headers || {};

      if ('user-agent' in options.headers && options.headers['spark-user-agent']) {
        return options;
      }

      options.headers['user-agent'] = strings.get(this);

      return options;
    }
  }], [{
    key: 'create',
    value: function create() {
      return new UserAgentInterceptor({ webex: this });
    }
  }]);
  return UserAgentInterceptor;
}(_httpCore.Interceptor);

exports.default = UserAgentInterceptor;
//# sourceMappingURL=user-agent.js.map
