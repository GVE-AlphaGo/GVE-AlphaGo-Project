{"version":3,"sources":["payload-transformer.js"],"names":["PayloadTransformerInterceptor","options","noTransform","webex","transform","response","reason","then","r","reject","Interceptor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;AAEA;;;IAGqBA,6B;;;;;;;;;;;;AASnB;;;;;8BAKUC,O,EAAS;AACjB,UAAIA,QAAQC,WAAZ,EAAyB;AACvB,eAAOD,OAAP;AACD;;AAED,aAAO,KAAKE,KAAL,CAAWC,SAAX,CAAqB,UAArB,EAAiCH,OAAjC,CAAP;AACD;;AAED;;;;;;;;;+BAMWA,O,EAASI,Q,EAAU;AAC5B,aAAO,KAAKF,KAAL,CAAWC,SAAX,CAAqB,SAArB,EAAgCC,QAAhC,CAAP;AACD;;AAED;;;;;;;;;oCAMgBJ,O,EAASK,M,EAAQ;AAC/B,aAAO,KAAKH,KAAL,CAAWC,SAAX,CAAqB,SAArB,EAAgCE,MAAhC,EACJC,IADI,CACC,UAACC,CAAD;AAAA,eAAO,kBAAQC,MAAR,CAAeD,KAAKF,MAApB,CAAP;AAAA,OADD,CAAP;AAED;;;;AAxCD;;;;6BAIgB;AACd,aAAO,IAAIN,6BAAJ,CAAkC,EAACG,OAAO,IAAR,EAAlC,CAAP;AACD;;;EAPwDO,qB,GAT3D;;;;kBASqBV,6B","file":"payload-transformer.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@webex/http-core';\n\n/**\n * @class\n */\nexport default class PayloadTransformerInterceptor extends Interceptor {\n  /**\n   * @param {Object} options\n   * @returns {PayloadTransformerInterceptor}\n   */\n  static create() {\n    return new PayloadTransformerInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    if (options.noTransform) {\n      return options;\n    }\n\n    return this.webex.transform('outbound', options);\n  }\n\n  /**\n   * @see Interceptor#onResponse\n   * @param {Object} options\n   * @param {HttpResponse} response\n   * @returns {Object}\n   */\n  onResponse(options, response) {\n    return this.webex.transform('inbound', response);\n  }\n\n  /**\n   * @see Interceptor#onResponseError\n   * @param {Object} options\n   * @param {Error} reason\n   * @returns {Object}\n   */\n  onResponseError(options, reason) {\n    return this.webex.transform('inbound', reason)\n      .then((r) => Promise.reject(r || reason));\n  }\n}\n"]}