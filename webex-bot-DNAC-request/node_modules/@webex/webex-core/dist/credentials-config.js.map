{"version":3,"sources":["credentials-config.js"],"names":["CredentialsConfig","AmpState","extend","extraProperties","props","idbroker","url","process","env","IDBROKER_BASE_URL","identity","IDENTITY_BASE_URL","authorizationString","WEBEX_AUTHORIZATION_STRING","AUTHORIZATION_STRING","client_id","WEBEX_CLIENT_ID","COMMON_IDENTITY_CLIENT_ID","CLIENT_ID","client_secret","WEBEX_CLIENT_SECRET","COMMON_IDENTITY_CLIENT_SECRET","CLIENT_SECRET","redirect_uri","WEBEX_REDIRECT_URI","COMMON_IDENTITY_REDIRECT_URI","REDIRECT_URI","scope","WEBEX_SCOPE","WEBEX_SCOPES","COMMON_IDENTITY_SCOPE","SCOPE","cisService","derived","activationUrl","deps","fn","cache","authorizeUrl","AUTHORIZE_URL","tokenUrl","TOKEN_URL","revokeUrl","REVOKE_URL","logoutUrl","setPasswordUrl"],"mappings":"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","file":"credentials-config.js","sourcesContent":["import AmpState from 'ampersand-state';\n\n// The credentials config which includes the CI server info and derived\n// URL properties from them for the various CI services.  The URL's\n// will be updated when the CI changes.\nconst CredentialsConfig = AmpState.extend({\n\n  // we need to allow extra props for dynamic props like jwtRefreshCallback\n  extraProperties: 'allow',\n\n  props: {\n    /**\n     * The idbroker base host name\n     * @returns {object}\n     */\n    idbroker: ['object', false, (() => ({\n      url: process.env.IDBROKER_BASE_URL || 'https://idbroker.webex.com'\n    }))],\n\n    /**\n     * The identity base host name\n     * @returns {object}\n     */\n    identity: ['object', false, (() => ({\n      url: process.env.IDENTITY_BASE_URL || 'https://identity.webex.com'\n    }))],\n\n    /**\n      * This is the authorization url displayed on the\n      * {@link developer portal|https://developer.webex.com}\n      * @type {string}\n      */\n    authorizationString: ['string', false, process.env.WEBEX_AUTHORIZATION_STRING || process.env.AUTHORIZATION_STRING],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    client_id: ['string', false, process.env.WEBEX_CLIENT_ID || process.env.COMMON_IDENTITY_CLIENT_ID || process.env.CLIENT_ID],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    client_secret: ['string', false, process.env.WEBEX_CLIENT_SECRET || process.env.COMMON_IDENTITY_CLIENT_SECRET || process.env.CLIENT_SECRET],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    redirect_uri: ['string', false, process.env.WEBEX_REDIRECT_URI || process.env.COMMON_IDENTITY_REDIRECT_URI || process.env.REDIRECT_URI],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    scope: ['string', false, process.env.WEBEX_SCOPE || process.env.WEBEX_SCOPES || process.env.COMMON_IDENTITY_SCOPE || process.env.SCOPE],\n\n    /**\n      * Controls the UI of the CI login page.\n      * @private\n      * @type {string}\n      */\n    cisService: ['string', false, 'webex']\n  },\n\n  derived: {\n    /**\n      * User activation URL\n      * {@link config.credentials.activationUrl}\n      * @type {string}\n      */\n    activationUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return `${this.idbroker.url || 'https://idbroker.webex.com'}/idb/token/v1/actions/UserActivation/invoke`;\n      },\n      cache: false\n    },\n\n\n    /**\n      * Authorization URL which prompts for user's password. Inferred from\n      * {@link config.credentials.authorizationString}\n      * @type {string}\n      */\n    authorizeUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return process.env.AUTHORIZE_URL || `${this.idbroker.url}/idb/oauth2/v1/authorize`;\n      },\n      cache: false\n\n    },\n\n    // TODO does hydra also have an access_token endpoint?\n    /**\n      * Token URL used for token refresh and auth code exchange\n      * @type {string}\n      */\n    tokenUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return process.env.TOKEN_URL || `${this.idbroker.url}/idb/oauth2/v1/access_token`;\n      },\n      cache: false\n    },\n\n    /**\n      * URL to revoke token\n      * @type {string}\n      */\n    revokeUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return process.env.REVOKE_URL || `${this.idbroker.url}/idb/oauth2/v1/revoke`;\n      },\n      cache: false\n    },\n\n    /**\n      * URL to load when the app logs out\n      * @type {string}\n      */\n    logoutUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return `${this.idbroker.url}/idb/oauth2/v1/logout`;\n      },\n      cache: false\n    },\n\n    /**\n      * Set password URL\n      * @type {string}\n      */\n    setPasswordUrl: {\n      deps: ['identity.url'],\n      fn() {\n        return `${this.identity.url || 'https://identity.webex.com'}/identity/scim/v1/Users`;\n      },\n      cache: false\n    }\n\n  }\n\n});\n\nexport default CredentialsConfig;\n"]}