{"version":3,"sources":["config.js"],"names":["maxAppLevelRedirects","maxLocusRedirects","maxAuthenticationReplays","maxReconnectAttempts","onBeforeLogout","trackingIdPrefix","trackingIdSuffix","AlternateLogger","undefined","credentials","CredentialsConfig","services","discovery","hydra","process","env","HYDRA_SERVICE_URL","u2c","U2C_SERVICE_URL","validateDomains","VALIDATE_DOMAINS","allowedDomains","device","preDiscoveryServices","hydraServiceUrl","whitelistedServiceDomains","payloadTransformer","predicates","transforms","storage","boundedAdapter","MemoryStoreAdapter","unboundedAdapter"],"mappings":";;;;;;AAMA;;AACA;;;;;;AAPA;;;;AAIA;;kBAMe;AACbA,wBAAsB,EADT;AAEbC,qBAAmB,CAFN;AAGbC,4BAA0B,CAHb;AAIbC,wBAAsB,CAJT;AAKbC,kBAAgB,EALH;AAMbC,oBAAkB,cANL;AAObC,oBAAkB,EAPL;AAQbC,mBAAiBC,SARJ;AASbC,eAAa,IAAIC,2BAAJ,EATA;AAUbC,YAAU;AACR;;;;;AAKAC,eAAW;AACT;;;;;AAKAC,aAAOC,QAAQC,GAAR,CAAYC,iBAAZ,IAAiC,+BAN/B;;AAQT;;;;;AAKAC,WAAKH,QAAQC,GAAR,CAAYG,eAAZ,IAA+B;AAb3B,KANH;;AAsBR;;;;;AAKAC,qBAAiBL,QAAQC,GAAR,CAAYK,gBAAZ,KAAiC,MAAjC,IAA2C,KA3BpD;;AA6BR;;;;;AAKAC,oBAAgB,CACd,gBADc,EAEd,UAFc,EAGd,UAHc,EAId,gBAJc,EAKd,WALc;AAlCR,GAVG;AAoDbC,UAAQ;AACNC,0BAAsB;AACpBV,aAAOC,QAAQC,GAAR,CAAYC,iBAAZ,IAAiC,+BADpB;AAEpBQ,uBAAiBV,QAAQC,GAAR,CAAYC,iBAAZ,IAAiC;AAF9B,KADhB;AAKNG,qBAAiBL,QAAQC,GAAR,CAAYK,gBAAZ,KAAiC,MAAjC,IAA2C,KALtD;AAMN;AACAK,+BAA2B,CACzB,gBADyB,EAEzB,UAFyB,EAGzB,UAHyB,EAIzB,gBAJyB,EAKzB,WALyB;AAPrB,GApDK;AAmEbC,sBAAoB;AAClBC,gBAAY,EADM;AAElBC,gBAAY;AAFM,GAnEP;AAuEbC,WAAS;AACPC,oBAAgBC,2BADT;AAEPC,sBAAkBD;AAFX;AAvEI,C","file":"config.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint camelcase: [0] */\n\nimport {MemoryStoreAdapter} from './lib/storage';\nimport CredentialsConfig from './credentials-config';\n\n\nexport default {\n  maxAppLevelRedirects: 10,\n  maxLocusRedirects: 5,\n  maxAuthenticationReplays: 1,\n  maxReconnectAttempts: 1,\n  onBeforeLogout: [],\n  trackingIdPrefix: 'webex-js-sdk',\n  trackingIdSuffix: '',\n  AlternateLogger: undefined,\n  credentials: new CredentialsConfig(),\n  services: {\n    /**\n     * A list of services that are available prior to catalog collection.\n     *\n     * @type {Object}\n     */\n    discovery: {\n      /**\n       * The hydra discovery url.\n       *\n       * @type {string}\n       */\n      hydra: process.env.HYDRA_SERVICE_URL || 'https://api.ciscospark.com/v1',\n\n      /**\n       * The u2c discovery url\n       *\n       * @type {string}\n       */\n      u2c: process.env.U2C_SERVICE_URL || 'https://u2c.wbx2.com/u2c/api/v1'\n    },\n\n    /**\n     * When true, enable allowed domain validation.\n     *\n     * @type {boolean}\n     */\n    validateDomains: process.env.VALIDATE_DOMAINS === 'true' || false,\n\n    /**\n     * Contains a list of allowed domain host addresses.\n     *\n     * @type {Array<string>}\n     */\n    allowedDomains: [\n      'webexkubed.com',\n      'wbx3.com',\n      'wbx2.com',\n      'ciscospark.com',\n      'webex.com'\n    ]\n  },\n  device: {\n    preDiscoveryServices: {\n      hydra: process.env.HYDRA_SERVICE_URL || 'https://api.ciscospark.com/v1',\n      hydraServiceUrl: process.env.HYDRA_SERVICE_URL || 'https://api.ciscospark.com/v1'\n    },\n    validateDomains: process.env.VALIDATE_DOMAINS === 'true' || false,\n    // It is okay to pass the auth token to the following domains:\n    whitelistedServiceDomains: [\n      'webexkubed.com',\n      'wbx3.com',\n      'wbx2.com',\n      'ciscospark.com',\n      'webex.com'\n    ]\n  },\n  payloadTransformer: {\n    predicates: [],\n    transforms: []\n  },\n  storage: {\n    boundedAdapter: MemoryStoreAdapter,\n    unboundedAdapter: MemoryStoreAdapter\n  }\n};\n"]}