'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _httpCore = require('@webex/http-core');

var _webexCore = require('@webex/webex-core');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Changes server url when it fails
 */
/*!
 * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.
 */

var ServerErrorInterceptor = function (_Interceptor) {
  (0, _inherits3.default)(ServerErrorInterceptor, _Interceptor);

  function ServerErrorInterceptor() {
    (0, _classCallCheck3.default)(this, ServerErrorInterceptor);
    return (0, _possibleConstructorReturn3.default)(this, (ServerErrorInterceptor.__proto__ || (0, _getPrototypeOf2.default)(ServerErrorInterceptor)).apply(this, arguments));
  }

  (0, _createClass3.default)(ServerErrorInterceptor, [{
    key: 'onResponseError',


    /**
     * @see Interceptor#onResponseError
     * @param {Object} options
     * @param {Object} reason
     * @returns {Object}
     */
    value: function onResponseError(options, reason) {
      if (reason instanceof _webexCore.WebexHttpError.InternalServerError && options.uri) {
        var feature = this.webex.internal.device.features.developer.get('web-high-availability');

        if (feature && feature.value) {
          this.webex.internal.metrics.submitClientMetrics('web-ha', {
            fields: { success: false },
            tags: { action: 'failed', error: reason.message, url: options.uri }
          });

          return _promise2.default.resolve(this.webex.internal.services.markFailedUrl(options.uri)).then(function () {
            return _promise2.default.reject(reason);
          });
        }
      }

      return _promise2.default.reject(reason);
    }
  }], [{
    key: 'create',

    /**
    * @returns {HAMessagingInterceptor}
    */
    value: function create() {
      // eslint-disable-next-line no-invalid-this
      return new ServerErrorInterceptor({ webex: this });
    }
  }]);
  return ServerErrorInterceptor;
}(_httpCore.Interceptor);

exports.default = ServerErrorInterceptor;
//# sourceMappingURL=server-error.js.map
