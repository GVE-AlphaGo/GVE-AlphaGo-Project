{"version":3,"sources":["html-base.js"],"names":["escape","escapeSync","escapeMe","html","resolve","replace","entityReplacer","char"],"mappings":";;;;;;;;;;QAcgBA,M,GAAAA,M;QASAC,U,GAAAA,U;;;;AAvBhB;;;;AAIA,IAAMC,WAAW,UAAjB;;AAEA;AACA;;AAEA;;;;;AAKO,SAASF,MAAT,CAAgBG,IAAhB,EAAsB;AAC3B,SAAO,sBAAY,UAACC,OAAD;AAAA,WAAaA,QAAQH,WAAWE,IAAX,CAAR,CAAb;AAAA,GAAZ,CAAP;AACD;;AAED;;;;;AAKO,SAASF,UAAT,CAAoBE,IAApB,EAA0B;AAC/B,SAAOA,KAAKE,OAAL,CAAaH,QAAb,EAAuBI,cAAvB,CAAP;AACD;;AAED;;;;;AAKA,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,UAAQA,IAAR;AACE,SAAK,GAAL;AACE,aAAO,MAAP;AACF,SAAK,GAAL;AACE,aAAO,MAAP;AACF,SAAK,GAAL;AACE,aAAO,OAAP;AACF;AACE,aAAOA,IAAP;AARJ;AAUD","file":"html-base.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nconst escapeMe = /(<|>|&)/g;\n\n// escape and escapeSync probably don't both need to exist, but it seemed like a\n// good idea in case we ever want to for the future.\n\n/**\n * Escapes HTML\n * @param {[type]} html\n * @returns {[type]}\n */\nexport function escape(html) {\n  return new Promise((resolve) => resolve(escapeSync(html)));\n}\n\n/**\n * Synchronously escape HTML\n * @param {[type]} html\n * @returns {[type]}\n */\nexport function escapeSync(html) {\n  return html.replace(escapeMe, entityReplacer);\n}\n\n/**\n * @param {string} char\n * @private\n * @returns {string}\n */\nfunction entityReplacer(char) {\n  switch (char) {\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '&':\n      return '&amp;';\n    default:\n      return char;\n  }\n}\n"]}