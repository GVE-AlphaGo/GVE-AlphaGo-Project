{"version":3,"sources":["index.js"],"names":["default","ConversationError","InvalidUserCreation","Conversation","payloadTransformer","predicates","name","test","ctx","optionsOrResponse","resolve","extract","body","direction","event","activity","response","multistatus","map","item","data","options","items","transforms","fn","array","all","transform","then","decrypt","object","objectType","content","webex","config","conversation","inboundProcessFunc","allowedInboundTags","allowedInboundStyles","c","outboundProcessFunc","allowedOutboundTags","allowedOutboundStyles","activities","participants","actor","target","person","email","entryEmail","emailAddress","id","entryUUID","patterns","toLowerCase","roomProperties","isModerator","Boolean","uuid","reject","Error","internal","user","asUUID","concat","decryptionTransforms","encryptionTransforms"],"mappings":"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","file":"index.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport '@webex/internal-plugin-encryption';\nimport '@webex/internal-plugin-user';\n\nimport {patterns} from '@webex/common';\nimport {filter as htmlFilter, filterEscape as htmlFilterEscape} from '@webex/helper-html';\nimport {registerInternalPlugin} from '@webex/webex-core';\nimport {capitalize, get, has} from 'lodash';\n\nimport Conversation from './conversation';\nimport config from './config';\nimport {transforms as encryptionTransforms} from './encryption-transforms';\nimport {transforms as decryptionTransforms} from './decryption-transforms';\n\nregisterInternalPlugin('conversation', Conversation, {\n  payloadTransformer: {\n    predicates: [\n      {\n        name: 'transformObject',\n        test(ctx, optionsOrResponse) {\n          return Promise.resolve(has(optionsOrResponse, 'body.objectType'));\n        },\n        extract(optionsOrResponse) {\n          return Promise.resolve(optionsOrResponse.body);\n        }\n      },\n      {\n        name: 'transformObject',\n        direction: 'inbound',\n        test(ctx, event) {\n          return Promise.resolve(has(event, 'activity'));\n        },\n        extract(event) {\n          return Promise.resolve(event.activity);\n        }\n      },\n      {\n        name: 'transformObjectArray',\n        direction: 'inbound',\n        test(ctx, response) {\n          return Promise.resolve(has(response, 'body.multistatus'));\n        },\n        extract(response) {\n          return Promise.resolve(response.body.multistatus.map((item) => item && item.data && item.data.activity));\n        }\n      },\n      {\n        name: 'normalizeConversationListAndBindDecrypters',\n        direction: 'inbound',\n        test(ctx, options) {\n          if (!has(options, 'body.items[0].objectType')) {\n            return Promise.resolve(false);\n          }\n\n          if (get(options, 'options.deferDecrypt')) {\n            return Promise.resolve(true);\n          }\n\n          return Promise.resolve(false);\n        },\n        extract(options) {\n          return Promise.resolve(options.body.items);\n        }\n      },\n      {\n        name: 'transformObjectArray',\n        direction: 'inbound',\n        test(ctx, options) {\n          if (!has(options, 'body.items[0].objectType')) {\n            return Promise.resolve(false);\n          }\n\n          if (get(options, 'options.deferDecrypt')) {\n            return Promise.resolve(false);\n          }\n\n          return Promise.resolve(true);\n        },\n        extract(options) {\n          return Promise.resolve(options.body.items);\n        }\n      }\n    ],\n    transforms: [\n      {\n        name: 'normalizeConversationListAndBindDecrypters',\n        fn(ctx, array) {\n          return Promise.all(array.map((item) => ctx.transform('normalizeObject', item)\n            .then(() => {\n              item.decrypt = function decrypt() {\n                Reflect.deleteProperty(item, 'decrypt');\n\n                return ctx.transform('decryptObject', item);\n              };\n\n              return item;\n            })));\n        }\n      },\n      {\n        name: 'transformObjectArray',\n        fn(ctx, array) {\n          return Promise.all(array.map((item) => ctx.transform('transformObject', item)));\n        }\n      },\n      {\n        name: 'transformObject',\n        direction: 'outbound',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          if (!object.objectType) {\n            return Promise.resolve();\n          }\n\n          return ctx.transform('normalizeObject', object)\n            .then(() => ctx.transform('encryptObject', object))\n            .then(() => ctx.transform('encryptKmsMessage', object));\n        }\n      },\n      {\n        name: 'transformObject',\n        direction: 'inbound',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          if (!object.objectType) {\n            return Promise.resolve();\n          }\n\n          return ctx.transform('decryptObject', object)\n            .then(() => ctx.transform('normalizeObject', object));\n        }\n      },\n      {\n        name: 'normalizeObject',\n        fn(ctx, object) {\n          if (!object) {\n            return Promise.resolve();\n          }\n\n          if (!object.objectType) {\n            return Promise.resolve();\n          }\n\n          return Promise.all([\n            ctx.transform(`normalize${capitalize(object.objectType)}`, object),\n            ctx.transform('normalizePropContent', object)\n          ]);\n        }\n      },\n      {\n        name: 'normalizePropContent',\n        direction: 'inbound',\n        fn(ctx, object) {\n          if (!object.content) {\n            return Promise.resolve();\n          }\n          const {\n            inboundProcessFunc,\n            allowedInboundTags,\n            allowedInboundStyles\n          } = ctx.webex.config.conversation;\n\n          return htmlFilter(inboundProcessFunc, allowedInboundTags || {}, allowedInboundStyles, object.content)\n            .then((c) => {\n              object.content = c;\n            });\n        }\n      },\n      {\n        name: 'normalizePropContent',\n        direction: 'outbound',\n        fn(ctx, object) {\n          if (!object.content) {\n            return Promise.resolve();\n          }\n\n          const {\n            outboundProcessFunc,\n            allowedOutboundTags,\n            allowedOutboundStyles\n          } = ctx.webex.config.conversation;\n\n          return htmlFilterEscape(outboundProcessFunc, allowedOutboundTags || {}, allowedOutboundStyles, object.content)\n            .then((c) => {\n              object.content = c;\n            });\n        }\n      },\n      {\n        name: 'normalizeConversation',\n        fn(ctx, conversation) {\n          conversation.activities = conversation.activities || {};\n          conversation.activities.items = conversation.activities.items || [];\n          conversation.participants = conversation.participants || {};\n          conversation.participants.items = conversation.participants.items || [];\n\n          return Promise.all([\n            Promise.all(conversation.activities.items.map((item) => ctx.transform('normalizeObject', item))),\n            Promise.all(conversation.participants.items.map((item) => ctx.transform('normalizeObject', item)))\n          ]);\n        }\n      },\n      {\n        name: 'normalizeActivity',\n        fn(ctx, activity) {\n          return Promise.all([\n            ctx.transform('normalizeObject', activity.actor),\n            ctx.transform('normalizeObject', activity.object),\n            ctx.transform('normalizeObject', activity.target)\n          ]);\n        }\n      },\n      {\n        name: 'normalizePerson',\n        // eslint-disable-next-line complexity\n        fn(ctx, person) {\n          const email = person.entryEmail || person.emailAddress || person.id;\n          const id = person.entryUUID || person.id;\n\n          if (patterns.email.test(email)) {\n            person.entryEmail = person.emailAddress = email.toLowerCase();\n          }\n          else {\n            Reflect.deleteProperty(person, 'entryEmail');\n            Reflect.deleteProperty(person, 'emailAddress');\n          }\n\n          if (person.roomProperties) {\n            person.roomProperties.isModerator = Boolean(person.roomProperties.isModerator);\n          }\n\n          if (patterns.uuid.test(id)) {\n            person.entryUUID = person.id = id.toLowerCase();\n\n            return Promise.resolve(person);\n          }\n\n          if (!email) {\n            return Promise.reject(new Error('cannot determine id without an `emailAddress` or `entryUUID` property'));\n          }\n\n          return ctx.webex.internal.user.asUUID(email)\n            .then((uuid) => {\n              person.entryUUID = person.id = uuid;\n\n              return person;\n            });\n        }\n      }\n    ]\n      .concat(decryptionTransforms)\n      .concat(encryptionTransforms)\n  },\n  config\n});\n\nexport {default} from './conversation';\nexport {default as ShareActivity} from './share-activity';\nexport {ConversationError, InvalidUserCreation} from './convo-error';\n"]}