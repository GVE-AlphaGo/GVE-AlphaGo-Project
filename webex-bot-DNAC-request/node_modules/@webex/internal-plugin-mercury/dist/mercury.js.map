{"version":3,"sources":["mercury.js"],"names":["normalReconnectReasons","Mercury","WebexPlugin","extend","namespace","session","connected","default","type","connecting","socket","localClusterServiceUrls","derived","listening","deps","fn","connect","webSocketUrl","logger","info","resolve","webex","internal","device","registered","register","then","_connectWithBackoff","disconnect","backoffCall","abort","removeAllListeners","once","close","listen","stopListening","processRegistrationStatusEvent","message","_applyOverrides","event","headers","headerKeys","forEach","keyPath","_prepareUrl","feature","getFeature","haMessagingEnabled","services","convertUrlToPriorityHostUrl","wsUrl","webSharedMercury","url","parse","query","outboundWireFormat","bufferStates","aliasHttpStatus","mercuryRegistrationStatus","isRegistrationRefreshEnabled","multipleConnections","format","_attemptConnection","socketUrl","callback","Socket","attemptWSUrl","on","_onclose","_onmessage","args","_emit","all","credentials","getUserToken","token","options","forceCloseDelay","config","pingInterval","pongTimeout","toString","trackingId","sessionId","Date","now","defaultMercuryOptions","open","metrics","submitClientMetrics","fields","success","tags","action","refresh","catch","reason","code","getNumRetries","retries","UnknownResponse","NotAuthorized","force","BadRequest","Forbidden","warn","ConnectionError","error","markFailedUrl","reject","call","onComplete","err","undefined","backoff","setStrategy","ExponentialStrategy","initialDelay","backoffTimeReset","maxDelay","backoffTimeMax","maxRetries","failAfter","number","delay","Math","min","strategy_","nextBackoffDelay_","process","env","NODE_ENV","debug","stack","start","trigger","_getEventHandlers","eventType","split","name","handlers","handlerName","push","toLowerCase","unset","_reconnect","includes","envelope","data","ENABLE_MERCURY_LOGGING","reduce","promise","handler","oneFlight"],"mappings":"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","file":"mercury.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport url from 'url';\n\nimport {WebexPlugin} from '@webex/webex-core';\nimport {deprecated, oneFlight} from '@webex/common';\nimport {camelCase, get, set} from 'lodash';\nimport backoff from 'backoff';\n\nimport Socket from './socket';\nimport {\n  BadRequest,\n  Forbidden,\n  NotAuthorized,\n  UnknownResponse,\n  ConnectionError\n  // NotFound\n} from './errors';\n\nconst normalReconnectReasons = [\n  'idle',\n  'done (forced)',\n  'pong not received',\n  'pong mismatch'\n];\n\nconst Mercury = WebexPlugin.extend({\n  namespace: 'Mercury',\n\n  session: {\n    connected: {\n      default: false,\n      type: 'boolean'\n    },\n    connecting: {\n      default: false,\n      type: 'boolean'\n    },\n    socket: 'object',\n    localClusterServiceUrls: 'object'\n  },\n\n  derived: {\n    listening: {\n      deps: ['connected'],\n      fn() {\n        return this.connected;\n      }\n    }\n  },\n\n  @oneFlight\n  connect(webSocketUrl) {\n    if (this.connected) {\n      this.logger.info('mercury: already connected, will not connect again');\n\n      return Promise.resolve();\n    }\n\n    this.connecting = true;\n\n    return Promise.resolve(this.webex.internal.device.registered || this.webex.internal.device.register())\n      .then(() => {\n        this.logger.info('mercury: connecting');\n\n        return this._connectWithBackoff(webSocketUrl);\n      });\n  },\n\n  @oneFlight\n  disconnect() {\n    return new Promise((resolve) => {\n      if (this.backoffCall) {\n        this.logger.info('mercury: aborting connection');\n        this.backoffCall.abort();\n      }\n\n      if (this.socket) {\n        this.socket.removeAllListeners('message');\n        this.once('offline', resolve);\n        this.socket.close();\n\n        return;\n      }\n\n      resolve();\n    });\n  },\n\n  @deprecated('Mercury#listen(): Use Mercury#connect() instead')\n  listen() {\n    /* eslint no-invalid-this: [0] */\n    return this.connect();\n  },\n\n  @deprecated('Mercury#stopListening(): Use Mercury#disconnect() instead')\n  stopListening() {\n    /* eslint no-invalid-this: [0] */\n    return this.disconnect();\n  },\n\n  processRegistrationStatusEvent(message) {\n    this.localClusterServiceUrls = message.localClusterServiceUrls;\n  },\n\n  _applyOverrides(event) {\n    if (!event || !event.headers) {\n      return;\n    }\n    const headerKeys = Object.keys(event.headers);\n\n    headerKeys.forEach((keyPath) => {\n      set(event, keyPath, event.headers[keyPath]);\n    });\n  },\n\n  _prepareUrl(webSocketUrl) {\n    if (!webSocketUrl) {\n      webSocketUrl = this.webex.internal.device.webSocketUrl;\n    }\n\n    return this.webex.internal.feature.getFeature('developer', 'web-high-availability')\n      .then((haMessagingEnabled) => {\n        if (haMessagingEnabled) {\n          return this.webex.internal.services.convertUrlToPriorityHostUrl(webSocketUrl);\n        }\n\n        return webSocketUrl;\n      })\n      .then((wsUrl) => {\n        webSocketUrl = wsUrl;\n      })\n      .then(() => this.webex.internal.feature.getFeature('developer', 'web-shared-mercury'))\n      .then((webSharedMercury) => {\n        webSocketUrl = url.parse(webSocketUrl, true);\n        Object.assign(webSocketUrl.query, {\n          outboundWireFormat: 'text',\n          bufferStates: true,\n          aliasHttpStatus: true\n        });\n\n        if (webSharedMercury) {\n          Object.assign(webSocketUrl.query, {\n            mercuryRegistrationStatus: true,\n            isRegistrationRefreshEnabled: true\n          });\n          Reflect.deleteProperty(webSocketUrl.query, 'bufferStates');\n        }\n\n        if (get(this, 'webex.config.device.ephemeral', false)) {\n          webSocketUrl.query.multipleConnections = true;\n        }\n\n        return url.format(webSocketUrl);\n      });\n  },\n\n  _attemptConnection(socketUrl, callback) {\n    const socket = new Socket();\n    let attemptWSUrl;\n\n    socket.on('close', (...args) => this._onclose(...args));\n    socket.on('message', (...args) => this._onmessage(...args));\n    socket.on('sequence-mismatch', (...args) => this._emit('sequence-mismatch', ...args));\n\n    Promise.all([this._prepareUrl(socketUrl), this.webex.credentials.getUserToken()])\n      .then(([webSocketUrl, token]) => {\n        attemptWSUrl = webSocketUrl;\n\n        let options = {\n          forceCloseDelay: this.config.forceCloseDelay,\n          pingInterval: this.config.pingInterval,\n          pongTimeout: this.config.pongTimeout,\n          token: token.toString(),\n          trackingId: `${this.webex.sessionId}_${Date.now()}`,\n          logger: this.logger\n        };\n\n        // if the consumer has supplied request options use them\n        if (this.webex.config.defaultMercuryOptions) {\n          this.logger.info('mercury: setting custom options');\n          options = {...options, ...this.webex.config.defaultMercuryOptions};\n        }\n\n        return socket.open(webSocketUrl, options);\n      })\n      .then(() => {\n        this.socket = socket;\n        this.webex.internal.metrics.submitClientMetrics('web-ha-mercury', {\n          fields: {\n            success: true\n          },\n          tags: {\n            action: 'connected',\n            url: attemptWSUrl\n          }\n        });\n        callback();\n\n        return this.webex.internal.feature.getFeature('developer', 'web-high-availability')\n          .then((haMessagingEnabled) => {\n            if (haMessagingEnabled) {\n              return this.webex.internal.device.refresh();\n            }\n\n            return Promise.resolve();\n          });\n      })\n      .catch((reason) => {\n        // Suppress connection errors that appear to be network related. This\n        // may end up suppressing metrics during outages, but we might not care\n        // (especially since many of our outages happen in a way that client\n        // metrics can't be trusted).\n        if (reason.code !== 1006 && this.backoffCall && this.backoffCall.getNumRetries() > 0) {\n          this._emit('connection_failed', reason, {retries: this.backoffCall.getNumRetries()});\n        }\n        this.logger.info('mercury: connection attempt failed', reason);\n        // UnknownResponse is produced by IE for any 4XXX; treated it like a bad\n        // web socket url and let WDM handle the token checking\n        if (reason instanceof UnknownResponse) {\n          this.logger.info('mercury: received unknown response code, refreshing device registration');\n\n          return this.webex.internal.device.refresh()\n            .then(() => callback(reason));\n        }\n        // NotAuthorized implies expired token\n        if (reason instanceof NotAuthorized) {\n          this.logger.info('mercury: received authorization error, reauthorizing');\n\n          return this.webex.credentials.refresh({force: true})\n            .then(() => callback(reason));\n        }\n        // // NotFound implies expired web socket url\n        // else if (reason instanceof NotFound) {\n        //   this.logger.info(`mercury: received not found error, refreshing device registration`);\n        //   return this.webex.internal.device.refresh()\n        //     .then(() => callback(reason));\n        // }\n        // BadRequest implies current credentials are for a Service Account\n        // Forbidden implies current user is not entitle for Webex\n        if (reason instanceof BadRequest || reason instanceof Forbidden) {\n          this.logger.warn('mercury: received unrecoverable response from mercury');\n          this.backoffCall.abort();\n\n          return callback(reason);\n        }\n        if (reason instanceof ConnectionError) {\n          return this.webex.internal.feature.getFeature('developer', 'web-high-availability')\n            .then((haMessagingEnabled) => {\n              if (haMessagingEnabled) {\n                this.logger.info('mercury: received a generic connection error, will try to connect to another datacenter');\n                this.webex.internal.metrics.submitClientMetrics('web-ha-mercury', {\n                  fields: {\n                    success: false\n                  },\n                  tags: {\n                    action: 'failed',\n                    error: reason.message,\n                    url: attemptWSUrl\n                  }\n                });\n\n                return this.webex.internal.services.markFailedUrl(attemptWSUrl);\n              }\n\n              return null;\n            })\n            .then(() => callback(reason));\n        }\n\n        return callback(reason);\n      })\n      .catch((reason) => {\n        this.logger.error('mercury: failed to handle connection failure', reason);\n        callback(reason);\n      });\n  },\n\n  _connectWithBackoff(webSocketUrl) {\n    return new Promise((resolve, reject) => {\n      // eslint gets confused about whether or not call is actually used\n      // eslint-disable-next-line prefer-const\n      let call;\n      const onComplete = (err) => {\n        this.connecting = false;\n\n        this.backoffCall = undefined;\n        if (err) {\n          this.logger.info(`mercury: failed to connect after ${call.getNumRetries()} retries; log statement about next retry was inaccurate`);\n\n          return reject(err);\n        }\n        this.connected = true;\n        this._emit('online');\n\n        return resolve();\n      };\n\n      // eslint-disable-next-line prefer-reflect\n      call = backoff.call((callback) => {\n        this.logger.info(`mercury: executing connection attempt ${call.getNumRetries()}`);\n        this._attemptConnection(webSocketUrl, callback);\n      }, onComplete);\n\n      call.setStrategy(new backoff.ExponentialStrategy({\n        initialDelay: this.config.backoffTimeReset,\n        maxDelay: this.config.backoffTimeMax\n      }));\n\n      if (this.config.maxRetries) {\n        call.failAfter(this.config.maxRetries);\n      }\n\n      call.on('abort', () => {\n        this.logger.info('mercury: connection aborted');\n        reject();\n      });\n\n      call.on('callback', (err) => {\n        if (err) {\n          const number = call.getNumRetries();\n          const delay = Math.min(call.strategy_.nextBackoffDelay_, this.config.backoffTimeMax);\n\n          this.logger.info(`mercury: failed to connect; attempting retry ${number + 1} in ${delay} ms`);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV === 'development') {\n            this.logger.debug('mercury: ', err, err.stack);\n          }\n\n          return;\n        }\n        this.logger.info('mercury: connected');\n      });\n\n      call.start();\n\n      this.backoffCall = call;\n    });\n  },\n\n  _emit(...args) {\n    try {\n      this.trigger(...args);\n    }\n    catch (error) {\n      this.logger.error('mercury: error occurred in event handler', error);\n    }\n  },\n\n  _getEventHandlers(eventType) {\n    const [namespace, name] = eventType.split('.');\n    const handlers = [];\n\n    if (!this.webex[namespace] && !this.webex.internal[namespace]) {\n      return handlers;\n    }\n\n    const handlerName = camelCase(`process_${name}_event`);\n\n    if ((this.webex[namespace] || this.webex.internal[namespace])[handlerName]) {\n      handlers.push({\n        name: handlerName,\n        namespace\n      });\n    }\n\n    return handlers;\n  },\n\n  _onclose(event) {\n    // I don't see any way to avoid the complexity or statement count in here.\n    /* eslint complexity: [0] */\n\n    try {\n      const reason = event.reason && event.reason.toLowerCase();\n\n      this.socket.removeAllListeners();\n      this.unset('socket');\n      this.connected = false;\n      this._emit('offline', event);\n\n      switch (event.code) {\n        case 1003:\n        // metric: disconnect\n          this.logger.info(`mercury: Mercury service rejected last message; will not reconnect: ${event.reason}`);\n          this._emit('offline.permanent', event);\n          break;\n        case 4000:\n          // metric: disconnect\n          this.logger.info('mercury: socket replaced; will not reconnect');\n          this._emit('offline.replaced', event);\n          break;\n        case 1001:\n        case 1005:\n        case 1006:\n        case 1011:\n          this.logger.info('mercury: socket disconnected; reconnecting');\n          this._emit('offline.transient', event);\n          this._reconnect();\n          // metric: disconnect\n          // if (code == 1011 && reason !== ping error) metric: unexpected disconnect\n          break;\n        case 1000:\n          if (normalReconnectReasons.includes(reason)) {\n            this.logger.info('mercury: socket disconnected; reconnecting');\n            this._emit('offline.transient', event);\n            this._reconnect();\n            // metric: disconnect\n            // if (reason === done forced) metric: force closure\n          }\n          else {\n            this.logger.info('mercury: socket disconnected; will not reconnect');\n            this._emit('offline.permanent', event);\n          }\n          break;\n        default:\n          this.logger.info('mercury: socket disconnected unexpectedly; will not reconnect');\n          // unexpected disconnect\n          this._emit('offline.permanent', event);\n      }\n    }\n    catch (error) {\n      this.logger.error('mercury: error occurred in close handler', error);\n    }\n  },\n\n  _onmessage(event) {\n    const envelope = event.data;\n\n    if (process.env.ENABLE_MERCURY_LOGGING) {\n      this.logger.debug('mercury: message envelope: ', envelope);\n    }\n\n    const {data} = envelope;\n\n    this._applyOverrides(data);\n\n    return this._getEventHandlers(data.eventType)\n      .reduce((promise, handler) => promise.then(() => {\n        const {namespace, name} = handler;\n\n        return new Promise((resolve) => resolve((this.webex[namespace] || this.webex.internal[namespace])[name](data)))\n          .catch((reason) => this.logger.error(`mercury: error occurred in autowired event handler for ${data.eventType}`, reason));\n      }), Promise.resolve())\n      .then(() => {\n        this._emit('event', event.data);\n        const [namespace] = data.eventType.split('.');\n\n        if (namespace === data.eventType) {\n          this._emit(`event:${namespace}`, envelope);\n        }\n        else {\n          this._emit(`event:${namespace}`, envelope);\n          this._emit(`event:${data.eventType}`, envelope);\n        }\n      })\n      .catch((reason) => {\n        this.logger.error('mercury: error occurred processing socket message', reason);\n      });\n  },\n\n  _reconnect(webSocketUrl) {\n    this.logger.info('mercury: reconnecting');\n\n    return this.connect(webSocketUrl);\n  }\n});\n\nexport default Mercury;\n"]}