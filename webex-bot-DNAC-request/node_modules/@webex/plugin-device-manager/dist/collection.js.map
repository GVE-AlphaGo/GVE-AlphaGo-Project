{"version":3,"sources":["collection.js"],"names":["DeviceCollection","devices","get","deviceId","set","device","id","identity","existingDevice","reset","getAll"],"mappings":";;;;;;;;;;;;;;;;AAEA,IAAMA,mBAAmB;AACvBC,WAAS,EADc;;AAGvBC,KAHuB,eAGnBC,QAHmB,EAGT;AACZ,WAAO,KAAKF,OAAL,CAAaE,QAAb,CAAP;AACD,GALsB;AAOvBC,KAPuB,eAOnBC,MAPmB,EAOX;AACV,QAAMF,WAAWE,OAAOC,EAAP,IAAaD,OAAOE,QAAP,IAAmBF,OAAOE,QAAP,CAAgBD,EAAjE;AACA;AACA,QAAME,iBAAiB,KAAKP,OAAL,CAAaE,QAAb,CAAvB;;AAEA,QAAIK,cAAJ,EAAoB;AAClB;AACA,2BAAMA,cAAN,EAAsBH,MAAtB;AACD,KAHD,MAIK;AACH,WAAKJ,OAAL,CAAaE,QAAb,IAAyBE,MAAzB;AACD;AACF,GAnBsB;AAqBvBI,OArBuB,mBAqBf;AACN,SAAKR,OAAL,GAAe,EAAf;AACD,GAvBsB;AAyBvBS,QAzBuB,oBAyBd;AACP,WAAO,sBAAc,KAAKT,OAAnB,CAAP;AACD;AA3BsB,CAAzB;;kBA+BeD,gB","file":"collection.js","sourcesContent":["import {merge} from 'lodash';\n\nconst DeviceCollection = {\n  devices: {},\n\n  get(deviceId) {\n    return this.devices[deviceId];\n  },\n\n  set(device) {\n    const deviceId = device.id || device.identity && device.identity.id;\n    // check if the device is already existing, if so then merge else add\n    const existingDevice = this.devices[deviceId];\n\n    if (existingDevice) {\n      // already existing, merge for any new binding information\n      merge(existingDevice, device);\n    }\n    else {\n      this.devices[deviceId] = device;\n    }\n  },\n\n  reset() {\n    this.devices = {};\n  },\n\n  getAll() {\n    return Object.values(this.devices);\n  }\n\n};\n\nexport default DeviceCollection;\n"]}