'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _values = require('babel-runtime/core-js/object/values');

var _values2 = _interopRequireDefault(_values);

var _merge2 = require('lodash/merge');

var _merge3 = _interopRequireDefault(_merge2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DeviceCollection = {
  devices: {},

  get: function get(deviceId) {
    return this.devices[deviceId];
  },
  set: function set(device) {
    var deviceId = device.id || device.identity && device.identity.id;
    // check if the device is already existing, if so then merge else add
    var existingDevice = this.devices[deviceId];

    if (existingDevice) {
      // already existing, merge for any new binding information
      (0, _merge3.default)(existingDevice, device);
    } else {
      this.devices[deviceId] = device;
    }
  },
  reset: function reset() {
    this.devices = {};
  },
  getAll: function getAll() {
    return (0, _values2.default)(this.devices);
  }
};

exports.default = DeviceCollection;
//# sourceMappingURL=collection.js.map
