{"version":3,"sources":["user-uuid-batcher.js"],"names":["AbstractUserUUIDRequestBatcher","Batcher","extend","namespace","prepareItem","item","resolve","email","handleHttpSuccess","res","all","body","map","id","handleItemSuccess","handleItemFailure","response","getDeferredForResponse","then","defer","reject","fingerprintRequest","fingerprintResponse","FakeUserUUIDRequestBatcher","submitHttpRequest","payload","webex","request","method","service","resource","RealUserUUIDRequestBatcher","qs","shouldCreateUsers","UserUUIDBatcher","WebexPlugin","children","faker","creator","create"],"mappings":"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","file":"user-uuid-batcher.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Batcher, WebexPlugin} from '@webex/webex-core';\n\n/**\n * @class\n */\nconst AbstractUserUUIDRequestBatcher = Batcher.extend({\n  namespace: 'User',\n\n  /**\n   * @param {string} item\n   * @returns {Promise<Object>}\n   */\n  prepareItem(item) {\n    return Promise.resolve({email: item});\n  },\n\n  /**\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess(res) {\n    return Promise.all(Object.keys(res.body).map((email) => {\n      if (res.body[email] && res.body[email].id) {\n        return this.handleItemSuccess(email, res.body[email]);\n      }\n\n      return this.handleItemFailure(email, res.body[email]);\n    }));\n  },\n\n  handleItemFailure(email, response) {\n    return this.getDeferredForResponse(email)\n      .then((defer) => {\n        defer.reject(response);\n      });\n  },\n\n  /**\n   * @param {string} email\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess(email, response) {\n    return this.getDeferredForResponse(email)\n      .then((defer) => {\n        defer.resolve(response);\n      });\n  },\n\n  /**\n   * @param {string} email\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest(email) {\n    return Promise.resolve(email.email || email);\n  },\n\n  /**\n   * @param {string} email\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse(email) {\n    return Promise.resolve(email);\n  }\n});\n\n/**\n * @class\n */\nconst FakeUserUUIDRequestBatcher = AbstractUserUUIDRequestBatcher.extend({\n  /**\n   * @param {Object} payload\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest(payload) {\n    return this.webex.request({\n      method: 'POST',\n      service: 'conversation',\n      resource: '/users',\n      body: payload\n    });\n  }\n});\n\n/**\n * @class\n */\nconst RealUserUUIDRequestBatcher = AbstractUserUUIDRequestBatcher.extend({\n  /**\n   * @param {Object} payload\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest(payload) {\n    return this.webex.request({\n      method: 'POST',\n      service: 'conversation',\n      resource: '/users',\n      body: payload,\n      qs: {\n        shouldCreateUsers: true\n      }\n    });\n  }\n});\n\n/**\n * @class\n */\nconst UserUUIDBatcher = WebexPlugin.extend({\n  children: {\n    faker: FakeUserUUIDRequestBatcher,\n    creator: RealUserUUIDRequestBatcher\n  },\n\n  /**\n   * @param {Object} payload\n   * @returns {Promise<Object>}\n   */\n  request(payload) {\n    return payload.create ? this.creator.request(payload.email) : this.faker.request(payload.email);\n  }\n});\n\nexport default UserUUIDBatcher;\n"]}