{"version":3,"sources":["stats.js"],"names":["MeetingStats","attrs","options","optionalCreateOptions","namespace","MEETINGS","peerConnection","RTCRtpDirection","history","mqa","stream","filter","events","id","populate","withHistory","withMQA","media","withFilter","withStream","withId","onClose","TypeError","onEvent","withEventsHistory","withEvents","onData","data","add","isEmpty","omit","event","cbFn","on","STATS","DATA","filtered","doHistory","doMQA","doEvents","END","err","StatsError","cb","StatsEvents","setEvents","StatsHistory","config","stats","historyMax","setHistory","MQA_STATS","MQA_SIZE","setMQA","transceiverDirection","StatsStream","rTCRtpDirection","interval","setStream","setFilter","StatsFilter","getStream","pipe","getFilter","setId","uuid","v4","StatelessWebexPlugin"],"mappings":"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","file":"stats.js","sourcesContent":["import {StatelessWebexPlugin} from '@webex/webex-core';\nimport {isFunction} from 'lodash';\nimport {uuid} from 'uuid';\n\nimport {\n  MEETINGS,\n  STATS,\n  MQA_STATS\n} from '../constants';\nimport StatsHistory from '../stats/history';\nimport StatsStream from '../stats/stream';\nimport StatsFilter from '../stats/filter';\nimport StatsEvents from '../stats/events';\nimport StatsError from '../common/errors/stats';\n\n/**\n * @class MeetingStats\n */\nexport default class MeetingStats extends StatelessWebexPlugin {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} attrs\n   * @param {Object} options\n   * @param {Object} [optionalCreateOptions]\n   * @param {Boolean} optionalCreateOptions.history\n   * @param {Boolean} optionalCreateOptions.mqa\n   * @param {RTCRtpSender|RTCRtpReceiver} optionalCreateOptions.stream\n   * @param {RTCRtpSender|RTCRtpReceiver} optionalCreateOptions.filter\n   * @param {RTCPeerConnection} optionalCreateOptions.media\n   * @param {String} optionalCreateOptions.id\n   * @param {Function} optionalCreateOptions.onClose\n   * @param {Function} optionalCreateOptions.onEvent\n   * @param {Function} optionalCreateOptions.onData\n   * if using filter or stream, media must also exist\n   */\n  constructor(attrs, options, optionalCreateOptions) {\n    super({}, options);\n    this.attrs = attrs;\n    this.options = options;\n    // what this stats object is configured to work with\n    /**\n     * @instance\n     * @type {RTCPeerConnection}\n     * @private\n     * @memberof MeetingStats\n     */\n    this.peerConnection = null;\n    /**\n     * @instance\n     * @type {RTCRtpSender|RTCRtpReceiver}\n     * @private\n     * @memberof MeetingStats\n     */\n    this.RTCRtpDirection = null;\n    // usable values\n    /**\n     * @instance\n     * @type {StatsHistory}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.history = null;\n    /**\n     * @instance\n     * @type {StatsHistory}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.mqa = null;\n    /**\n     * @instance\n     * @type {ReadableStream}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.stream = null;\n    /**\n     * @instance\n     * @type {TransformStream}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.filter = null;\n    /**\n     * @instance\n     * @type {StatsEvents}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.events = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @private\n     * @memberof MeetingStats\n     */\n    this.id = null;\n    this.populate(optionalCreateOptions);\n  }\n\n  /**\n   * @param {Object} [optionalCreateOptions]\n   * @returns {undefined}\n   * @private\n   * @memberof MeetingStats\n   */\n  populate(optionalCreateOptions) {\n    if (optionalCreateOptions) {\n      if (optionalCreateOptions.history) {\n        this.withHistory();\n      }\n      if (optionalCreateOptions.mqa) {\n        this.withMQA();\n      }\n      if (optionalCreateOptions.filter && !optionalCreateOptions.stream && optionalCreateOptions.media) {\n        this.withFilter(optionalCreateOptions.filter, optionalCreateOptions.media);\n      }\n      if (optionalCreateOptions.stream && !optionalCreateOptions.filter && optionalCreateOptions.media) {\n        this.withStream(optionalCreateOptions.stream, optionalCreateOptions.media);\n      }\n      if (optionalCreateOptions.id) {\n        this.withId(optionalCreateOptions.id);\n      }\n      if (optionalCreateOptions.onClose) {\n        if (!isFunction(optionalCreateOptions.onClose)) {\n          throw new TypeError('stats->populate#onClose must be a callback function for filtered data.');\n        }\n        this.onClose(optionalCreateOptions.onClose);\n      }\n      if (optionalCreateOptions.onEvent) {\n        if (!isFunction(optionalCreateOptions.onEvent)) {\n          throw new TypeError('stats->populate#onEvent must be a callback function for filtered data.');\n        }\n        if (this.history) {\n          this.withEventsHistory(this.history, optionalCreateOptions.onEvent);\n        }\n        else {\n          this.withEvents(optionalCreateOptions.onEvent);\n        }\n      }\n      if (optionalCreateOptions.onData) {\n        if (!isFunction(optionalCreateOptions.onData)) {\n          throw new TypeError('stats->populate#onData must be a callback function for filtered data.');\n        }\n        this.onData(optionalCreateOptions.onData);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  doHistory(data) {\n    if (this.history) {\n      this.history.add(data);\n    }\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  doMQA(data) {\n    if (this.mqa && data.data) {\n      if (!data.data.isEmpty()) {\n        this.mqa.add(data.data.omit());\n      }\n    }\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  doEvents(data) {\n    if (this.events) {\n      this.events.event(data);\n    }\n  }\n\n  /**\n   * does all the work for the built properties\n   * calls back a function with data from piped stream filter\n   * @param {Function} cbFn\n   * @returns {undefined}\n   * @throws {Error} if the filter stream does not exist\n   * @private\n   * @memberof MeetingStats\n   */\n  onData(cbFn) {\n    if (!this.filter) {\n      throw new TypeError('The stats sender/receiver filter must be set up before data can be processed.');\n    }\n    this.filter.on(STATS.DATA, (filtered) => {\n      this.doHistory(filtered);\n      this.doMQA(filtered);\n      this.doEvents(filtered);\n      cbFn(filtered);\n    });\n\n    return this;\n  }\n\n  /**\n   * triggered if the data stream closes\n   * calls back a function with error\n   * @param {Function} cbFn\n   * @returns {undefined}\n   * @private\n   * @memberof MeetingStats\n   */\n  onClose(cbFn) {\n    if (!this.filter) {\n      throw new TypeError('the stats sender/receiver filter must be set up before data can be closed.');\n    }\n    this.stream.on(STATS.END, (err) => {\n      if (!err) {\n        err = new StatsError(`The stats stream for id: ${this.id} ended.`);\n      }\n      cbFn(err);\n    });\n\n    return this;\n  }\n\n  /**\n   * constructs an event object on this instance\n   * @param {StatsHistory} history\n   * @param {Function} cb\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withEventsHistory(history, cb) {\n    const events = new StatsEvents(history, cb);\n\n    this.setEvents(events);\n\n    return this;\n  }\n\n  /**\n   * constructs an event object on this instance\n   * @param {Function} cb\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withEvents(cb) {\n    const events = new StatsEvents(null, cb);\n\n    this.setEvents(events);\n\n    return this;\n  }\n\n  /**\n   * constructs a history object on this instance\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withHistory() {\n    const history = new StatsHistory(this.config.stats.historyMax);\n\n    this.setHistory(history);\n\n    return this;\n  }\n\n  /**\n   * constructs a history object on this instance\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withMQA() {\n    const mqa = new StatsHistory(MQA_STATS.MQA_SIZE);\n\n    this.setMQA(mqa);\n\n    return this;\n  }\n\n  /**\n   * constructs a readable stream object on this instance\n   * @param {RTCRtpReceiver|RTCRtpSender} transceiverDirection\n   * @param {RTCPeerConnection} peerConnection\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withStream(transceiverDirection, peerConnection) {\n    const stream = new StatsStream({\n      rTCRtpDirection: transceiverDirection,\n      peerConnection,\n      interval: this.config.stats.interval\n    });\n\n    this.setStream(stream);\n\n    return this;\n  }\n\n  /**\n   * @param {RTCRtpReceiver|RTCRtpSender} transceiverDirection\n   * @param {RTCPeerConnection} peerConnection\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withFilter(transceiverDirection, peerConnection) {\n    this.withStream(transceiverDirection, peerConnection);\n    this.setFilter(new StatsFilter());\n    this.getStream().pipe(this.getFilter());\n\n    return this;\n  }\n\n  /**\n   * constructs an id to match this stats object\n   * takes params as precedence\n   * @param {String} id\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  withId(id) {\n    if (id) {\n      this.setId(id);\n    }\n    else {\n      this.setId(uuid.v4());\n    }\n\n    return this;\n  }\n\n  /**\n   * @returns {MeetingStats}\n   * @public\n   * @memberof MeetingStats\n   */\n  build() {\n    return this;\n  }\n\n  /**\n   * @param {String} id\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setId(id) {\n    this.id = id;\n  }\n\n  /**\n   * @param {StatsHistory} history\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setHistory(history) {\n    this.history = history;\n  }\n\n  /**\n   * @param {StatsHistory} mqa\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setMQA(mqa) {\n    this.mqa = mqa;\n  }\n\n  /**\n   * @param {StatsEvent} events\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setEvents(events) {\n    this.events = events;\n  }\n\n  /**\n   * @param {Readable} stream\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setStream(stream) {\n    this.stream = stream;\n  }\n\n  /**\n   * @param {Transform} filter\n   * @returns {undefined}\n   * @public\n   * @memberof MeetingStats\n   */\n  setFilter(filter) {\n    this.filter = filter;\n  }\n\n  /**\n   * @returns {String}\n   * @public\n   * @memberof MeetingStats\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * @returns {StatsHistory}\n   * @public\n   * @memberof MeetingStats\n   */\n  getHistory() {\n    return this.history;\n  }\n\n  /**\n   * @returns {StatsHistory}\n   * @public\n   * @memberof MeetingStats\n   */\n  getMQA() {\n    return this.mqa;\n  }\n\n  /**\n   * @returns {StatsEvents}\n   * @public\n   * @memberof MeetingStats\n   */\n  getEvents() {\n    return this.events;\n  }\n\n  /**\n   * @returns {Readable}\n   * @public\n   * @memberof MeetingStats\n   */\n  getStream() {\n    return this.stream;\n  }\n\n  /**\n   * @returns {Transform}\n   * @public\n   * @memberof MeetingStats\n   */\n  getFilter() {\n    return this.filter;\n  }\n}\n"]}