{"version":3,"sources":["data.js"],"names":["WebRTCData","data","id","uuid","v4","flat","forEach","key","DEFAULT_OMISSION_DATA_KEYS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;;;AAEA;AACA;;;IAGqBA,U;AACnB;;;AAGA,sBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUC,eAAKC,EAAL,EAAV;AACD;;AAED;;;;;;;;2BAIO;AAAA;;AACL,UAAMC,OAAO,EAAb;;AAEA,0BAAY,KAAKJ,IAAjB,EAAuBK,OAAvB,CAA+B,UAACC,GAAD,EAAS;AACtCF,aAAKE,GAAL,IAAY,oBAAK,MAAKN,IAAL,CAAUM,GAAV,CAAL,EAAqBC,qCAArB,CAAZ;AACD,OAFD;;AAIA,aAAOH,IAAP;AACD;;AAED;;;;;;;8BAIU;AACR,aAAO,uBAAQ,KAAKJ,IAAb,CAAP;AACD;;AAED;;;;;;;4BAIQ;AACN,aAAO,KAAKC,EAAZ;AACD;;AAED;;;;;;;8BAIU;AACR,aAAO,KAAKD,IAAZ;AACD;;;;;kBA7CkBD,U","file":"data.js","sourcesContent":["import uuid from 'uuid';\nimport {isEmpty, omit} from 'lodash';\n\nimport {DEFAULT_OMISSION_DATA_KEYS} from '../constants';\n\n// TODO: Break this up a bit more, so that consumers aren't calling data.data.getData()\n/**\n * @class WebRTCData\n */\nexport default class WebRTCData {\n  /**\n   * @param {Object} data\n   */\n  constructor(data) {\n    this.data = data;\n    this.id = uuid.v4();\n  }\n\n  /**\n   * get omitted rtc/rtcp/rtp/track/transport/candidate data with omitted data (default)\n   * @returns {Object}\n   */\n  omit() {\n    const flat = {};\n\n    Object.keys(this.data).forEach((key) => {\n      flat[key] = omit(this.data[key], DEFAULT_OMISSION_DATA_KEYS);\n    });\n\n    return flat;\n  }\n\n  /**\n   * returns if the data is empty\n   * @returns {Boolean};\n   */\n  isEmpty() {\n    return isEmpty(this.data);\n  }\n\n  /**\n   * get the unique id for this specific stat pull\n   * @returns {String};\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * get the transformed data\n   * @returns {Object}\n   */\n  getData() {\n    return this.data;\n  }\n}\n"]}