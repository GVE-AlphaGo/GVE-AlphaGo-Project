'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
  * Metrics Payload Event
  * Emitted when a Metric Payload is available
  * @event metrics:payload
  * @instance
  * @type {Object}
  * @memberof MediaMetrics
  */

/**
 * @class MediaMetrics
 * @private
 */
var MediaMetrics = function () {

  /**
   * @param {Object} options
   * @param {Object} options.config
   * @memberof MediaMetrics
   * @constructor
   */
  function MediaMetrics() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck3.default)(this, MediaMetrics);
    this.namespace = _constants.MEETINGS;

    this.config = options.config;
    this.stats = null;
  }

  /**
   * @param {MeetingStats} stats
   * @returns {undefined}
   * @memberof MediaMetrics
   */


  (0, _createClass3.default)(MediaMetrics, [{
    key: 'setStats',
    value: function setStats(stats) {
      this.stats = stats;
    }

    /**
     * sets up all the default senders and receivers getStats to collect data
     * @returns {Object}
     * @public
     * @memberof MediaMetrics
     */

  }, {
    key: 'initialize',
    value: function initialize() {
      var mqa = this.config.metrics.autoSendMQA;

      return {
        useConfig: true,
        senders: [{
          id: _constants.STATS.AUDIO_SENDER_ID,
          correlate: _constants.STATS.AUDIO_CORRELATE,
          mqa: mqa,
          onData: function onData() {}
        }, {
          id: _constants.STATS.VIDEO_SENDER_ID,
          correlate: _constants.STATS.VIDEO_CORRELATE,
          mqa: mqa,
          onData: function onData() {}
        }, {
          id: _constants.STATS.SHARE_SENDER_ID,
          correlate: _constants.STATS.SHARE_CORRELATE,
          mqa: mqa,
          onData: function onData() {}
        }],
        receivers: [{
          id: _constants.STATS.AUDIO_RECEIVER_ID,
          correlate: _constants.STATS.AUDIO_CORRELATE,
          mqa: mqa,
          onData: function onData() {}
        }, {
          id: _constants.STATS.VIDEO_RECEIVER_ID,
          correlate: _constants.STATS.VIDEO_CORRELATE,
          mqa: mqa,
          onData: function onData() {}
        }, {
          id: _constants.STATS.SHARE_RECEIVER_ID,
          correlate: _constants.STATS.SHARE_CORRELATE,
          mqa: mqa,
          onData: function onData() {}
        }]
      };
    }
  }]);
  return MediaMetrics;
}();

exports.default = MediaMetrics;
//# sourceMappingURL=metrics.js.map
