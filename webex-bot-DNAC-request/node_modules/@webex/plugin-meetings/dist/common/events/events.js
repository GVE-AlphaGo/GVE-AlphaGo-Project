'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = require('babel-runtime/helpers/get');

var _get3 = _interopRequireDefault(_get2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _events = require('events');

var _events2 = _interopRequireDefault(_events);

var _loggerProxy = require('../logs/logger-proxy');

var _loggerProxy2 = _interopRequireDefault(_loggerProxy);

var _loggerConfig = require('../logs/logger-config');

var _loggerConfig2 = _interopRequireDefault(_loggerConfig);

var _util = require('./util');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Events
 * plugin-meetings global
 * Used to emit events internally between modules
 */
var Events = function (_EventEmitter) {
  (0, _inherits3.default)(Events, _EventEmitter);

  function Events() {
    (0, _classCallCheck3.default)(this, Events);
    return (0, _possibleConstructorReturn3.default)(this, (Events.__proto__ || (0, _getPrototypeOf2.default)(Events)).apply(this, arguments));
  }

  (0, _createClass3.default)(Events, [{
    key: 'emit',
    value: function emit(scope, eventName, args) {
      _loggerProxy2.default.logger.debug(_util2.default.getScopeLog(scope) + 'event#' + eventName + (_loggerConfig2.default.verboseEvents ? ' -- ' + _util2.default.getEventLog(args) : ''));

      return (0, _get3.default)(Events.prototype.__proto__ || (0, _getPrototypeOf2.default)(Events.prototype), 'emit', this).call(this, eventName, args);
    }
  }]);
  return Events;
}(_events2.default);

exports.default = new Events();
//# sourceMappingURL=events.js.map
