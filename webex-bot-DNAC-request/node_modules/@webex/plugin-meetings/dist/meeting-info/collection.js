'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _find2 = require('lodash/find');

var _find3 = _interopRequireDefault(_find2);

var _collection = require('../common/collection');

var _collection2 = _interopRequireDefault(_collection);

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @class MeetingInfoCollection
 */
var MeetingInfoCollection = function (_Collection) {
  (0, _inherits3.default)(MeetingInfoCollection, _Collection);

  /**
   * @memberof MeetingInfoCollection
   * @constructor
   * @public
   */
  function MeetingInfoCollection() {
    (0, _classCallCheck3.default)(this, MeetingInfoCollection);

    var _this = (0, _possibleConstructorReturn3.default)(this, (MeetingInfoCollection.__proto__ || (0, _getPrototypeOf2.default)(MeetingInfoCollection)).call(this, 'meetingInfos'));

    _this.namespace = _constants.MEETINGS;
    return _this;
  }

  /**
   * @param {String} id ID of the meeting info you wish to retreive
   * @returns {MeetingInfo} returns a meeting info instance
   * @public
   * @memberof MeetingInfoCollection
   */


  (0, _createClass3.default)(MeetingInfoCollection, [{
    key: 'get',
    value: function get(id) {
      if (this.meetingInfos[id]) {
        return this.meetingInfos[id];
      }

      return (0, _find3.default)(this.meetingInfos, function (info) {
        return info.sipUrl === id || info.locusId === id || info.userId === id || info.meetingLink === id;
      });
    }
  }]);
  return MeetingInfoCollection;
}(_collection2.default);

exports.default = MeetingInfoCollection;
//# sourceMappingURL=collection.js.map
