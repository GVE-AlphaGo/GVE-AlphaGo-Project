{"version":3,"sources":["collection.js"],"names":["MeetingInfoCollection","namespace","MEETINGS","id","meetingInfos","info","sipUrl","locusId","userId","meetingLink","Collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;AAEA;;;IAGqBA,qB;;;AAGnB;;;;;AAKA,mCAAc;AAAA;;AAAA,oKACN,cADM;;AAAA,UAPdC,SAOc,GAPFC,mBAOE;AAAA;AAEb;;AAED;;;;;;;;;;wBAMIC,E,EAAI;AACN,UAAI,KAAKC,YAAL,CAAkBD,EAAlB,CAAJ,EAA2B;AACzB,eAAO,KAAKC,YAAL,CAAkBD,EAAlB,CAAP;AACD;;AAED,aAAO,oBACL,KAAKC,YADA,EAEL,UAACC,IAAD;AAAA,eAAUA,KAAKC,MAAL,KAAgBH,EAAhB,IAAsBE,KAAKE,OAAL,KAAiBJ,EAAvC,IAA6CE,KAAKG,MAAL,KAAgBL,EAA7D,IAAmEE,KAAKI,WAAL,KAAqBN,EAAlG;AAAA,OAFK,CAAP;AAID;;;EA3BgDO,oB;;kBAA9BV,qB","file":"collection.js","sourcesContent":["import {find} from 'lodash';\n\nimport Collection from '../common/collection';\nimport {MEETINGS} from '../constants';\n\n/**\n * @class MeetingInfoCollection\n */\nexport default class MeetingInfoCollection extends Collection {\n  namespace = MEETINGS;\n\n  /**\n   * @memberof MeetingInfoCollection\n   * @constructor\n   * @public\n   */\n  constructor() {\n    super('meetingInfos');\n  }\n\n  /**\n   * @param {String} id ID of the meeting info you wish to retreive\n   * @returns {MeetingInfo} returns a meeting info instance\n   * @public\n   * @memberof MeetingInfoCollection\n   */\n  get(id) {\n    if (this.meetingInfos[id]) {\n      return this.meetingInfos[id];\n    }\n\n    return find(\n      this.meetingInfos,\n      (info) => info.sipUrl === id || info.locusId === id || info.userId === id || info.meetingLink === id\n    );\n  }\n}\n"]}