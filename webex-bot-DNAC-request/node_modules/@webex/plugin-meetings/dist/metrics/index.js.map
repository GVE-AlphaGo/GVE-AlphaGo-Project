{"version":3,"sources":["index.js"],"names":["Metrics","instance","_events","meetingCollection","keys","eventType","webexVersion","options","meetingId","data","event","meeting","indexOf","LoggerProxy","logger","error","get","callEvents","MEDIA_QUALITY","sendMediaQualityAnalyzerMetrics","push","sendCallAnalyzerMetrics","identifiers","payload","eventId","uuid","v4","version","origin","buildType","name","networkType","userAgent","getUserAgentInfo","clientInfo","clientType","os","osVersion","bowser","originTime","triggered","Date","toISOString","canProceed","eventData","webClientDomain","window","location","hostname","Object","prototype","hasOwnProperty","call","errors","mediaType","trigger","pstnAudioType","mediaCapabilities","recoveredBy","intervals","intervalData","err","showToUser","errorCode","body","ERROR_CODE","MEETING_ERRORS","FREE_USER_MAX_PARTICIPANTS_EXCEEDED","PAID_USER_MAX_PARTICIPANTS_EXCEEDED","SERVICE_MAX_PARTICIPANTS_EXCEEDED","INACTIVE","EXCEEDED_MAX_JOINED_PARTICIPANTS","EXCEEDED_SERVICE_MAX_PARTICIPANTS","MEETING_IS_LOCKED","MEETING_IS_TERMINATING","MEETING_REQUIRE_MODERATOR_PIN_INTENT","MEETING_REQUIRE_MODERATOR_PIN","MEETING_REQUIRE_MODERATOR_ROLE","JOIN_RESTRICTED_USER","GET_RESTRICTED_USER","CREATE_MEDIA_RESTRICTED_USER","JOIN_RESTRICTED_USER_NOT_IN_ROOM","MEETING_NOT_FOUND","NOT_WEBEX_SITE","INVALID_JOIN_TIME","PHONE_NUMBER_NOT_A_NUMBER","PHONE_NUMBER_TOO_LONG","INVALID_DIALABLE_KEY","ONE_ON_ONE_TO_SELF_NOT_ALLOWED","REMOVED_PARTICIPANT","MEETING_LINK_NOT_FOUND","PHONE_NUMBER_TOO_SHORT_AFTER_IDD","INVALID_INVITEE_ADDRESS","PMR_ACCOUNT_LOCKED","RESOURCE_GUEST_FORBIDDEN","PMR_ACCOUNT_SUSPENDED","EMPTY_PHONE_NUMBER_OR_COUNTRY_CODE","INVALID_SINCE_OR_SEQUENCE_HASH_IN_REQUEST","CONVERSATION_NOT_FOUND","RECORDING_CONTROL_NOT_SUPPORTED","RECORDING_NOT_STARTED","RECORDING_NOT_ENABLED","generateErrorPayload","LOCUS_RESPONSE","shownToUser","errorPayload","category","errorDescription","fatal","notFatalErrorList","OTHER","errorData","userAgentOption","browserInfo","osInfo","util","format","StaticConfig","meetings","metrics","clientName","toLowerCase","split","osname","osversion","process","env","NODE_ENV"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;;IAKMA,O;AACJ;;;;;;AAMA,qBAAc;AAAA;;AACZ,QAAI,CAACA,QAAQC,QAAb,EAAuB;AACvB;;;;;;AAME,WAAKC,OAAL,GAAe,EAAf;AACA;;;;;;AAMA,WAAKC,iBAAL,GAAyB,IAAzB;AACA;;;;;;AAMA,WAAKC,IAAL,GAAY,sBAAcC,kBAAd,CAAZ;AACA;;;;;;AAMAL,cAAQC,QAAR,GAAmB,IAAnB;AACD;;AAED,WAAOD,QAAQC,QAAf;AACD;;AAED;;;;;;;;;;iCAMaE,iB,EAAmBG,Y,EAAc;AAC5C,WAAKH,iBAAL,GAAyBA,iBAAzB;AACA,WAAKG,YAAL,GAAoBA,YAApB;AACD;;AAED;;;;;;;;;;;8BAQUC,O,EAAS;AAAA,UACVC,SADU,GACqBD,OADrB,CACVC,SADU;AAAA,0BACqBD,OADrB,CACCE,IADD;AAAA,UACCA,IADD,iCACQ,EADR;AAAA,UACYC,KADZ,GACqBH,OADrB,CACYG,KADZ;AAAA,UAEZC,OAFY,GAEDJ,OAFC,CAEZI,OAFY;;;AAIjB,UAAI,KAAKP,IAAL,CAAUQ,OAAV,CAAkBF,KAAlB,MAA6B,CAAC,CAAlC,EAAqC;AACnCG,8BAAYC,MAAZ,CAAmBC,KAAnB,qBAA2CL,KAA3C;AACD;;AAED,UAAI,CAACC,OAAD,IAAYH,SAAhB,EAA2B;AACzBG,kBAAU,KAAKR,iBAAL,CAAuBa,GAAvB,CAA2BR,SAA3B,CAAV;AACD;;AAED,UAAIG,OAAJ,EAAa;AACX,YAAI,CAACA,QAAQM,UAAb,EAAyB;AACvBN,kBAAQM,UAAR,GAAqB,EAArB;AACD;AACD,YAAIP,UAAUL,mBAAUa,aAAxB,EAAuC;AACrCT,eAAKC,KAAL,GAAaA,KAAb;AACAC,kBAAQQ,+BAAR,CAAwCV,IAAxC;AACD,SAHD,MAIK;AACHE,kBAAQM,UAAR,CAAmBG,IAAnB,CAAwBV,KAAxB;AACAD,eAAKC,KAAL,GAAaA,KAAb;AACAC,kBAAQU,uBAAR,CAAgCZ,IAAhC;AACD;AACF,OAbD,MAeK;AACHI,8BAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,gDAAzB;AACD;AACF;;AAED;;;;;;;;gCAMYV,S,EAAWiB,W,EAAaf,O,EAAS;AAC3C,UAAMgB,UAAU;AACdC,iBAASC,eAAKC,EAAL,EADK;AAEdC,iBAAS,CAFK;AAGdC,gBAAQ;AACNC,qBAAW,MADL;AAENC,gBAAM,UAFA;AAGNC,uBAAa,SAHP;AAINC,qBAAW,KAAKC,gBAAL,EAJL;AAKNC,sBAAY;AACVC,wBAAY5B,QAAQ4B,UADV;AAEVC,gBAAI,OAFM,EAEG;AACbC,uBAAWC,iBAAOD,SAAP,IAAoB;AAHrB;AALN,SAHM;AAcdE,oBAAY;AACVC,qBAAW,IAAIC,IAAJ,GAAWC,WAAX;AADD,SAdE;AAiBdhC,eAAO;AACLoB,gBAAMzB,SADD;AAELsC,sBAAY,IAFP;AAGLrB,kCAHK;AAILsB,qBAAW,EAACC,iBAAiBC,iBAAOC,QAAP,CAAgBC,QAAlC;AAJN;AAjBO,OAAhB;;AAyBA;AACA,UAAIzC,OAAJ,EAAa;AACX,YAAI0C,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC7C,OAArC,EAA8C,YAA9C,CAAJ,EAAiE;AAC/DgB,kBAAQb,KAAR,CAAciC,UAAd,GAA2BpC,QAAQoC,UAAnC;AACD;AACD,YAAIpC,QAAQ8C,MAAZ,EAAoB;AAClB9B,kBAAQb,KAAR,CAAc2C,MAAd,GAAuB9C,QAAQ8C,MAA/B;AACD;AACD,YAAI9C,QAAQ+C,SAAZ,EAAuB;AACrB/B,kBAAQb,KAAR,CAAc4C,SAAd,GAA0B/C,QAAQ+C,SAAlC;AACD;AACD,YAAI/C,QAAQgD,OAAZ,EAAqB;AACnBhC,kBAAQb,KAAR,CAAc6C,OAAd,GAAwBhD,QAAQgD,OAAhC;AACD;AACD,YAAIhD,QAAQiD,aAAZ,EAA2B;AACzBjC,kBAAQb,KAAR,CAAc8C,aAAd,GAA8BjD,QAAQiD,aAAtC;AACD;AACD,YAAIjD,QAAQkD,iBAAZ,EAA+B;AAC7BlC,kBAAQb,KAAR,CAAc+C,iBAAd,GAAkClD,QAAQkD,iBAA1C;AACD;AACD,YAAIlD,QAAQmD,WAAZ,EAAyB;AACvBnC,kBAAQb,KAAR,CAAcgD,WAAd,GAA4BnD,QAAQmD,WAApC;AACD;AACF;;AAED,aAAOnC,OAAP;AACD;;AAED;;;;;;;;;;;;;;;;;qCAciBlB,S,EAAWiB,W,EAAaf,O,EAAS;AAChD,UAAMgB,UAAU;AACdC,iBAASC,eAAKC,EAAL,EADK;AAEdC,iBAAS,CAFK;AAGdC,gBAAQ;AACNC,qBAAW,MADL;AAENC,gBAAM,UAFA;AAGNC,uBAAa,SAHP;AAINC,qBAAW,KAAKC,gBAAL,EAJL;AAKNC,sBAAY;AACVC,wBAAY5B,QAAQ4B,UADV;AAEVC,gBAAI,OAFM,EAEG;AACbC,uBAAWC,iBAAOD,SAAP,IAAoB;AAHrB;AALN,SAHM;AAcdE,oBAAY;AACVC,qBAAW,IAAIC,IAAJ,GAAWC,WAAX;AADD,SAdE;AAiBdhC,eAAO;AACLoB,gBAAMzB,SADD;AAELsC,sBAAY,IAFP;AAGLrB,kCAHK;AAILqC,qBAAW,CAACpD,QAAQqD,YAAT,CAJN;AAKLhB,qBAAW,EAACC,iBAAiBC,iBAAOC,QAAP,CAAgBC,QAAlC;AALN;AAjBO,OAAhB;;AA0BA,aAAOzB,OAAP;AACD;;AAED;;;;;;;;;;;;oCASgBsC,G,EAAKC,U,EAAY;AAC/B,UAAIC,kBAAJ;;AAEA,UAAIF,OAAOA,IAAIG,IAAX,IAAmBH,IAAIG,IAAJ,CAASD,SAAhC,EAA2C;AACzC,gBAAQE,oBAAWJ,IAAIG,IAAJ,CAASD,SAApB,CAAR;AACE,eAAKG,0BAAeC,mCAApB;AACEJ,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeE,mCAApB;AACA,eAAKF,0BAAeG,iCAApB;AACEN,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeI,QAApB;AACEP,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeK,gCAApB;AACA,eAAKL,0BAAeM,iCAApB;AACET,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeO,iBAApB;AACEV,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeQ,sBAApB;AACEX,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeS,oCAApB;AACEZ,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeU,6BAApB;AACEb,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeW,8BAApB;AACEd,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeY,oBAApB;AACA,eAAKZ,0BAAea,mBAApB;AACA,eAAKb,0BAAec,4BAApB;AACEjB,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAee,gCAApB;AACElB,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAegB,iBAApB;AACEnB,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeiB,cAApB;AACEpB,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAekB,iBAApB;AACErB,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAemB,yBAApB;AACEtB,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeoB,qBAApB;AACEvB,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeqB,oBAApB;AACExB,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAesB,8BAApB;AACEzB,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeuB,mBAApB;AACE1B,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAewB,sBAApB;AACE3B,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeyB,gCAApB;AACE5B,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAe0B,uBAApB;AACE7B,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAe2B,kBAApB;AACE9B,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAe4B,wBAApB;AACE/B,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAe6B,qBAApB;AACEhC,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAe8B,kCAApB;AACEjC,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAe+B,yCAApB;AACElC,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAegC,sBAApB;AACEnC,wBAAY,IAAZ;AACA;AACF,eAAKG,0BAAeiC,+BAApB;AACA,eAAKjC,0BAAekC,qBAApB;AACA,eAAKlC,0BAAemC,qBAApB;AACEtC,wBAAY,IAAZ;AACA;AACF;AACEA,wBAAY,IAAZ;AA/FJ;AAiGD,OAlGD,MAmGK;AACHA,oBAAY,IAAZ;AACD;;AAED,aAAO,KAAKuC,oBAAL,CACLvC,SADK,EACMD,UADN,EACkB/C,eAAMe,IAAN,CAAWyE,cAD7B,EAC6C1C,GAD7C,CAAP;AAGD;;;yCAGoBE,S,EAAWyC,W,EAAa1E,I,EAAM+B,G,EAAK;AACtD,UAAI9C,eAAMsC,MAAN,CAAaU,SAAb,CAAJ,EAA6B;AAC3B,YAAM0C,eAAe;AACnBD,uBAAaA,eAAe,KADT;AAEnBE,oBAAU3F,eAAMsC,MAAN,CAAaU,SAAb,EAAwB,CAAxB,CAFS;AAGnB4C,4BAAkB5F,eAAMsC,MAAN,CAAaU,SAAb,EAAwB,CAAxB,CAHC;AAInBA,8BAJmB;AAKnB6C,iBAAO,CAAC,wBAAS7F,eAAM8F,iBAAf,EAAkC9C,SAAlC,CALW;AAMnBjC,gBAAMA,QAAQf,eAAMe,IAAN,CAAWgF;AANN,SAArB;;AASA,YAAIjD,OAAOA,IAAIG,IAAf,EAAqB;AACnByC,uBAAaM,SAAb,GAAyBlD,IAAIG,IAA7B;AACD;;AAED,eAAOyC,YAAP;AACD;;AAED,aAAO,IAAP;AACD;;;uCAEkB;AACjB,UAAIO,wBAAJ;AACA,UAAIC,oBAAJ;AACA,UAAIC,eAAJ;AACA,UAAMhF,aAAaiF,eAAKC,MAAL,CAAY,WAAZ,OAA4BC,iBAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,UAA1D,CAAnB;;AAEA,UAAIlF,iBAAOR,IAAP,IAAe,CAAC,QAAD,EAAW,SAAX,EAAsB,MAAtB,EAA8B,QAA9B,EAAwC,QAAxC,EAAkDlB,OAAlD,CAA0D0B,iBAAOR,IAAP,CAAY2F,WAAZ,EAA1D,MAAyF,CAAC,CAAzG,IAA8GnF,iBAAOX,OAAzH,EAAkI;AAChIsF,sBAAcE,eAAKC,MAAL,CAAY,YAAZ,EAA6B9E,iBAAOR,IAAP,CAAY2F,WAAZ,EAA7B,SAA0DnF,iBAAOX,OAAP,CAAe+F,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAA1D,CAAd;AACD;AACD,UAAIpF,iBAAOqF,MAAP,IAAiBrF,iBAAOsF,SAA5B,EAAuC;AACrCV,iBAASC,eAAKC,MAAL,CAAY,OAAZ,EAAwB9E,iBAAOqF,MAA/B,SAAyCrF,iBAAOsF,SAAP,CAAiBF,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAzC,CAAT;AACD;;AAED,UAAIT,WAAJ,EAAiB;AACfD,gCAAsBC,WAAtB;AACD;AACD,UAAIC,MAAJ,EAAY;AACVF,0BAAkBA,kBAAqBA,eAArB,UAAyC9E,UAAzC,UAAwDgF,MAAxD,GAAsEhF,UAAtE,WAAsFgF,MAAxG;AACD;AACD,UAAIF,eAAJ,EAAqB;AACnBA,2BAAmB,GAAnB;;AAEA,eAAOG,eAAKC,MAAL,CAAY,oBAAZ,EAAqCS,QAAQC,GAAR,CAAYC,QAAjD,SAA6D,KAAKzH,YAAlE,EAAkF0G,eAAlF,CAAP;AACD;;AAED,aAAOG,eAAKC,MAAL,CAAY,iBAAZ,EAAkCS,QAAQC,GAAR,CAAYC,QAA9C,SAA0D,KAAKzH,YAA/D,CAAP;AACD;;;;;AAGH,IAAML,WAAW,IAAID,OAAJ,EAAjB;;kBAEeC,Q","file":"index.js","sourcesContent":["\nimport util from 'util';\n\nimport {includes} from 'lodash';\nimport bowser from 'bowser';\nimport uuid from 'uuid';\nimport window from 'global/window';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {MEETING_ERRORS} from '../constants';\nimport StaticConfig from '../common/config';\n\nimport {error, eventType, errorCodes as ERROR_CODE} from './config';\n/**\n * @description Metrics handles all the call metrics events\n * @export\n * @class Metrics\n */\nclass Metrics {\n  /**\n     * Create Metrics Object\n     * @constructor\n     * @public\n     * @memberof Meetings\n     */\n  constructor() {\n    if (!Metrics.instance) {\n    /**\n     * @instance\n     * @type {Array}\n     * @private\n     * @memberof Metrics\n     */\n      this._events = [];\n      /**\n     * @instance\n     * @type {MeetingCollection}\n     * @private\n     * @memberof Metrics\n     */\n      this.meetingCollection = null;\n      /**\n     * @instance\n     * @type {MeetingCollection}\n     * @private\n     * @memberof Metrics\n     */\n      this.keys = Object.values(eventType);\n      /**\n       * @instance\n       * @type {Metrics}\n       * @private\n       * @memberof Metrics\n       */\n      Metrics.instance = this;\n    }\n\n    return Metrics.instance;\n  }\n\n  /**\n   * setup Metrics with meeting Collection\n   * @param {object} meetingCollection meetings object\n   * @param {object} webexVersion webex version\n   * @returns {object} null\n   */\n  initialSetup(meetingCollection, webexVersion) {\n    this.meetingCollection = meetingCollection;\n    this.webexVersion = webexVersion;\n  }\n\n  /**\n   * poste Meeting event metrics\n   * @param {object} options {meetingId/meeting} as a json object\n   * @param {String} options.meetingId\n   * @param {object} options.data\n   * @param {object} options.event\n   * @returns {object} null\n   */\n  postEvent(options) {\n    const {meetingId, data = {}, event} = options;\n    let {meeting} = options;\n\n    if (this.keys.indexOf(event) === -1) {\n      LoggerProxy.logger.error(`Metrics: Event ${event} doesnt exist in dictionary`);\n    }\n\n    if (!meeting && meetingId) {\n      meeting = this.meetingCollection.get(meetingId);\n    }\n\n    if (meeting) {\n      if (!meeting.callEvents) {\n        meeting.callEvents = [];\n      }\n      if (event === eventType.MEDIA_QUALITY) {\n        data.event = event;\n        meeting.sendMediaQualityAnalyzerMetrics(data);\n      }\n      else {\n        meeting.callEvents.push(event);\n        data.event = event;\n        meeting.sendCallAnalyzerMetrics(data);\n      }\n    }\n\n    else {\n      LoggerProxy.logger.error('Metrics->postEvent: Meeting object not defined');\n    }\n  }\n\n  /**\n   *  Docs for Call analyzer metrics\n  *   https://sqbu-github.cisco.com/WebExSquared/call-analyzer/wiki\n  *   https://sqbu-github.cisco.com/WebExSquared/event-dictionary/blob/master/diagnostic-events.raml\n */\n\n  initPayload(eventType, identifiers, options) {\n    const payload = {\n      eventId: uuid.v4(),\n      version: 1,\n      origin: {\n        buildType: 'prod',\n        name: 'endpoint',\n        networkType: 'unknown',\n        userAgent: this.getUserAgentInfo(),\n        clientInfo: {\n          clientType: options.clientType,\n          os: 'linux', // TODO: BUG AND DOESNT ACCEPT OSNAME ON CA -> bowser.osname || 'null'\n          osVersion: bowser.osVersion || '-1'\n        }\n      },\n      originTime: {\n        triggered: new Date().toISOString()\n      },\n      event: {\n        name: eventType,\n        canProceed: true,\n        identifiers,\n        eventData: {webClientDomain: window.location.hostname}\n      }\n    };\n\n    // TODO: more options should be checked and some of them should be mandatory in certain conditions\n    if (options) {\n      if (Object.prototype.hasOwnProperty.call(options, 'canProceed')) {\n        payload.event.canProceed = options.canProceed;\n      }\n      if (options.errors) {\n        payload.event.errors = options.errors;\n      }\n      if (options.mediaType) {\n        payload.event.mediaType = options.mediaType;\n      }\n      if (options.trigger) {\n        payload.event.trigger = options.trigger;\n      }\n      if (options.pstnAudioType) {\n        payload.event.pstnAudioType = options.pstnAudioType;\n      }\n      if (options.mediaCapabilities) {\n        payload.event.mediaCapabilities = options.mediaCapabilities;\n      }\n      if (options.recoveredBy) {\n        payload.event.recoveredBy = options.recoveredBy;\n      }\n    }\n\n    return payload;\n  }\n\n  /**\n   * get the payload specific for a media quality event through call analyzer\n   * @param {String} eventType the event name\n   * @param {Object} identifiers contains the identifiers needed for CA\n   * @param {String} identifiers.correlationId\n   * @param {String} identifiers.locusUrl\n   * @param {String} identifiers.locusId\n   * @param {Object} options\n   * @param {Object} options.intervalData\n   * @param {String} options.clientType\n   * @returns {Object}\n   * @public\n   * @memberof Metrics\n   */\n  initMediaPayload(eventType, identifiers, options) {\n    const payload = {\n      eventId: uuid.v4(),\n      version: 1,\n      origin: {\n        buildType: 'prod',\n        name: 'endpoint',\n        networkType: 'unknown',\n        userAgent: this.getUserAgentInfo(),\n        clientInfo: {\n          clientType: options.clientType,\n          os: 'linux', // TODO: BUG AND DOESNT ACCEPT OSNAME ON CA -> bowser.osname || 'null'\n          osVersion: bowser.osVersion || '-1'\n        }\n      },\n      originTime: {\n        triggered: new Date().toISOString()\n      },\n      event: {\n        name: eventType,\n        canProceed: true,\n        identifiers,\n        intervals: [options.intervalData],\n        eventData: {webClientDomain: window.location.hostname}\n      }\n    };\n\n    return payload;\n  }\n\n  /*\n   * This function Parses a Locus error and returns a diagnostic event payload.\n   * It should keep updating from:\n   * https://sqbu-github.cisco.com/WebExSquared/spark-client-framework/blob/master/spark-client-framework/Adapters/TelephonyAdapter/TelephonyAdapter.cpp#L920\n   * @param err {Object} the error Object from Locus response\n   * @param {boolean} showToUser true if a toast is shown to user\n   * @returns {{showToUser: boolean, category: string, errorDescription: string,\n   *  errorCode: number, errorData: *, fatal: boolean, name: string}}\n   */\n  parseLocusError(err, showToUser) {\n    let errorCode;\n\n    if (err && err.body && err.body.errorCode) {\n      switch (ERROR_CODE[err.body.errorCode]) {\n        case MEETING_ERRORS.FREE_USER_MAX_PARTICIPANTS_EXCEEDED:\n          errorCode = 3007;\n          break;\n        case MEETING_ERRORS.PAID_USER_MAX_PARTICIPANTS_EXCEEDED:\n        case MEETING_ERRORS.SERVICE_MAX_PARTICIPANTS_EXCEEDED:\n          errorCode = 3002;\n          break;\n        case MEETING_ERRORS.INACTIVE:\n          errorCode = 4001;\n          break;\n        case MEETING_ERRORS.EXCEEDED_MAX_JOINED_PARTICIPANTS:\n        case MEETING_ERRORS.EXCEEDED_SERVICE_MAX_PARTICIPANTS:\n          errorCode = 3001;\n          break;\n        case MEETING_ERRORS.MEETING_IS_LOCKED:\n          errorCode = 4002;\n          break;\n        case MEETING_ERRORS.MEETING_IS_TERMINATING:\n          errorCode = 4003;\n          break;\n        case MEETING_ERRORS.MEETING_REQUIRE_MODERATOR_PIN_INTENT:\n          errorCode = 4004;\n          break;\n        case MEETING_ERRORS.MEETING_REQUIRE_MODERATOR_PIN:\n          errorCode = 4005;\n          break;\n        case MEETING_ERRORS.MEETING_REQUIRE_MODERATOR_ROLE:\n          errorCode = 4006;\n          break;\n        case MEETING_ERRORS.JOIN_RESTRICTED_USER:\n        case MEETING_ERRORS.GET_RESTRICTED_USER:\n        case MEETING_ERRORS.CREATE_MEDIA_RESTRICTED_USER:\n          errorCode = 3005;\n          break;\n        case MEETING_ERRORS.JOIN_RESTRICTED_USER_NOT_IN_ROOM:\n          errorCode = 4007;\n          break;\n        case MEETING_ERRORS.MEETING_NOT_FOUND:\n          errorCode = 4011;\n          break;\n        case MEETING_ERRORS.NOT_WEBEX_SITE:\n          errorCode = 4012;\n          break;\n        case MEETING_ERRORS.INVALID_JOIN_TIME:\n          errorCode = 4013;\n          break;\n        case MEETING_ERRORS.PHONE_NUMBER_NOT_A_NUMBER:\n          errorCode = 4016;\n          break;\n        case MEETING_ERRORS.PHONE_NUMBER_TOO_LONG:\n          errorCode = 4017;\n          break;\n        case MEETING_ERRORS.INVALID_DIALABLE_KEY:\n          errorCode = 4018;\n          break;\n        case MEETING_ERRORS.ONE_ON_ONE_TO_SELF_NOT_ALLOWED:\n          errorCode = 4019;\n          break;\n        case MEETING_ERRORS.REMOVED_PARTICIPANT:\n          errorCode = 4020;\n          break;\n        case MEETING_ERRORS.MEETING_LINK_NOT_FOUND:\n          errorCode = 4021;\n          break;\n        case MEETING_ERRORS.PHONE_NUMBER_TOO_SHORT_AFTER_IDD:\n          errorCode = 4022;\n          break;\n        case MEETING_ERRORS.INVALID_INVITEE_ADDRESS:\n          errorCode = 4023;\n          break;\n        case MEETING_ERRORS.PMR_ACCOUNT_LOCKED:\n          errorCode = 4024;\n          break;\n        case MEETING_ERRORS.RESOURCE_GUEST_FORBIDDEN:\n          errorCode = 4025;\n          break;\n        case MEETING_ERRORS.PMR_ACCOUNT_SUSPENDED:\n          errorCode = 4026;\n          break;\n        case MEETING_ERRORS.EMPTY_PHONE_NUMBER_OR_COUNTRY_CODE:\n          errorCode = 4027;\n          break;\n        case MEETING_ERRORS.INVALID_SINCE_OR_SEQUENCE_HASH_IN_REQUEST:\n          errorCode = 1006;\n          break;\n        case MEETING_ERRORS.CONVERSATION_NOT_FOUND:\n          errorCode = 4028;\n          break;\n        case MEETING_ERRORS.RECORDING_CONTROL_NOT_SUPPORTED:\n        case MEETING_ERRORS.RECORDING_NOT_STARTED:\n        case MEETING_ERRORS.RECORDING_NOT_ENABLED:\n          errorCode = 4029;\n          break;\n        default:\n          errorCode = 4008;\n      }\n    }\n    else {\n      errorCode = 4008;\n    }\n\n    return this.generateErrorPayload(\n      errorCode, showToUser, error.name.LOCUS_RESPONSE, err\n    );\n  }\n\n\n  generateErrorPayload(errorCode, shownToUser, name, err) {\n    if (error.errors[errorCode]) {\n      const errorPayload = {\n        shownToUser: shownToUser || false,\n        category: error.errors[errorCode][2],\n        errorDescription: error.errors[errorCode][0],\n        errorCode,\n        fatal: !includes(error.notFatalErrorList, errorCode),\n        name: name || error.name.OTHER\n      };\n\n      if (err && err.body) {\n        errorPayload.errorData = err.body;\n      }\n\n      return errorPayload;\n    }\n\n    return null;\n  }\n\n  getUserAgentInfo() {\n    let userAgentOption;\n    let browserInfo;\n    let osInfo;\n    const clientInfo = util.format('client=%s', `${StaticConfig.meetings.metrics.clientName}`);\n\n    if (bowser.name && ['chrome', 'firefox', 'msie', 'msedge', 'safari'].indexOf(bowser.name.toLowerCase()) !== -1 && bowser.version) {\n      browserInfo = util.format('browser=%s', `${bowser.name.toLowerCase()}/${bowser.version.split('.')[0]}`);\n    }\n    if (bowser.osname && bowser.osversion) {\n      osInfo = util.format('os=%s', `${bowser.osname}/${bowser.osversion.split('.')[0]}`);\n    }\n\n    if (browserInfo) {\n      userAgentOption = `(${browserInfo}`;\n    }\n    if (osInfo) {\n      userAgentOption = userAgentOption ? `${userAgentOption}; ${clientInfo}; ${osInfo}` : `${clientInfo}; (${osInfo}`;\n    }\n    if (userAgentOption) {\n      userAgentOption += ')';\n\n      return util.format('webex-js-sdk/%s %s', `${process.env.NODE_ENV}-${this.webexVersion}`, userAgentOption);\n    }\n\n    return util.format('webex-js-sdk/%s', `${process.env.NODE_ENV}-${this.webexVersion}`);\n  }\n}\n\nconst instance = new Metrics();\n\nexport default instance;\n"]}