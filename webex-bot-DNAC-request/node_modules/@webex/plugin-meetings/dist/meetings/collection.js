'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _find2 = require('lodash/find');

var _find3 = _interopRequireDefault(_find2);

var _collection = require('../common/collection');

var _collection2 = _interopRequireDefault(_collection);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @export
 * @class MeetingCollection
 */
var MeetingCollection = function (_Collection) {
  (0, _inherits3.default)(MeetingCollection, _Collection);

  /**
   * @constructor
   * @public
   * @memberof MeetingCollection
   */
  function MeetingCollection() {
    (0, _classCallCheck3.default)(this, MeetingCollection);
    return (0, _possibleConstructorReturn3.default)(this, (MeetingCollection.__proto__ || (0, _getPrototypeOf2.default)(MeetingCollection)).call(this, 'meetings'));
  }

  (0, _createClass3.default)(MeetingCollection, [{
    key: 'set',
    value: function set(meeting) {
      this.meetings[meeting.id] = meeting;

      return this.meetings[meeting.id];
    }

    /**
     * get a specific meeting searching for key
     * @param {String} key
     * @param {Any} value
     * @returns {Meeting} if found, else returns null
     * @public
     * @memberof MeetingCollection
     */

  }, {
    key: 'getByKey',
    value: function getByKey(key, value) {
      if (key && value) {
        return (0, _find3.default)(this.meetings, function (meeting) {
          return meeting[key] === value;
        });
      }

      return null;
    }
  }]);
  return MeetingCollection;
}(_collection2.default);

exports.default = MeetingCollection;
//# sourceMappingURL=collection.js.map
