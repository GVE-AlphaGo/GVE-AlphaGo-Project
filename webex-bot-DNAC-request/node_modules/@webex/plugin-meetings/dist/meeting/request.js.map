{"version":3,"sources":["request.js"],"names":["MeetingRequest","options","sipUri","deviceUrl","locusUrl","resourceId","correlationId","ensureConversation","moderator","hostPin","moveToResource","roapMessage","url","body","device","deviceType","config","meetings","usingResource","moveMediaToResource","respOnlySdp","allowMultiDevice","supportsNativeLobby","undefined","hostPIN","PARTICIPANT","webex","internal","services","waitForCatalog","get","LOCI","CALL","invitee","address","concat","ALTERNATE_REDIRECT_TRUE","callPreferences","requestedMedia","_SLIDES_","localMedias","request","method","HTTP_VERBS","POST","uri","desync","syncUrl","split","LOCUS","SYNCDEBUG","GET","catch","err","LoggerProxy","logger","error","reject","selfId","LEAVE","PUT","ALERT","id","CONTROLS","record","recording","paused","PATCH","lock","locked","DECLINE","reason","MEDIA","floorReq","disposition","FLOOR_ACTION","GRANTED","beneficiary","personUrl","devices","requester","floor","resourceUrl","StatelessWebexPlugin"],"mappings":"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","file":"request.js","sourcesContent":["import {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  PARTICIPANT,\n  LOCI,\n  CALL,\n  LEAVE,\n  MEDIA,\n  FLOOR_ACTION,\n  DECLINE,\n  ALERT,\n  HTTP_VERBS,\n  LOCUS,\n  ALTERNATE_REDIRECT_TRUE,\n  _SLIDES_,\n  CONTROLS\n} from '../constants';\n\n/**\n * @class MeetingRequest\n */\nexport default class MeetingRequest extends StatelessWebexPlugin {\n  /**\n   * Make a network request to join a meeting\n   * @param {Object} options\n   * @param {String} options.sipUri\n   * @param {String} options.deviceUrl\n   * @param {String} options.locusUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  async joinMeeting(options) {\n    const {\n      sipUri, deviceUrl, locusUrl, resourceId, correlationId, ensureConversation, moderator, hostPin, moveToResource, roapMessage\n    } = options;\n\n    let url = '';\n\n    const body = {\n      device: {\n        url: deviceUrl,\n        deviceType: this.config.meetings.deviceType\n      },\n      usingResource: resourceId || null,\n      moveMediaToResource: resourceId && moveToResource || false,\n      correlationId,\n      respOnlySdp: true,\n      allowMultiDevice: true,\n      ensureConversation: ensureConversation || false,\n      supportsNativeLobby: 1\n    };\n\n    if (moderator !== undefined) {\n      body.moderator = moderator;\n    }\n\n    if (hostPin !== undefined) {\n      body.hostPIN = hostPin;\n    }\n\n    if (locusUrl) {\n      url = `${locusUrl}/${PARTICIPANT}`;\n    }\n    else if (sipUri) {\n      await this.webex.internal.services.waitForCatalog('postauth');\n      url = `${this.webex.internal.services.get('locus')}/${LOCI}/${CALL}`;\n      body.invitee = {\n        address: sipUri\n      };\n    }\n\n    // TODO: -- this will be resolved in SDK request\n    url = url.concat(`?${ALTERNATE_REDIRECT_TRUE}`);\n\n    if (resourceId === sipUri) {\n      body.callPreferences = {\n        requestedMedia: [_SLIDES_]\n      };\n    }\n\n    if (roapMessage) {\n      body.localMedias = roapMessage.localMedias;\n    }\n\n    return this.webex.request({\n      method: HTTP_VERBS.POST,\n      uri: url,\n      body\n    });\n  }\n\n  /**\n   * Syns the missed delta event\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.syncUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  syncMeeting(options) {\n    /* eslint-disable no-else-return */\n    const {desync} = options;\n    let {syncUrl} = options;\n\n    /* istanbul ignore else */\n    if (desync) {\n      // check for existing URL parameters\n      syncUrl = syncUrl.concat(syncUrl.split('?')[1] ? '&' : '?').concat(`${LOCUS.SYNCDEBUG}=${desync}`);\n    }\n\n    return this.request({\n      method: HTTP_VERBS.GET,\n      uri: syncUrl\n    }) // TODO: Handle if delta sync failed . Get the full locus object\n      .catch((err) => {\n        LoggerProxy.logger.error(`MeetingRequest->syncMeeting#Error syncing meeting, error ${err}`);\n\n        return err;\n      });\n  }\n\n  /**\n   * Request to get the complete locus object\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.locusUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n\n  getFullLocus(options) {\n    let {locusUrl} = options;\n    const {desync} = options;\n\n    if (locusUrl) {\n      if (desync) {\n        locusUrl += `?${LOCUS.SYNCDEBUG}=${desync}`;\n      }\n\n      return this.request({\n        method: HTTP_VERBS.GET,\n        uri: locusUrl\n      }).catch((err) => {\n        LoggerProxy.logger.error(`MeetingRequest->getFullLocus#Error getting full locus, error ${err}`);\n\n        return err;\n      });\n    }\n\n    return Promise.reject();\n  }\n\n  /**\n   * Make a network request to leave a meeting\n   * @param {Object} options\n   * @param {String} options.deviceUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  leaveMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${options.selfId}/${LEAVE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      usingResource: options.resourceId || null,\n      correlationId: options.correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  acknowledgeMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${ALERT}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      correlationId: options.id\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  recordMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      record: {\n        recording: options.recording,\n        paused: options.paused\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  lockMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      lock: {\n        locked: options.lock\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to decline a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.reason\n   * @returns {Promise}\n   */\n  declineMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${DECLINE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      reason: options.reason\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Toggle remote audio and/or video\n   * @param {Object} options options for toggling\n   * @param {String} options.selfId Locus self id??\n   * @param {String} options.locusUrl Locus url\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.localMedias local sdps\n   * @returns {Promise}\n   */\n  remoteAudioVideoToggle(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${options.selfId}/${MEDIA}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      usingResource: options.resourceId || null,\n      correlationId: options.correlationId,\n      respOnlySdp: true,\n      localMedias: options.localMedias\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * change the content floor grant\n   * @param {Object} options options for floor grant\n   * @param {String} options.disposition floor action (granted/released)\n   * @param {String} options.personUrl personUrl who is requesting floor\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.uri floor grant uri\n   * @returns {Promise}\n   */\n  changeMeetingFloor(options) {\n    let floorReq = {disposition: options.disposition};\n\n    /* istanbul ignore else */\n    if (options.disposition === FLOOR_ACTION.GRANTED) {\n      floorReq = {\n        beneficiary: {\n          url: options.personUrl,\n          devices: [\n            {\n              deviceType: this.config.meetings.deviceType,\n              url: options.deviceUrl\n            }\n          ]\n        },\n        disposition: options.disposition,\n        requester: {\n          url: options.personUrl\n        }\n      };\n    }\n\n    return this.request({\n      uri: options.uri,\n      method: HTTP_VERBS.PUT,\n      body: {\n        floor: floorReq,\n        resourceUrl: options.resourceUrl\n      }\n    });\n  }\n}\n"]}