{"version":3,"sources":["infoUtils.js"],"names":["InfoUtils","parse","info","parsed","policy","parsePolicy","moderator","parseModerator","sipUri","displayHints","joined","length","forEach","key","isLocked","LOCK_STATUS_LOCKED","isUnlocked","LOCK_STATUS_UNLOCKED","getInfos","oldInfo","newInfo","previous","current","updates"],"mappings":";;;;;;AACA,IAAMA,YAAY,EAAlB;;AAEAA,UAAUC,KAAV,GAAkB,UAACC,IAAD,EAAU;AAC1B,MAAMC,SAAS;AACbC,YAAQJ,UAAUK,WAAV,CAAsBH,IAAtB,CADK;AAEbI,eAAWN,UAAUO,cAAV,CAAyBL,IAAzB;AAFE,GAAf;;AAKA,MAAIA,KAAKM,MAAT,EAAiB;AACfL,WAAOK,MAAP,GAAgBN,KAAKM,MAArB;AACD;;AAED,SAAOL,MAAP;AACD,CAXD;AAYAH,UAAUK,WAAV,GAAwB,UAACH,IAAD,EAAU;AAChC,MAAME,SAAS,EAAf;;AAEA;AACA,MAAIF,QAAQA,KAAKO,YAAb,IAA6BP,KAAKO,YAAL,CAAkBC,MAA/C,IAAyDR,KAAKO,YAAL,CAAkBC,MAAlB,CAAyBC,MAAzB,GAAkC,CAA/F,EAAkG;AAChG;AACAT,SAAKO,YAAL,CAAkBC,MAAlB,CAAyBE,OAAzB,CAAiC,UAACC,GAAD,EAAS;AACxCT,aAAOS,GAAP,IAAc,IAAd;AACD,KAFD;AAGD;;AAED,SAAOT,MAAP;AACD,CAZD;;AAcAJ,UAAUO,cAAV,GAA2B,UAACL,IAAD,EAAU;AACnC,MAAMI,YAAY,EAAlB;;AAEA,MAAIJ,QAAQA,KAAKO,YAAb,IAA6BP,KAAKO,YAAL,CAAkBH,SAA/C,IAA4DJ,KAAKO,YAAL,CAAkBH,SAAlB,CAA4BK,MAA5B,GAAqC,CAArG,EAAwG;AACtGT,SAAKO,YAAL,CAAkBH,SAAlB,CAA4BM,OAA5B,CAAoC,UAACC,GAAD,EAAS;AAC3CP,gBAAUO,GAAV,IAAiB,IAAjB;AACD,KAFD;AAGD;;AAED,SAAOP,SAAP;AACD,CAVD;;AAYAN,UAAUc,QAAV,GAAqB,UAACV,MAAD;AAAA,SAAYA,OAAOW,kBAAP,IAA6B,KAAzC;AAAA,CAArB;;AAEAf,UAAUgB,UAAV,GAAuB,UAACZ,MAAD;AAAA,SAAYA,OAAOa,oBAAP,IAA+B,KAA3C;AAAA,CAAvB;;AAEAjB,UAAUkB,QAAV,GAAqB,UAACC,OAAD,EAAUC,OAAV,EAAsB;AACzC,MAAIC,WAAW,IAAf;;AAEA,MAAIF,OAAJ,EAAa;AACXE,eAAWF,OAAX;AACD;AACD,MAAMG,UAAUF,WAAWpB,UAAUC,KAAV,CAAgBmB,OAAhB,CAA3B;AACA,MAAMG,UAAU,EAAhB;;AAEA,MAAID,OAAJ,EAAa;AACXA,YAAQR,QAAR,GAAmBd,UAAUc,QAAV,CAAmBQ,QAAQlB,MAA3B,CAAnB;AACAkB,YAAQN,UAAR,GAAqBhB,UAAUgB,UAAV,CAAqBM,QAAQlB,MAA7B,CAArB;;AAEA,QAAIiB,YAAYA,SAASL,UAArB,IAAmCM,QAAQR,QAA3C,IAAuD,CAACO,QAAD,IAAaC,QAAQR,QAAhF,EAA0F;AACxFS,cAAQT,QAAR,GAAmBQ,QAAQR,QAA3B;AACD;AACD,QAAIO,YAAYA,SAASP,QAArB,IAAiCQ,QAAQN,UAAzC,IAAuD,CAACK,QAAD,IAAaC,QAAQN,UAAhF,EAA4F;AAC1FO,cAAQP,UAAR,GAAqBM,QAAQN,UAA7B;AACD;AACF;;AAED,SAAO;AACLK,sBADK;AAELC,oBAFK;AAGLC,aAAS;AACPT,gBAAUd,UAAUc,QAAV,CAAmBQ,OAAnB,CADH;AAEPN,kBAAYhB,UAAUgB,UAAV,CAAqBM,OAArB;AAFL;AAHJ,GAAP;AAQD,CA7BD;;kBA+BetB,S","file":"infoUtils.js","sourcesContent":["\nconst InfoUtils = {};\n\nInfoUtils.parse = (info) => {\n  const parsed = {\n    policy: InfoUtils.parsePolicy(info),\n    moderator: InfoUtils.parseModerator(info)\n  };\n\n  if (info.sipUri) {\n    parsed.sipUri = info.sipUri;\n  }\n\n  return parsed;\n};\nInfoUtils.parsePolicy = (info) => {\n  const policy = {};\n\n  // Parses the policy to show valid uses\n  if (info && info.displayHints && info.displayHints.joined && info.displayHints.joined.length > 0) {\n    // TODO: find a better way\n    info.displayHints.joined.forEach((key) => {\n      policy[key] = true;\n    });\n  }\n\n  return policy;\n};\n\nInfoUtils.parseModerator = (info) => {\n  const moderator = {};\n\n  if (info && info.displayHints && info.displayHints.moderator && info.displayHints.moderator.length > 0) {\n    info.displayHints.moderator.forEach((key) => {\n      moderator[key] = true;\n    });\n  }\n\n  return moderator;\n};\n\nInfoUtils.isLocked = (policy) => policy.LOCK_STATUS_LOCKED || false;\n\nInfoUtils.isUnlocked = (policy) => policy.LOCK_STATUS_UNLOCKED || false;\n\nInfoUtils.getInfos = (oldInfo, newInfo) => {\n  let previous = null;\n\n  if (oldInfo) {\n    previous = oldInfo;\n  }\n  const current = newInfo && InfoUtils.parse(newInfo);\n  const updates = {};\n\n  if (current) {\n    current.isLocked = InfoUtils.isLocked(current.policy);\n    current.isUnlocked = InfoUtils.isUnlocked(current.policy);\n\n    if (previous && previous.isUnlocked && current.isLocked || !previous && current.isLocked) {\n      updates.isLocked = current.isLocked;\n    }\n    if (previous && previous.isLocked && current.isUnlocked || !previous && current.isUnlocked) {\n      updates.isUnlocked = current.isUnlocked;\n    }\n  }\n\n  return {\n    previous,\n    current,\n    updates: {\n      isLocked: InfoUtils.isLocked(current),\n      isUnlocked: InfoUtils.isUnlocked(current)\n    }\n  };\n};\n\nexport default InfoUtils;\n"]}