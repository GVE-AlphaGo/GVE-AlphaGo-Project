{"version":3,"sources":["index.js"],"names":["LocusInfo","updateMeeting","locus","webex","meetingId","parsedLocus","states","emitChange","compareAndUpdateFlags","created","mediaShares","scheduledMeeting","meeting","participantsUrl","replaces","aclUrl","baseSequence","sequence","membership","identities","participants","updateParticipants","updateConversationUrl","conversationUrl","info","updateControls","controls","updateLocusUrl","url","updateFullState","fullState","updateMeetingInfo","updateSelf","self","updateHostInfo","host","Parser","updateWithDeltaLocus","onFullLocus","data","eventType","LoggerProxy","logger","LOCUSEVENT","PARTICIPANT_JOIN","PARTICIPANT_LEFT","CONTROLS_UPDATED","PARTICIPANT_AUDIO_MUTED","PARTICIPANT_AUDIO_UNMUTED","PARTICIPANT_VIDEO_MUTED","PARTICIPANT_VIDEO_UNMUTED","SELF_CHANGED","PARTICIPANT_UPDATED","PARTICIPANT_CONTROLS_UPDATED","PARTICIPANT_ROLES_UPDATED","PARTICIPANT_DECLINED","FLOOR_GRANTED","FLOOR_RELEASED","DIFFERENCE","scope","eventName","args","emit","error","updateLocusInfo","isMeetingActive","handleOneOnOneEvent","type","_CALL_","emitScoped","file","function","EVENTS","REMOTE_ANSWERED_DECLINED","remoteDeclined","remoteAnswered","updateCreated","updateMediaShares","updateParticipantsUrl","updateReplace","replace","updateAclUrl","updateBasequence","updateSequence","updateMemberShip","updateIdentifiers","compareAndUpdate","length","find","participant","identity","_USER_","removed","partner","getLocusPartner","state","LOCUS","STATE","INACTIVE","warn","Metrics","postEvent","event","REMOTE_ENDED","DESTROY_MEETING","reason","CALL_REMOVED_REASON","CALL_INACTIVE","shouldLeave","MEETING_STATE","STATES","LEFT","DECLINED","NOTIFIED","JOINED","PARTNER_LEFT","joinedWith","_LEFT_","IDLE","SELF_LEFT","_MEETING_","TERMINATING","MEETING_REMOVED_REASON","MEETING_INACTIVE_TERMINATING","FULLSTATE_REMOVED","SELF_REMOVED","compareSelfAndHost","compareHostAndSelf","selfIdentity","hostId","moderator","LOCUS_INFO_CAN_ASSIGN_HOST","canAssignHost","LOCUS_INFO_UPDATE_PARTICIPANTS","recordingId","selfId","ControlsUtils","parse","convoUrl","result","FullState","getFullState","current","updates","meetingStateChangedTo","LOCUSINFO","FULL_STATE_MEETING_STATE_CHANGE","previousState","previous","meetingState","currentState","meetingTypeChangedTo","FULL_STATE_TYPE_UPDATE","parsedHosts","HostUtils","getHosts","isNewHost","LOCUS_INFO_UPDATE_HOST","newHost","oldHost","InfoUtils","parsePolicy","parseModerator","parsedInfo","getInfos","MEETING_INFO_UPDATED","isLocked","MEETING_LOCKED","isUnlocked","MEETING_UNLOCKED","parsedMediaShares","MediaSharesUtils","getMediaShares","LOCUS_INFO_UPDATE_MEDIA_SHARES","parsedSelves","SelfUtils","getSelves","internal","device","element","push","getSipUrl","sipUri","moderatorChanged","SELF_MODERATOR_CHANGED","mutedByOthers","SELF_MUTED_BY_OTHERS","isUnadmittedGuest","SELF_UNADMITTED_GUEST","isAdmittedGuest","SELF_ADMITTED_GUEST","LOCUS_INFO_UPDATE_SELF","oldSelf","newSelf","locusUrl","LOCUS_INFO_UPDATE_URL","EventsScope"],"mappings":"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","file":"index.js","sourcesContent":["import {isEqual} from 'lodash';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport EventsScope from '../common/events/events-scope';\nimport {\n  EVENTS,\n  LOCUSEVENT,\n  _USER_,\n  _CALL_,\n  MEETING_STATE,\n  _MEETING_,\n  LOCUSINFO,\n  LOCUS,\n  _LEFT_,\n  MEETING_REMOVED_REASON,\n  CALL_REMOVED_REASON\n} from '../constants';\nimport Metrics from '../metrics';\nimport {eventType} from '../metrics/config';\nimport InfoUtils from '../locus-info/infoUtils';\nimport FullState from '../locus-info/fullState';\nimport SelfUtils from '../locus-info/selfUtils';\nimport HostUtils from '../locus-info/hostUtils';\nimport ControlsUtils from '../locus-info/controlsUtils';\nimport MediaSharesUtils from '../locus-info/mediaSharesUtils';\nimport Parser from '../locus-info/parser';\n\n\n/**\n * @description LocusInfo extends ChildEmitter to convert locusInfo info a private emitter to parent object\n * @export\n * @private\n * @class LocusInfo\n */\nexport default class LocusInfo extends EventsScope {\n  constructor(updateMeeting, locus = {}, webex, meetingId) {\n    super();\n    this.parsedLocus = {\n      states: []\n    };\n    this.webex = webex;\n    this.emitChange = false;\n    this.compareAndUpdateFlags = {};\n    this.meetingId = meetingId;\n    this.updateMeeting = updateMeeting;\n    this.created = locus.created || null;\n    this.mediaShares = locus.mediaShares || null;\n    this.scheduledMeeting = locus.meeting || null;\n    this.participantsUrl = locus.participantsUrl || null;\n    this.replaces = locus.replaces || null;\n    this.aclUrl = locus.aclUrl || null;\n    this.baseSequence = locus.baseSequence || null;\n    this.sequence = locus.sequence || null;\n    this.membership = locus.membership || null;\n    this.identities = locus.identities || null;\n    this.participants = locus.participants || null;\n    // above section only updates the locusInfo object\n    // The below section makes sure it updates the locusInfo as well as updates the meeting object\n    this.updateParticipants(locus.participants);\n    // For 1:1 space meeting the conversation Url does not exist in locus.conversation\n    this.updateConversationUrl(locus.conversationUrl, locus.info);\n    this.updateControls(locus.controls);\n    this.updateLocusUrl(locus.url);\n    this.updateFullState(locus.fullState);\n    this.updateMeetingInfo(locus.info);\n    // self and participants generate sipUrl for 1:1 meeting\n    this.updateSelf(locus.self, locus.participants);\n    this.updateHostInfo(locus.host);\n  }\n\n  /**\n   * @param {Object} locus\n   * @param {Meeting} meeting\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  initialSetup(locus, meeting) {\n    // meeting already exisits just do an update\n    if (meeting) {\n      // Its a new delta event fetch the whole meeting object\n      Parser.updateWithDeltaLocus(locus, meeting);\n    }\n    else {\n      this.onFullLocus(locus);\n    }\n\n    // Change it to true after it recives it first locus object\n    this.emitChange = true;\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @param {Object} data\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  parse(meeting, data) {\n    const {eventType} = data;\n\n    LoggerProxy.logger.info(`locusInfo->parse#received locus data: ${eventType}`);\n\n    switch (eventType) {\n      case LOCUSEVENT.PARTICIPANT_JOIN:\n      case LOCUSEVENT.PARTICIPANT_LEFT:\n      case LOCUSEVENT.CONTROLS_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_AUDIO_MUTED:\n      case LOCUSEVENT.PARTICIPANT_AUDIO_UNMUTED:\n      case LOCUSEVENT.PARTICIPANT_VIDEO_MUTED:\n      case LOCUSEVENT.PARTICIPANT_VIDEO_UNMUTED:\n      case LOCUSEVENT.SELF_CHANGED:\n      case LOCUSEVENT.PARTICIPANT_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_CONTROLS_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_ROLES_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_DECLINED:\n      case LOCUSEVENT.FLOOR_GRANTED:\n      case LOCUSEVENT.FLOOR_RELEASED:\n        this.onFullLocus(data.locus, eventType);\n        break;\n      case LOCUSEVENT.DIFFERENCE:\n        Parser.updateWithDeltaLocus(data.locus, meeting);\n        break;\n\n      default:\n        // Why will there be a event with no eventType ????\n        // we may not need this, we can get full locus\n        Parser.updateWithDeltaLocus(data.locus, meeting);\n    }\n  }\n\n  /**\n   * @param {String} scope\n   * @param {String} eventName\n   * @param {Array} args\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  emitScoped(scope, eventName, args) {\n    return this.emit(scope, eventName, args);\n  }\n\n  /**\n   * updates the locus with full locus object\n   * @param {object} locus locus object\n   * @param {sting} eventType particulat locus event\n   * @returns {object} null\n   * @memberof LocusInfo\n   */\n  onFullLocus(locus, eventType) {\n    if (!locus) {\n      LoggerProxy.logger.error('LocusInfo->onFullLocus#Locus object passed as argument was invalid, continuing.');\n    }\n    this.participants = locus.participants;\n    this.updateLocusInfo(locus);\n    this.updateParticipants(locus.participants);\n    this.isMeetingActive();\n    this.handleOneOnOneEvent(eventType);\n  }\n\n  // used for ringing stops on one on one\n  /**\n   * @param {String} eventType\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  handleOneOnOneEvent(eventType) {\n    if (this.parsedLocus.info.type === _CALL_) {\n    // for 1:1 bob calls alice and alice declines, notify the meeting state\n      if (eventType === LOCUSEVENT.PARTICIPANT_DECLINED) {\n      // trigger the event for stop ringing\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'handleOneonOneEvent'\n          },\n          EVENTS.REMOTE_ANSWERED_DECLINED,\n          {\n            remoteDeclined: true,\n            remoteAnswered: false\n          }\n        );\n      }\n      // for 1:1 bob calls alice and alice answers, notify the meeting state\n      if (eventType === LOCUSEVENT.PARTICIPANT_JOIN) {\n      // trigger the event for stop ringing\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'handleOneonOneEvent'\n          },\n          EVENTS.REMOTE_ANSWERED_DECLINED,\n          {\n            remoteDeclined: false,\n            remoteAnswered: true\n          }\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Object} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  onDeltaLocus(locus) {\n    this.updateLocusInfo(locus);\n    this.updateParticipants(locus.participants);\n    this.isMeetingActive();\n  }\n\n  /**\n   * @param {Object} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateLocusInfo(locus) {\n    this.updateControls(locus.controls);\n    this.updateConversationUrl(locus.conversationUrl, locus.info);\n    this.updateCreated(locus.created);\n    this.updateFullState(locus.fullState);\n    this.updateHostInfo(locus.host);\n    this.updateMeetingInfo(locus.info, locus.self);\n    this.updateMediaShares(locus.mediaShares);\n    this.updateParticipantsUrl(locus.participantsUrl);\n    this.updateReplace(locus.replace);\n    this.updateSelf(locus.self, locus.participants);\n    this.updateLocusUrl(locus.url);\n    this.updateAclUrl(locus.aclUrl);\n    this.updateBasequence(locus.baseSequence);\n    this.updateSequence(locus.sequence);\n    this.updateMemberShip(locus.membership);\n    this.updateIdentifiers(locus.identities);\n    this.compareAndUpdate();\n    // update which required to compare different objects from locus\n  }\n\n  /**\n   * @param {Array} participants\n   * @param {Object} self\n   * @returns {Array}\n   * @memberof LocusInfo\n   */\n  getLocusPartner(participants, self) {\n    if (!participants || participants.length === 0) {\n      return null;\n    }\n\n    return participants.find((participant) =>\n      (self && participant.identity !== self.identity) &&\n  (participants.length <= 2 || (participant.type === _USER_ && !participant.removed))) || this.partner;\n  }\n\n  // TODO: all the leave states need to be checked\n  /**\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  isMeetingActive() {\n    if (this.parsedLocus.fullState.type === _CALL_) {\n      const partner = this.getLocusPartner(this.participants, this.self);\n\n      this.updateMeeting({partner});\n\n      // Check if guest user needs to be checked here\n\n      // 1) when bob declines call from bob, (bob='DECLINED')\n      // 2) When alice rejects call to bob , (bob='NOTIFIED')\n\n      // When we dont add MEDIA for condition 2. The state of bob='IDLE'\n\n      if (this.fullState && this.fullState.state === LOCUS.STATE.INACTIVE) {\n        // TODO: update the meeting state\n        LoggerProxy.logger.warn('LocusInfo#isMeetingActive-> Call Ended, locus state is inactive.');\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: CALL_REMOVED_REASON.CALL_INACTIVE,\n            shouldLeave: false\n          }\n        );\n      }\n      else\n      if (partner.state === MEETING_STATE.STATES.LEFT &&\n        this.parsedLocus.self &&\n        (this.parsedLocus.self.state === MEETING_STATE.STATES.DECLINED ||\n        this.parsedLocus.self.state === MEETING_STATE.STATES.NOTIFIED ||\n        this.parsedLocus.self.state === MEETING_STATE.STATES.JOINED)) {\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: CALL_REMOVED_REASON.PARTNER_LEFT,\n            shouldLeave: this.parsedLocus.self.joinedWith && this.parsedLocus.self.joinedWith.state !== _LEFT_\n          }\n        );\n      }\n      else\n      if (this.parsedLocus.self &&\n        this.parsedLocus.self.state === MEETING_STATE.STATES.LEFT &&\n      (partner.state === MEETING_STATE.STATES.LEFT ||\n      partner.state === MEETING_STATE.STATES.DECLINED ||\n      partner.state === MEETING_STATE.STATES.NOTIFIED ||\n      partner.state === MEETING_STATE.STATES.IDLE) // Happens when user just joins and adds no Media\n      ) {\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: CALL_REMOVED_REASON.SELF_LEFT,\n            shouldLeave: false\n          }\n        );\n      }\n    }\n    else if (this.parsedLocus.fullState.type === _MEETING_) {\n      if (this.fullState && (this.fullState.state === LOCUS.STATE.INACTIVE || this.fullState.state === LOCUS.STATE.TERMINATING)) {\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: MEETING_REMOVED_REASON.MEETING_INACTIVE_TERMINATING,\n            shouldLeave: false\n          }\n        );\n      }\n      else if (this.fullState.removed) {\n        // user has been dropped from a meeting\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: MEETING_REMOVED_REASON.FULLSTATE_REMOVED,\n            shouldLeave: false\n          }\n        );\n      }\n      // If you are  guest and you are removed from the meeting\n      // You wont get any further events\n      else if (this.parsedLocus.self.removed) {\n        // Check if we need to send an event\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: MEETING_REMOVED_REASON.SELF_REMOVED,\n            shouldLeave: false\n          }\n        );\n      }\n    }\n    else {\n      LoggerProxy.logger.warn('LocusInfo#isMeetingActive-> Meeting Type is unknown.');\n    }\n  }\n\n  /**\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  compareAndUpdate() {\n    if (this.compareAndUpdateFlags.compareSelfAndHost || this.compareAndUpdateFlags.compareHostAndSelf) {\n      this.compareSelfAndHost();\n    }\n  }\n\n  /**\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  compareSelfAndHost() {\n    if ((this.parsedLocus.self.selfIdentity === this.parsedLocus.host.hostId) && this.parsedLocus.self.moderator) {\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'compareSelfAndHost'\n        },\n        EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST,\n        {\n          canAssignHost: true\n        }\n      );\n    }\n    else {\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'compareSelfAndHost'\n        },\n        EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST,\n        {\n          canAssignHost: false\n        }\n      );\n    }\n  }\n\n  /**\n   *\n   * @param {Object} participants new participants object\n   * @param {boolen} deltaParticpantFlag  delta event\n   * @returns {Array} updatedParticipants\n   * @memberof LocusInfo\n   */\n  updateParticipants(participants) {\n    this.emitScoped(\n      {\n        file: 'locus-info',\n        function: 'updateParticipants'\n      },\n      EVENTS.LOCUS_INFO_UPDATE_PARTICIPANTS,\n      {\n        participants,\n        recordingId: this.parsedLocus.controls && this.parsedLocus.controls.recordingId,\n        selfIdentity: this.parsedLocus.self && this.parsedLocus.self.selfIdentity,\n        selfId: this.parsedLocus.self && this.parsedLocus.self.selfId,\n        hostId: this.parsedLocus.host && this.parsedLocus.host.hostId\n      }\n    );\n  }\n\n  /**\n   * @param {Object} controls\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateControls(controls) {\n    if (controls && !isEqual(this.controls, controls)) {\n      this.controls = controls;\n      this.parsedLocus.controls = ControlsUtils.parse(controls);\n    }\n  }\n\n  /**\n   * @param {String} conversationUrl\n   * @param {Object} info\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateConversationUrl(conversationUrl, info) {\n    if (conversationUrl && !isEqual(this.conversationUrl, conversationUrl)) {\n      this.conversationUrl = conversationUrl;\n      this.updateMeeting({convoUrl: conversationUrl});\n    }\n    else if (info && info.conversationUrl && !isEqual(this.conversationUrl, info.conversationUrl)) {\n      this.conversationUrl = info.conversationUrl;\n      this.updateMeeting({convoUrl: info.conversationUrl});\n    }\n  }\n\n  /**\n   * @param {Object} created\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateCreated(created) {\n    if (created && !isEqual(this.created, created)) {\n      this.created = created;\n    }\n  }\n\n\n  /**\n   * @param {Object} fullState\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateFullState(fullState) {\n    if (fullState && !isEqual(this.fullState, fullState)) {\n      const result = FullState.getFullState(this.fullState, fullState);\n\n      this.updateMeeting(result.current);\n\n      if (result.updates.meetingStateChangedTo) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateFullState'\n          },\n          LOCUSINFO.EVENTS.FULL_STATE_MEETING_STATE_CHANGE,\n          {\n            previousState: result.previous && result.previous.meetingState,\n            currentState: result.current.meetingState\n          }\n        );\n      }\n\n      if (result.updates.meetingTypeChangedTo) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateFullState'\n          },\n          LOCUSINFO.EVENTS.FULL_STATE_TYPE_UPDATE,\n          {\n            type: result.current.type\n          }\n        );\n      }\n      this.parsedLocus.fullState = result.current;\n      this.fullState = fullState;\n    }\n  }\n\n  /**\n   * handles when the locus.host is updated\n   * @param {Object} host the locus.host property\n   * @returns {undefined}\n   * @memberof LocusInfo\n   * emits internal event locus_info_update_host\n   */\n  updateHostInfo(host) {\n    if (host && !isEqual(this.host, host)) {\n      const parsedHosts = HostUtils.getHosts(this.host, host);\n\n      this.updateMeeting(parsedHosts.current);\n      this.parsedLocus.host = parsedHosts.current;\n      if (parsedHosts.updates.isNewHost) {\n        this.compareAndUpdateFlags.compareSelfAndHost = true;\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateHostInfo'\n          },\n          EVENTS.LOCUS_INFO_UPDATE_HOST,\n          {\n            newHost: parsedHosts.current,\n            oldHost: parsedHosts.previous\n          }\n        );\n      }\n      this.host = host;\n    }\n    else {\n      this.compareAndUpdateFlags.compareSelfAndHost = false;\n    }\n  }\n\n  /**\n   * @param {Object} info\n   * @param {Object} self\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateMeetingInfo(info, self) {\n    if (info && (!isEqual(this.info, info) ||\n    !isEqual(InfoUtils.parsePolicy(info), InfoUtils.parsePolicy(this.info)) ||\n    !isEqual(InfoUtils.parseModerator(info) || InfoUtils.parseModerator(info)))) {\n      const parsedInfo = InfoUtils.getInfos(this.parsedLocus.info, info);\n\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateMeetingInfo'\n        },\n        LOCUSINFO.EVENTS.MEETING_INFO_UPDATED,\n        {info: parsedInfo.current, self}\n      );\n\n      if (parsedInfo.updates.isLocked) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateMeetingInfo'\n          },\n          LOCUSINFO.EVENTS.MEETING_LOCKED,\n          info\n        );\n      }\n      if (parsedInfo.updates.isUnlocked) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateMeetingInfo'\n          },\n          LOCUSINFO.EVENTS.MEETING_UNLOCKED,\n          info\n        );\n      }\n\n      this.info = info;\n      this.parsedLocus.info = parsedInfo.current;\n      // Parses the info and adds necessary values\n      this.updateMeeting(parsedInfo.current);\n    }\n  }\n\n  /**\n   * handles when the locus.mediaShares is updated\n   * @param {Object} mediaShares the locus.mediaShares property\n   * @returns {undefined}\n   * @memberof LocusInfo\n   * emits internal event locus_info_update_media_shares\n   */\n  updateMediaShares(mediaShares) {\n    if (mediaShares && !isEqual(this.mediaShares, mediaShares)) {\n      const parsedMediaShares = MediaSharesUtils.getMediaShares(this.mediaShares, mediaShares);\n\n      this.updateMeeting(parsedMediaShares.current);\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateMediaShares'\n        },\n        EVENTS.LOCUS_INFO_UPDATE_MEDIA_SHARES,\n        {\n          current: parsedMediaShares.current,\n          previous: parsedMediaShares.previous\n        }\n      );\n      this.parsedLocus.mediaShares = parsedMediaShares.current;\n      this.mediaShares = mediaShares;\n    }\n  }\n\n  /**\n   * @param {String} participantsUrl\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateParticipantsUrl(participantsUrl) {\n    if (participantsUrl && !isEqual(this.participantsUrl, participantsUrl)) {\n      this.participantsUrl = participantsUrl;\n    }\n  }\n\n  /**\n   * @param {Object} replace\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateReplace(replace) {\n    if (replace && !isEqual(this.replace, replace)) {\n      this.replace = replace;\n    }\n  }\n\n  /**\n   * handles when the locus.self is updated\n   * @param {Object} self the locus.mediaShares property\n   * @param {Array} participants the locus.participants property\n   * @returns {undefined}\n   * @memberof LocusInfo\n   * emits internal events self_admitted_guest, self_unadmitted_guest, locus_info_update_self\n   */\n  updateSelf(self, participants) {\n    if (self && !isEqual(this.self, self)) {\n      const parsedSelves = SelfUtils.getSelves(this.self, self, this.webex.internal.device.url);\n\n      this.updateMeeting(parsedSelves.current);\n      this.parsedLocus.self = parsedSelves.current;\n\n      const element = this.parsedLocus.states[this.parsedLocus.states.length - 1];\n\n      if (element !== parsedSelves.current.state) {\n        this.parsedLocus.states.push(parsedSelves.current.state);\n      }\n\n      // TODO: check if we need to save the sipUri here as well\n      // this.emit(LOCUSINFO.EVENTS.MEETING_UPDATE, SelfUtils.getSipUrl(this.getLocusPartner(participants, self), this.parsedLocus.fullState.type, this.parsedLocus.info.sipUri));\n      const result = SelfUtils.getSipUrl(this.getLocusPartner(participants, self), this.parsedLocus.fullState.type, this.parsedLocus.info.sipUri);\n\n      if (result.sipUri) {\n        this.updateMeeting(result);\n      }\n      if (parsedSelves.updates.moderatorChanged) {\n        this.compareAndUpdateFlags.compareHostAndSelf = true;\n      }\n      else {\n        this.compareAndUpdateFlags.compareHostAndSelf = false;\n      }\n\n      if (parsedSelves.updates.moderatorChanged) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.SELF_MODERATOR_CHANGED,\n          self\n        );\n      }\n      if (parsedSelves.updates.mutedByOthers) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.SELF_MUTED_BY_OTHERS,\n          self\n        );\n      }\n      if (parsedSelves.updates.isUnadmittedGuest) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.SELF_UNADMITTED_GUEST,\n          self\n        );\n      }\n      if (parsedSelves.updates.isAdmittedGuest) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.SELF_ADMITTED_GUEST,\n          self\n        );\n      }\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateSelf'\n        },\n        EVENTS.LOCUS_INFO_UPDATE_SELF,\n        {\n          oldSelf: parsedSelves.previous,\n          newSelf: parsedSelves.current\n        }\n      );\n      this.parsedLocus.self = parsedSelves.current;\n      this.self = self;\n    }\n    else {\n      this.compareAndUpdateFlags.compareHostAndSelf = false;\n    }\n  }\n\n  /**\n   * handles when the locus.url is updated\n   * @param {String} url\n   * @returns {undefined}\n   * emits internal event locus_info_update_url\n   */\n  updateLocusUrl(url) {\n    if (url && this.url !== url) {\n      this.url = url;\n      this.updateMeeting({locusUrl: url});\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateLocusUrl'\n        },\n        EVENTS.LOCUS_INFO_UPDATE_URL,\n        url\n      );\n    }\n  }\n\n  /**\n   * @param {String} aclUrl\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateAclUrl(aclUrl) {\n    if (aclUrl && !isEqual(this.aclUrl, aclUrl)) {\n      this.aclUrl = aclUrl;\n    }\n  }\n\n  /**\n   * @param {Number} baseSequence\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateBasequence(baseSequence) {\n    if (baseSequence && !isEqual(this.baseSequence, baseSequence)) {\n      this.baseSequence = baseSequence;\n    }\n  }\n\n  /**\n   * @param {Number} sequence\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateSequence(sequence) {\n    if (sequence && !isEqual(this.sequence, sequence)) {\n      this.sequence = sequence;\n    }\n  }\n\n  /**\n   * @param {Object} membership\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateMemberShip(membership) {\n    if (membership && !isEqual(this.membership, membership)) {\n      this.membership = membership;\n    }\n  }\n\n  /**\n   * @param {Array} identities\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateIdentifiers(identities) {\n    if (identities && !isEqual(this.identities, identities)) {\n      this.identities = identities;\n    }\n  }\n}\n"]}