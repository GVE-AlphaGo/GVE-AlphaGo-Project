{"version":3,"sources":["index.js"],"names":["Media","setLocalTrack","enabled","track","reconnectMedia","peerConnection","meetingId","connectionState","PEER_CONNECTION_STATE","CLOSED","FAILED","reject","ReconnectionError","PeerConnectionManager","createOffer","generateLocalMedias","mediaId","audioMuted","videoMuted","localSdp","getLocalMedia","options","sendAudio","sendVideo","sendShare","sharePreferences","getMedia","getDisplayMedia","resolve","undefined","checkTracks","trackType","receiveTracks","getDirection","sendTracks","direction","attachMedia","mediaProperties","mediaDirection","audioTrack","videoTrack","shareTrack","result","receiveAudio","audioTransceiver","addTransceiver","receiveVideo","videoTransceiver","receiveShare","shareTransceiver","onnegotiationneeded","event","LoggerProxy","logger","info","updateMedia","setTrackOnTransceiver","type","sendTrack","receiveTrack","transceiver","sender","replaceTrack","e","updateTransceiver","shareConstraints","cursor","frameRate","highFrameRate","config","meetings","videoShareFrameRate","screenFrameRate","aspectRatio","width","resolution","idealWidth","screenResolution","height","idealHeight","bowser","name","toLowerCase","mediaConfig","audio","video","navigator","mediaDevices","then","stream","getVideoTracks","length","applyConstraints","deviceId","ideal","max","maxWidth","maxHeight","fake","process","env","NODE_ENV","getUserMedia","catch","err","MediaError","Error","localMediaFailed","cameraFailed","permissionDenied","getSupportedDevice","enumerateDevices","devices","supported","filter","device","kind","AUDIO_INPUT","VIDEO_INPUT","getDevices","toggleStream","stopTracks","stop","error","readyState","stopStream","getTracks","forEach","mediaSetting","audioVideo","localStream","shareStream"],"mappings":"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","file":"index.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n/* globals navigator */\nimport bowser from 'bowser';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  AUDIO_INPUT,\n  VIDEO_INPUT,\n  PEER_CONNECTION_STATE\n} from '../constants';\nimport PeerConnectionManager from '../peer-connection-manager';\nimport ReconnectionError from '../common/errors/reconnection';\nimport MediaError from '../common/errors/media';\nimport config from '../config';\n\n\n/**\n * MediaDirection\n * @typedef {Object} MediaDirection\n * @property {boolean} sendAudio\n * @property {boolean} receiveAudio\n * @property {boolean} sendVideo\n * @property {boolean} receiveVideo\n * @property {boolean} sendShare\n * @property {boolean} receiveShare\n */\n\n/**\n * SendOptions\n * @typedef {Object} SendOptions\n * @property sendAudio\n * @property sendVideo\n * @property sendShare\n * @property {Object} sharePreferences\n */\n/**\n *\n * @public\n * @export\n * Mimic browser APIs as \"the ultimate browser\".\n * Handles the quirks of each browser.\n * Extends and enhances adapter.js, i.e., the \"media\" file from the web client.\n */\nconst Media = {};\n\n/**\n * @param {boolean} enabled\n * @param {MediaStreamTrack} track\n * @returns {Boolean}\n * @public\n */\nMedia.setLocalTrack = (enabled, track) => {\n  if (track) {\n    track.enabled = !enabled;\n\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {RTCPeerConnection} peerConnection\n * @param {String} meetingId\n * @returns {Promise}\n */\nMedia.reconnectMedia = (peerConnection, meetingId) => {\n  if (peerConnection.connectionState === PEER_CONNECTION_STATE.CLOSED ||\n    peerConnection.connectionState === PEER_CONNECTION_STATE.FAILED) {\n    return Promise.reject(new ReconnectionError('Reinitiate peerconnection'));\n  }\n\n  return PeerConnectionManager.createOffer(peerConnection, meetingId);\n};\n\n/**\n * format the media array for send\n * @param {String} mediaId\n * @param {Boolean} audioMuted\n * @param {Boolean} videoMuted\n * @returns {Array} medias\n */\nMedia.generateLocalMedias = (mediaId, audioMuted, videoMuted) => {\n  if (mediaId) {\n    return [\n      {\n        localSdp: JSON.stringify({\n          audioMuted,\n          videoMuted\n        }),\n        mediaId\n      }\n    ];\n  }\n\n  return [];\n};\n\n/**\n * make a browser call to get the media\n * @param {SendOptions} options\n * @returns {Promise}\n */\nMedia.getLocalMedia = (options) => {\n  const {\n    sendAudio, sendVideo, sendShare, sharePreferences\n  } = options;\n\n  if (sendAudio || sendVideo) {\n    return Media.getMedia(sendAudio, sendVideo);\n  }\n\n  if (sendShare) {\n    return Media.getDisplayMedia(\n      {\n        sendAudio: false,\n        sendShare: true,\n        sharePreferences\n      }\n    );\n  }\n\n  return Promise.resolve(undefined);\n};\n/**\n * Returns the direction and tracks\n * @param {string} trackType type of track (audio/video)\n * @param {object}  track  tracks passed\n * @param {boolean} receiveTracks do you want to receive tracks from the remote side\n * @returns {Object} returns direction tracks to be added in transceiver\n */\nMedia.checkTracks = (trackType, track, receiveTracks) => {\n  const getDirection = (sendTracks, receiveTracks) => {\n    if (sendTracks && receiveTracks) {\n      return 'sendrecv';\n    } if (sendTracks && !receiveTracks) {\n      return 'sendonly';\n    } if (!sendTracks && receiveTracks) {\n      return 'recvonly';\n    } if (sendTracks && receiveTracks) {\n      return 'inactive';\n    }\n\n    return 'inactive';\n  };\n\n  if (track) {\n    return {track, direction: getDirection(!!track, receiveTracks)};\n  }\n\n  return {track: trackType, direction: getDirection(!!track, receiveTracks)};\n};\n/**\n * creates peerconnection and attaches streams\n * @param {MediaDirection} mediaProperties\n * @param {Object} meetingId call flow id\n * @returns {Array} [peerConnection, ]\n */\nMedia.attachMedia = (mediaProperties, meetingId) => {\n  const {\n    mediaDirection, audioTrack, videoTrack, shareTrack, peerConnection\n  } = mediaProperties;\n\n  let result = null;\n\n  // Add Transceiver for audio\n  result = Media.checkTracks('audio', mediaDirection.sendAudio && audioTrack, mediaDirection.receiveAudio);\n  peerConnection.audioTransceiver = peerConnection.addTransceiver(result.track, {direction: result.direction});\n\n  // Add Transceiver for video\n  result = Media.checkTracks('video', mediaDirection.sendVideo && videoTrack, mediaDirection.receiveVideo);\n  peerConnection.videoTransceiver = peerConnection.addTransceiver(result.track, {direction: result.direction});\n\n  // Add Transceiver for share\n  result = Media.checkTracks('video', mediaDirection.sendShare && shareTrack, mediaDirection.receiveShare);\n  peerConnection.shareTransceiver = peerConnection.addTransceiver(result.track, {direction: result.direction});\n\n  peerConnection.onnegotiationneeded = (event) => {\n    LoggerProxy.logger.info(`Media->attachMedia/onnegotiationneeded#PeerConnection: ${event}`);\n  };\n\n  return PeerConnectionManager.createOffer(peerConnection, meetingId);\n};\n\n/**\n * updates all the media streams and creates a new media offer\n * @param {MediaDirection} mediaProperties\n * @param {String} meetingId\n * @returns {Promise}\n */\nMedia.updateMedia = (mediaProperties, meetingId) => {\n  const {\n    mediaDirection, audioTrack, videoTrack, shareTrack, peerConnection\n  } = mediaProperties;\n\n  // update audio transceiver\n  Media.setTrackOnTransceiver(peerConnection.audioTransceiver, {\n    type: 'audio',\n    track: audioTrack,\n    sendTrack: mediaDirection.sendAudio && audioTrack,\n    receiveTrack: mediaDirection.receiveAudio\n  });\n\n  // update video transceiver\n  Media.setTrackOnTransceiver(peerConnection.videoTransceiver, {\n    type: 'video',\n    track: videoTrack,\n    sendTrack: mediaDirection.sendVideo && videoTrack,\n    receiveTrack: mediaDirection.receiveVideo\n  });\n\n  // update content transceiver\n  Media.setTrackOnTransceiver(peerConnection.shareTransceiver, {\n    type: 'video',\n    track: shareTrack,\n    sendTrack: mediaDirection.sendShare && shareTrack,\n    receiveTrack: mediaDirection.receiveShare\n  });\n  peerConnection.onnegotiationneeded = (event) => {\n    LoggerProxy.logger.info(`Media->attachMedia/onnegotiationneeded#PeerConnection: ${event}`);\n  };\n\n  return PeerConnectionManager.createOffer(peerConnection, meetingId);\n};\n\n/**\n * @param {RTCRtpTransceiver} transceiver\n * @param {Object} options\n * @param {MediaStreamTrack} options.track\n * @returns {undefined}\n */\nMedia.setTrackOnTransceiver = (transceiver, options) => {\n  const {\n    type, track, sendTrack, receiveTrack\n  } = options;\n\n  try {\n    const result = Media.checkTracks(type, sendTrack && track, receiveTrack);\n\n    transceiver.direction = result.direction;\n    if (options.track) {\n      transceiver.sender.replaceTrack(track);\n    }\n  }\n  catch (e) {\n    throw e;\n  }\n};\n\n/**\n * creates a new offer\n * @param {String} meetingId\n * @param {RTCPeerConnection} peerConnection\n * @param {RTCRtpTransceiver} transceiver\n * @param {Object} options see #Media.setTrackOnTransceiver\n * @returns {Promise}\n */\nMedia.updateTransceiver = (meetingId, peerConnection, transceiver, options) => {\n  Media.setTrackOnTransceiver(transceiver, options);\n\n  return PeerConnectionManager.createOffer(peerConnection, meetingId);\n};\n\n/**\n * generates share streams\n * @param {object} options parameter\n * @param {Object} options.sendAudio sendAudio: {Boolean} sendAudio constraints\n * @param {Object} options.sendShare sendShare: {Boolean} sendShare constraints\n * @param {Object} options.sharePreferences sharePreferences: {Object} Share constraints and share constraints\n * @returns {Object} {streams}\n */\nMedia.getDisplayMedia = (options) => {\n  const shareConstraints = options.sharePreferences && options.sharePreferences.shareConstraints || {\n    cursor: 'always',\n    frameRate: options.sharePreferences && options.sharePreferences.highFrameRate ? config.meetings.videoShareFrameRate : config.meetings.screenFrameRate,\n    aspectRatio: config.meetings.aspectRatio,\n    width: options.sharePreferences && options.sharePreferences.highFrameRate ? config.meetings.resolution.idealWidth : config.meetings.screenResolution.idealWidth,\n    height: options.sharePreferences && options.sharePreferences.highFrameRate ? config.meetings.resolution.idealHeight : config.meetings.screenResolution.idealHeight\n  };\n  // chrome and webkit based browsers (edge, safari) automatically adjust everything\n  // and we have noticed higher quality with those browser types\n  // firefox specifically has some issues with resolution and frame rate decision making\n  // so we are making it optional and configurable (with defaults) for firefox\n  // to have higher quality, and for developers to control the values\n  // eventually we may have to add the same functionality to chrome, OR conversely, get to with firefox\n\n\n  if (bowser.name.toLowerCase() === 'firefox') {\n    const mediaConfig = {\n      audio: options.sendAudio,\n      video: options.sendShare\n    };\n\n\n    return navigator.mediaDevices.getDisplayMedia({audio: options.sendAudio, video: mediaConfig})\n      .then((stream) => {\n        if (options.sendShare && stream.getVideoTracks().length > 0) {\n          // Firefox has a bug with the spec where changing in the height and width only happens\n          // after we get the inital tracks\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=1321221\n          stream.getVideoTracks()[0].applyConstraints(shareConstraints);\n        }\n\n\n        return stream;\n      });\n  }\n\n  return navigator.mediaDevices.getDisplayMedia({audio: options.sendAudio, video: options.sendShare ? shareConstraints : false});\n};\n\n/**\n * generates audio and video using constraints (often called after getSupportedDevices)\n * @param {Object} audio audio: {Boolean} gum constraints\n * @param {Object} video video: {Boolean} gum constraints\n * @returns {Object} {streams}\n */\nMedia.getMedia = (audio, video) => {\n  const mediaConfig = {\n    audio,\n    video: video ? {\n      deviceId: video.deviceId ? video.deviceId : undefined,\n      width: {ideal: config.meetings.resolution.idealWidth, max: config.meetings.resolution.maxWidth},\n      height: {ideal: config.meetings.resolution.idealHeight, max: config.meetings.resolution.maxHeight}\n    } : false,\n    fake: process.env.NODE_ENV === 'test' // Special case to get fake media for Firefox browser for testing\n  };\n\n  return new Promise((resolve, reject) => {\n    navigator.mediaDevices\n      .getUserMedia(mediaConfig)\n      .then((stream) => {\n        resolve(stream);\n      })\n      .catch((err) => {\n        reject(\n          new MediaError(new Error({\n            name: err.name,\n            localMediaFailed: true,\n            cameraFailed: err === mediaConfig.permissionDenied\n          }), 'Local Get User Media failed')\n        );\n      });\n  });\n};\n\n/**\n * Checks if the machine has at least one audio or video device (Dont use this for screen share)\n * @param {object} [options]\n * {\n *    sendAudio: true/false,\n *    sendVideo: true/false\n * }\n * @returns {Object} {\n *    sendAudio: true/false,\n *    sendVideo: true/false\n *}\n */\nMedia.getSupportedDevice = ({sendAudio, sendVideo}) =>\n  Promise.resolve().then(() => {\n    if (!navigator.mediaDevices || navigator.mediaDevices.enumerateDevices === undefined) {\n      return {\n        sendAudio: true,\n        sendVideo: true\n      };\n    }\n\n    return navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const supported = {\n        audio: devices.filter((device) => device.kind === AUDIO_INPUT).length > 0,\n        video: devices.filter((device) => device.kind === VIDEO_INPUT).length > 0\n      };\n\n      return {\n        sendAudio: (supported.audio && sendAudio) || true,\n        sendVideo: (supported.video && sendVideo) || true\n      };\n    });\n  });\n\n/**\n * proxy to browser navigator.mediaDevices.enumerateDevices()\n * @returns {Promise}\n */\nMedia.getDevices = () => {\n  if (navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    return navigator.mediaDevices.enumerateDevices();\n  }\n\n  return Promise.reject(new MediaError('enumerateDevices not supported.'));\n};\n\n/**\n *\n * Toggle a specific stream\n * noop as of now, does nothing\n * @returns {null}\n */\nMedia.toggleStream = () => {};\n\n/**\n * Stop input stream\n * @param {MediaTrack} track A media stream\n * @returns {null}\n */\nMedia.stopTracks = (track) => {\n  if (!track) {\n    return Promise.resolve();\n  }\n\n  return Promise.resolve().then(() => {\n    if (track && track.stop) {\n      try {\n        track.stop();\n      }\n      catch (e) {\n        LoggerProxy.logger.error(`media/index->stopTracks#Unable to stop the track with state ${track.readyState}, error: ${e}`);\n      }\n    }\n  });\n};\n\n/**\n *\n * Stop input stream\n * @param {Stream} stream A media stream\n * @returns {null}\n */\nMedia.stopStream = (stream) => {\n  if (!stream) {\n    return Promise.resolve();\n  }\n\n  /*\n   * To release local media\n   * 1) Chrome requires all tracks to be stopped (stream.stop got deprecated)\n   * 2) Firefox requires the stream to be stopped\n   */\n  return Promise.resolve().then(() => {\n    if (stream.getTracks) {\n      stream.getTracks().forEach((track) => {\n        track.stop();\n      });\n    }\n    else if (stream.stop) {\n      stream.stop();\n    }\n  });\n};\n\n/**\n * generates streams for audio video and share\n * @param {object} mediaSetting parameter\n * @param {Object} mediaSetting.sendAudio sendAudio: {Boolean} sendAudio constraints\n * @param {Object} mediaSetting.sendVideo sendVideo: {Boolean} sendVideo constraints\n * @param {Object} mediaSetting.sendShare sendShare: {Boolean} sendShare constraints\n * @param {Object} audioVideo parameter\n * @param {Object} audioVideo.audio {deviceId: {String}}\n * @param {Object} audioVideo.video {deviceId: {String}}\n * @param {Object} sharePreferences parameter\n * @param {Object} sharePreferences.shareConstraints parameter\n * @param {Boolean} sharePreferences.highFrameRate parameter\n * @returns {Array} [localStream, shareStream]\n */\nMedia.getUserMedia = (mediaSetting, audioVideo, sharePreferences) => Media.getLocalMedia({\n  sendAudio: mediaSetting.sendAudio ? audioVideo.audio || mediaSetting.sendAudio : false,\n  sendVideo: mediaSetting.sendVideo ? audioVideo.video || mediaSetting.sendVideo : false\n}).then((localStream) => Media.getLocalMedia({\n  sendShare: mediaSetting.sendShare,\n  sharePreferences\n}).then((shareStream) => [localStream, shareStream]));\n\nexport default Media;\n"]}