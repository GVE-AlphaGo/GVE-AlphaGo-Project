'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _webexCore = require('@webex/webex-core');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @class
 * @ignore
 */
var PresenceBatcher = _webexCore.Batcher.extend({
  namespace: 'Presence',

  /**
   * @instance
   * @memberof PresenceBatcher
   * @param {HttpResponseObject} res
   * @returns {Promise}
   */
  handleHttpSuccess: function handleHttpSuccess(res) {
    var _this = this;

    return _promise2.default.all(res.body.statusList.map(function (presenceResponse) {
      return _this.handleItemSuccess(presenceResponse.subject, presenceResponse);
    }));
  },


  /**
   * @instance
   * @memberof PresenceBatcher
   * @param {string} item
   * @param {Object} response
   * @returns {Promise}
   */
  handleItemFailure: function handleItemFailure(item, response) {
    return this.getDeferredForResponse(item).then(function (defer) {
      defer.reject(response);
    });
  },


  /**
   * @instance
   * @memberof PresenceBatcher
   * @param {string} item
   * @param {Object} response
   * @returns {Promise}
   */
  handleItemSuccess: function handleItemSuccess(item, response) {
    return this.getDeferredForResponse(item).then(function (defer) {
      defer.resolve(response);
    });
  },


  /**
   * @instance
   * @memberof PresenceBatcher
   * @param {string} id
   * @returns {Promise<string>}
   */
  fingerprintRequest: function fingerprintRequest(id) {
    return _promise2.default.resolve(id);
  },


  /**
   * @instance
   * @memberof PresenceBatcher
   * @param {string} id
   * @returns {Promise<string>}
   */
  fingerprintResponse: function fingerprintResponse(id) {
    return _promise2.default.resolve(id);
  },


  /**
   * @instance
   * @memberof PresenceBatcher
   * @param {Array} ids
   * @returns {Promise<Array>}
   */
  prepareRequest: function prepareRequest(ids) {
    return _promise2.default.resolve(ids);
  },


  /**
   * @instance
   * @memberof PresenceBatcher
   * @param {Object} subjects
   * @returns {Promise<HttpResponseObject>}
   */
  submitHttpRequest: function submitHttpRequest(subjects) {
    return this.webex.request({
      method: 'POST',
      api: 'apheleia',
      resource: 'compositions',
      body: { subjects: subjects }
    });
  }
}); /*!
     * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.
     */

exports.default = PresenceBatcher;
//# sourceMappingURL=presence-batcher.js.map
