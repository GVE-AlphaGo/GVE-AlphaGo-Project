{"version":3,"sources":["feature.js"],"names":["Feature","WebexPlugin","extend","namespace","getFeature","keyType","key","options","reject","Error","feature","webex","internal","device","features","get","resolve","full","serialize","value","handleFeatureUpdate","envelope","data","featureToggle","type","toLowerCase","add","merge","listen","listenTo","mercury","setFeature","request","method","api","resource","userId","body","mutable","val","then","res","setBundledFeatures","featureList","forEach","item","partitionedToggles","featureToggles","user","developer","initialize","args","prototype","listenToAndRun","trigger","bind"],"mappings":"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","file":"feature.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport '@webex/internal-plugin-device';\nimport {partition} from 'lodash';\nimport {WebexPlugin} from '@webex/webex-core';\n\nconst Feature = WebexPlugin.extend({\n  namespace: 'Feature',\n\n  /**\n   * Returns the value of the requested feature toggle.\n   * @param {string} keyType <developer|user|entitlement>\n   * @param {string} key\n   * @param {Object} options\n   * @param {boolean} options.full to get full feature record including metadata.\n   * @returns {string|boolean|number|FeatureModel|null}\n   */\n  getFeature(keyType, key, options) {\n    if (keyType !== 'developer' && keyType !== 'user' && keyType !== 'entitlement') {\n      return Promise.reject(new Error('Invalid feature keyType provided. Only `developer`, `user`, and `entitlement` feature toggles are permitted.'));\n    }\n\n    options = options || {};\n\n    const feature = this.webex.internal.device.features[keyType].get(key);\n\n    if (!feature) {\n      return Promise.resolve(null);\n    }\n\n    if (options.full) {\n      return Promise.resolve(feature.serialize());\n    }\n\n    return Promise.resolve(feature.value);\n  },\n\n  /**\n   * Handles a feature toggle update from the server.\n   * @param {Object} envelope\n   * @returns {undefined}\n   */\n  handleFeatureUpdate(envelope) {\n    if (envelope && envelope.data) {\n      const feature = envelope.data.featureToggle;\n      const keyType = feature.type.toLowerCase();\n\n      if (keyType === 'user' || keyType === 'developer') {\n        this.webex.internal.device.features[keyType].add([feature], {merge: true});\n      }\n    }\n  },\n\n  /**\n   * Register to listen for incoming feature events\n   * @instance\n   * @returns {undefined}\n   */\n  listen() {\n    this.listenTo(this.webex.internal.mercury, 'event:featureToggle_update', this.handleFeatureUpdate);\n  },\n\n  /**\n   * Issues request to server to set a value for a feature toggle.\n   * @param {string} keyType <developer|user>\n   * @param {string} key\n   * @param {string} value\n   * @returns {Promise} Refreshes the local device and resolves with the features endpoint's response.\n   */\n  setFeature(keyType, key, value) {\n    // Limit only to developer feature toggles for now.\n    if (keyType !== 'developer' && keyType !== 'user') {\n      return Promise.reject(new Error('Only `developer` and `user` feature toggles can be set.'));\n    }\n\n    return this.request({\n      method: 'POST',\n      api: 'feature',\n      resource: `features/users/${this.webex.internal.device.userId}/${keyType}`,\n      body: {\n        key,\n        mutable: true,\n        val: value\n      }\n    })\n      .then((res) => this.webex.internal.device.features[keyType].add(res.body, {merge: true}));\n  },\n\n  /**\n   * Issues request to server to set a value for a feature toggle.\n   * @param {array} featureList\n   * @returns {Promise} Refreshes the local device and resolves with the features endpoint`s response.\n   */\n  setBundledFeatures(featureList) {\n    featureList.forEach((item) => {\n      item.mutable = item.mutable || 'true';\n      if (item.type !== 'USER' && item.type !== 'DEV') {\n        item.type = 'USER';\n      }\n    });\n\n    return this.request({\n      method: 'POST',\n      api: 'feature',\n      resource: `features/users/${this.webex.internal.device.userId}/toggles`,\n      body: featureList\n    })\n      .then((res) => {\n        const partitionedToggles = partition(res.body.featureToggles, {type: 'USER'});\n\n        this.webex.internal.device.features.user.add(partitionedToggles[0], {merge: true});\n        this.webex.internal.device.features.developer.add(partitionedToggles[1], {merge: true});\n      });\n  },\n\n  initialize(...args) {\n    Reflect.apply(WebexPlugin.prototype.initialize, this, args);\n\n    this.listenToAndRun(this.webex, 'change:internal.device.features.developer', this.trigger.bind(this, 'change:developer'));\n    this.listenToAndRun(this.webex, 'change:internal.device.features.entitlement', this.trigger.bind(this, 'change:entitlement'));\n    this.listenToAndRun(this.webex, 'change:internal.device.features.user', this.trigger.bind(this, 'change:user'));\n  }\n});\n\nexport default Feature;\n"]}