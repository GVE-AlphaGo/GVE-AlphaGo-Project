{"version":3,"sources":["../src/RSAPrivateKey.js"],"names":["RSAPrivateKey","constructor","parameters","version","defaultValues","modulus","publicExponent","privateExponent","prime1","prime2","exponent1","exponent2","coefficient","otherPrimeInfos","fromSchema","schema","fromJSON","json","memberName","asn1js","Integer","Error","names","Sequence","name","blockName","value","optional","Repeated","otherPrimeInfosName","OtherPrimeInfo","otherPrimeInfo","asn1","compareSchema","verified","result","valueBlock","valueDec","convertFromDER","Array","from","element","toSchema","outputArray","push","convertToDER","toJSON","jwk","n","valueHex","e","d","p","q","dp","dq","qi","oth"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64, clearProps } from \"pvutils\";\r\nimport OtherPrimeInfo from \"./OtherPrimeInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAPrivateKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAPrivateKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", RSAPrivateKey.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc modulus\r\n\t\t */\r\n\t\tthis.modulus = getParametersValue(parameters, \"modulus\", RSAPrivateKey.defaultValues(\"modulus\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc publicExponent\r\n\t\t */\r\n\t\tthis.publicExponent = getParametersValue(parameters, \"publicExponent\", RSAPrivateKey.defaultValues(\"publicExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc privateExponent\r\n\t\t */\r\n\t\tthis.privateExponent = getParametersValue(parameters, \"privateExponent\", RSAPrivateKey.defaultValues(\"privateExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc prime1\r\n\t\t */\r\n\t\tthis.prime1 = getParametersValue(parameters, \"prime1\", RSAPrivateKey.defaultValues(\"prime1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc prime2\r\n\t\t */\r\n\t\tthis.prime2 = getParametersValue(parameters, \"prime2\", RSAPrivateKey.defaultValues(\"prime2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc exponent1\r\n\t\t */\r\n\t\tthis.exponent1 = getParametersValue(parameters, \"exponent1\", RSAPrivateKey.defaultValues(\"exponent1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc exponent2\r\n\t\t */\r\n\t\tthis.exponent2 = getParametersValue(parameters, \"exponent2\", RSAPrivateKey.defaultValues(\"exponent2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc coefficient\r\n\t\t */\r\n\t\tthis.coefficient = getParametersValue(parameters, \"coefficient\", RSAPrivateKey.defaultValues(\"coefficient\"));\r\n\r\n\t\tif(\"otherPrimeInfos\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<OtherPrimeInfo>}\r\n\t\t\t * @desc otherPrimeInfos\r\n\t\t\t */\r\n\t\t\tthis.otherPrimeInfos = getParametersValue(parameters, \"otherPrimeInfos\", RSAPrivateKey.defaultValues(\"otherPrimeInfos\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"modulus\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"publicExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"privateExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"coefficient\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"otherPrimeInfos\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAPrivateKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSAPrivateKey ::= Sequence {\r\n\t *    version           Version,\r\n\t *    modulus           Integer,  -- n\r\n\t *    publicExponent    Integer,  -- e\r\n\t *    privateExponent   Integer,  -- d\r\n\t *    prime1            Integer,  -- p\r\n\t *    prime2            Integer,  -- q\r\n\t *    exponent1         Integer,  -- d mod (p-1)\r\n\t *    exponent2         Integer,  -- d mod (q-1)\r\n\t *    coefficient       Integer,  -- (inverse of q) mod p\r\n\t *    otherPrimeInfos   OtherPrimeInfos OPTIONAL\r\n\t * }\r\n\t *\r\n\t * OtherPrimeInfos ::= Sequence SIZE(1..MAX) OF OtherPrimeInfo\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [modulus]\r\n\t\t * @property {string} [publicExponent]\r\n\t\t * @property {string} [privateExponent]\r\n\t\t * @property {string} [prime1]\r\n\t\t * @property {string} [prime2]\r\n\t\t * @property {string} [exponent1]\r\n\t\t * @property {string} [exponent2]\r\n\t\t * @property {string} [coefficient]\r\n\t\t * @property {string} [otherPrimeInfosName]\r\n\t\t * @property {Object} [otherPrimeInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.modulus || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.publicExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.privateExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.coefficient || \"\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.otherPrimeInfosName || \"\"),\r\n\t\t\t\t\t\t\tvalue: OtherPrimeInfo.schema(names.otherPrimeInfo || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"modulus\",\r\n\t\t\t\"publicExponent\",\r\n\t\t\t\"privateExponent\",\r\n\t\t\t\"prime1\",\r\n\t\t\t\"prime2\",\r\n\t\t\t\"exponent1\",\r\n\t\t\t\"exponent2\",\r\n\t\t\t\"coefficient\",\r\n\t\t\t\"otherPrimeInfos\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAPrivateKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tmodulus: \"modulus\",\r\n\t\t\t\t\tpublicExponent: \"publicExponent\",\r\n\t\t\t\t\tprivateExponent: \"privateExponent\",\r\n\t\t\t\t\tprime1: \"prime1\",\r\n\t\t\t\t\tprime2: \"prime2\",\r\n\t\t\t\t\texponent1: \"exponent1\",\r\n\t\t\t\t\texponent2: \"exponent2\",\r\n\t\t\t\t\tcoefficient: \"coefficient\",\r\n\t\t\t\t\totherPrimeInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"otherPrimeInfos\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAPrivateKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.modulus = asn1.result.modulus.convertFromDER(256);\r\n\t\tthis.publicExponent = asn1.result.publicExponent;\r\n\t\tthis.privateExponent = asn1.result.privateExponent.convertFromDER(256);\r\n\t\tthis.prime1 = asn1.result.prime1.convertFromDER(128);\r\n\t\tthis.prime2 = asn1.result.prime2.convertFromDER(128);\r\n\t\tthis.exponent1 = asn1.result.exponent1.convertFromDER(128);\r\n\t\tthis.exponent2 = asn1.result.exponent2.convertFromDER(128);\r\n\t\tthis.coefficient = asn1.result.coefficient.convertFromDER(128);\r\n\r\n\t\tif(\"otherPrimeInfos\" in asn1.result)\r\n\t\t\tthis.otherPrimeInfos = Array.from(asn1.result.otherPrimeInfos, element => new OtherPrimeInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.modulus.convertToDER());\r\n\t\toutputArray.push(this.publicExponent);\r\n\t\toutputArray.push(this.privateExponent.convertToDER());\r\n\t\toutputArray.push(this.prime1.convertToDER());\r\n\t\toutputArray.push(this.prime2.convertToDER());\r\n\t\toutputArray.push(this.exponent1.convertToDER());\r\n\t\toutputArray.push(this.exponent2.convertToDER());\r\n\t\toutputArray.push(this.coefficient.convertToDER());\r\n\t\t\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.otherPrimeInfos, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst jwk = {\r\n\t\t\tn: toBase64(arrayBufferToString(this.modulus.valueBlock.valueHex), true, true, true),\r\n\t\t\te: toBase64(arrayBufferToString(this.publicExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\td: toBase64(arrayBufferToString(this.privateExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\tp: toBase64(arrayBufferToString(this.prime1.valueBlock.valueHex), true, true, true),\r\n\t\t\tq: toBase64(arrayBufferToString(this.prime2.valueBlock.valueHex), true, true, true),\r\n\t\t\tdp: toBase64(arrayBufferToString(this.exponent1.valueBlock.valueHex), true, true, true),\r\n\t\t\tdq: toBase64(arrayBufferToString(this.exponent2.valueBlock.valueHex), true, true, true),\r\n\t\t\tqi: toBase64(arrayBufferToString(this.coefficient.valueBlock.valueHex), true, true, true)\r\n\t\t};\r\n\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t\tjwk.oth = Array.from(this.otherPrimeInfos, element => element.toJSON());\r\n\r\n\t\treturn jwk;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"n\" in json)\r\n\t\t\tthis.modulus = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.n, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"n\\\"\");\r\n\r\n\t\tif(\"e\" in json)\r\n\t\t\tthis.publicExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.e, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"e\\\"\");\r\n\r\n\t\tif(\"d\" in json)\r\n\t\t\tthis.privateExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.d, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"d\\\"\");\r\n\r\n\t\tif(\"p\" in json)\r\n\t\t\tthis.prime1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.p, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"p\\\"\");\r\n\r\n\t\tif(\"q\" in json)\r\n\t\t\tthis.prime2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.q, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"q\\\"\");\r\n\r\n\t\tif(\"dp\" in json)\r\n\t\t\tthis.exponent1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dp, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dp\\\"\");\r\n\r\n\t\tif(\"dq\" in json)\r\n\t\t\tthis.exponent2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dq, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dq\\\"\");\r\n\r\n\t\tif(\"qi\" in json)\r\n\t\t\tthis.coefficient = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.qi, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"qi\\\"\");\r\n\r\n\t\tif(\"oth\" in json)\r\n\t\t\tthis.otherPrimeInfos = Array.from(json.oth, element => new OtherPrimeInfo({ json: element }));\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RSAPrivateKey.js"}