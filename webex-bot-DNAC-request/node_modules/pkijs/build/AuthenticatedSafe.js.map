{"version":3,"sources":["../src/AuthenticatedSafe.js"],"names":["AuthenticatedSafe","constructor","parameters","safeContents","defaultValues","parsedValue","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","length","Object","keys","names","asn1js","Sequence","name","blockName","value","Repeated","contentInfos","ContentInfo","asn1","compareSchema","verified","Array","from","result","element","toSchema","toJSON","parseInternalValues","Promise","reject","sequence","resolve","entries","index","content","contentType","OctetString","authSafeContent","ArrayBuffer","valueBlock","isConstructed","contentValue","valueHex","fromBER","offset","push","privacyMode","SafeContents","cmsEnveloped","EnvelopedData","recipientCertificate","recipientKey","then","decrypt","recipientPrivateKey","cmsEncrypted","EncryptedData","password","error","makeInternalValues","contentBuffer","toBER","currentParameters","contentToEncrypt","encrypt","encryptionAlgorithm","toLowerCase","addRecipientByCertificate","encryptingCertificate"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AACA;;AACA;;;AAGe,MAAMA,iBAAN,CACf;AACC;;AACA;;;;;AAKAC,EAAAA,WAAW,CAACC,UAAU,GAAG,EAAd,EACX;AACC;;AACA;;;;AAIA,SAAKC,YAAL,GAAoB,iCAAmBD,UAAnB,EAA+B,cAA/B,EAA+CF,iBAAiB,CAACI,aAAlB,CAAgC,cAAhC,CAA/C,CAApB;AAEA,QAAG,iBAAiBF,UAApB;AACC;;;;AAIA,WAAKG,WAAL,GAAmB,iCAAmBH,UAAnB,EAA+B,aAA/B,EAA8CF,iBAAiB,CAACI,aAAlB,CAAgC,aAAhC,CAA9C,CAAnB,CAbF,CAcC;AAEA;;AACA,QAAG,YAAYF,UAAf,EACC,KAAKI,UAAL,CAAgBJ,UAAU,CAACK,MAA3B,EAlBF,CAmBC;AACA,GA5BF,CA6BC;;AACA;;;;;;AAIA,SAAOH,aAAP,CAAqBI,UAArB,EACA;AACC,YAAOA,UAAP;AAEC,WAAK,cAAL;AACC,eAAO,EAAP;;AACD,WAAK,aAAL;AACC,eAAO,EAAP;;AACD;AACC,cAAM,IAAIC,KAAJ,CAAW,oDAAmDD,UAAW,EAAzE,CAAN;AAPF;AASA,GA7CF,CA8CC;;AACA;;;;;;;AAKA,SAAOE,kBAAP,CAA0BF,UAA1B,EAAsCG,WAAtC,EACA;AACC,YAAOH,UAAP;AAEC,WAAK,cAAL;AACC,eAAQG,WAAW,CAACC,MAAZ,KAAuB,CAA/B;;AACD,WAAK,aAAL;AACC,eAASD,WAAW,YAAYE,MAAxB,IAAoCA,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBC,MAAzB,KAAoC,CAAhF;;AACD;AACC,cAAM,IAAIH,KAAJ,CAAW,oDAAmDD,UAAW,EAAzE,CAAN;AAPF;AASA,GA/DF,CAgEC;;AACA;;;;;;;;;;;;;;;;AAcA,SAAOD,MAAP,CAAcL,UAAU,GAAG,EAA3B,EACA;AACC;;;;;AAKA,UAAMa,KAAK,GAAG,iCAAmBb,UAAnB,EAA+B,OAA/B,EAAwC,EAAxC,CAAd;AAEA,WAAQ,IAAIc,MAAM,CAACC,QAAX,CAAoB;AAC3BC,MAAAA,IAAI,EAAGH,KAAK,CAACI,SAAN,IAAmB,EADC;AAE3BC,MAAAA,KAAK,EAAE,CACN,IAAIJ,MAAM,CAACK,QAAX,CAAoB;AACnBH,QAAAA,IAAI,EAAGH,KAAK,CAACO,YAAN,IAAsB,EADV;AAEnBF,QAAAA,KAAK,EAAEG,qBAAYhB,MAAZ;AAFY,OAApB,CADM;AAFoB,KAApB,CAAR;AASA,GAjGF,CAkGC;;AACA;;;;;;AAIAD,EAAAA,UAAU,CAACC,MAAD,EACV;AACC;AACA,6BAAWA,MAAX,EAAmB,CAClB,cADkB,CAAnB,EAFD,CAKC;AAEA;;AACA,UAAMiB,IAAI,GAAGR,MAAM,CAACS,aAAP,CAAqBlB,MAArB,EACZA,MADY,EAEZP,iBAAiB,CAACO,MAAlB,CAAyB;AACxBQ,MAAAA,KAAK,EAAE;AACNO,QAAAA,YAAY,EAAE;AADR;AADiB,KAAzB,CAFY,CAAb;AASA,QAAGE,IAAI,CAACE,QAAL,KAAkB,KAArB,EACC,MAAM,IAAIjB,KAAJ,CAAU,2EAAV,CAAN,CAlBF,CAmBC;AAEA;;AACA,SAAKN,YAAL,GAAoBwB,KAAK,CAACC,IAAN,CAAWJ,IAAI,CAACK,MAAL,CAAYP,YAAvB,EAAqCQ,OAAO,IAAI,IAAIP,oBAAJ,CAAgB;AAAEhB,MAAAA,MAAM,EAAEuB;AAAV,KAAhB,CAAhD,CAApB,CAtBD,CAuBC;AACA,GAhIF,CAiIC;;AACA;;;;;;AAIAC,EAAAA,QAAQ,GACR;AACC;AACA,WAAQ,IAAIf,MAAM,CAACC,QAAX,CAAoB;AAC3BG,MAAAA,KAAK,EAAEO,KAAK,CAACC,IAAN,CAAW,KAAKzB,YAAhB,EAA8B2B,OAAO,IAAIA,OAAO,CAACC,QAAR,EAAzC;AADoB,KAApB,CAAR,CAFD,CAKC;AACA,GA7IF,CA8IC;;AACA;;;;;;AAIAC,EAAAA,MAAM,GACN;AACC,WAAO;AACN7B,MAAAA,YAAY,EAAEwB,KAAK,CAACC,IAAN,CAAW,KAAKzB,YAAhB,EAA8B2B,OAAO,IAAIA,OAAO,CAACE,MAAR,EAAzC;AADR,KAAP;AAGA,GAxJF,CAyJC;;;AACAC,EAAAA,mBAAmB,CAAC/B,UAAD,EACnB;AACC;AACA,QAAIA,UAAU,YAAYW,MAAvB,KAAmC,KAAtC,EACC,OAAOqB,OAAO,CAACC,MAAR,CAAe,6CAAf,CAAP;AAED,QAAI,kBAAkBjC,UAAnB,KAAmC,KAAtC,EACC,OAAOgC,OAAO,CAACC,MAAR,CAAe,6CAAf,CAAP;AAED,QAAIjC,UAAU,CAACC,YAAX,YAAmCwB,KAApC,KAA+C,KAAlD,EACC,OAAOO,OAAO,CAACC,MAAR,CAAe,yDAAf,CAAP;AAED,QAAGjC,UAAU,CAACC,YAAX,CAAwBS,MAAxB,KAAmC,KAAKT,YAAL,CAAkBS,MAAxD,EACC,OAAOsB,OAAO,CAACC,MAAR,CAAe,qFAAf,CAAP,CAZF,CAaC;AAEA;;AACA,QAAIC,QAAQ,GAAGF,OAAO,CAACG,OAAR,EAAf,CAhBD,CAiBC;AAEA;;AACA,SAAKhC,WAAL,GAAmB;AAClBF,MAAAA,YAAY,EAAE;AADI,KAAnB;AApBD;AAAA;AAAA;;AAAA;AAwBC,2BAA8B,KAAKA,YAAL,CAAkBmC,OAAlB,EAA9B,8HACA;AAAA;AAAA,cADWC,KACX;AAAA,cADkBC,OAClB;;AACC,gBAAOA,OAAO,CAACC,WAAf;AAEC;AACA,eAAK,sBAAL;AACC;AACC;AACA,kBAAID,OAAO,CAACA,OAAR,YAA2BxB,MAAM,CAAC0B,WAAnC,KAAoD,KAAvD,EACC,OAAOR,OAAO,CAACC,MAAR,CAAe,gDAAf,CAAP,CAHF,CAIC;AAEA;;AACA,kBAAIQ,eAAe,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAtB;;AAEA,kBAAGJ,OAAO,CAACA,OAAR,CAAgBK,UAAhB,CAA2BC,aAA9B,EACA;AAAA;AAAA;AAAA;;AAAA;AACC,wCAA0BN,OAAO,CAACA,OAAR,CAAgBK,UAAhB,CAA2BzB,KAArD;AAAA,0BAAU2B,YAAV;AACCJ,oBAAAA,eAAe,GAAG,4BAAcA,eAAd,EAA+BI,YAAY,CAACF,UAAb,CAAwBG,QAAvD,CAAlB;AADD;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGC,eAJD,MAMCL,eAAe,GAAGH,OAAO,CAACA,OAAR,CAAgBK,UAAhB,CAA2BG,QAA7C,CAfF,CAgBC;AAEA;;;AACA,oBAAMxB,IAAI,GAAGR,MAAM,CAACiC,OAAP,CAAeN,eAAf,CAAb;AACA,kBAAGnB,IAAI,CAAC0B,MAAL,KAAiB,CAAC,CAArB,EACC,OAAOhB,OAAO,CAACC,MAAR,CAAe,+DAAf,CAAP,CArBF,CAsBC;AAEA;;AACA,mBAAK9B,WAAL,CAAiBF,YAAjB,CAA8BgD,IAA9B,CAAmC;AAClCC,gBAAAA,WAAW,EAAE,CADqB;AAClB;AAChBhC,gBAAAA,KAAK,EAAE,IAAIiC,qBAAJ,CAAiB;AAAE9C,kBAAAA,MAAM,EAAEiB,IAAI,CAACK;AAAf,iBAAjB;AAF2B,eAAnC,EAzBD,CA6BC;AACA;AACD;AACD;AACA;;AACA,eAAK,sBAAL;AACC;AACC;AACA,oBAAMyB,YAAY,GAAG,IAAIC,sBAAJ,CAAkB;AAAEhD,gBAAAA,MAAM,EAAEiC,OAAO,CAACA;AAAlB,eAAlB,CAArB,CAFD,CAGC;AAEA;;AACA,kBAAI,0BAA0BtC,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,CAA3B,KAA+D,KAAlE,EACC,OAAOL,OAAO,CAACC,MAAR,CAAe,uFAAf,CAAP;AAED,oBAAMqB,oBAAoB,GAAGtD,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BiB,oBAA5D;AAEA,kBAAI,kBAAkBtD,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,CAAnB,KAAuD,KAA1D,EACC,OAAOL,OAAO,CAACC,MAAR,CAAe,+EAAf,CAAP,CAZF,CAcC;;AACA,oBAAMsB,YAAY,GAAGvD,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BkB,YAApD,CAfD,CAgBC;AAEA;;AACArB,cAAAA,QAAQ,GAAGA,QAAQ,CAACsB,IAAT,CACV,MAAMJ,YAAY,CAACK,OAAb,CAAqB,CAArB,EAAwB;AAC7BH,gBAAAA,oBAD6B;AAE7BI,gBAAAA,mBAAmB,EAAEH;AAFQ,eAAxB,CADI,CAAX;AAOArB,cAAAA,QAAQ,GAAGA,QAAQ,CAACsB,IAAT;AACV;;;AAGA7B,cAAAA,MAAM,IACN;AACC,sBAAML,IAAI,GAAGR,MAAM,CAACiC,OAAP,CAAepB,MAAf,CAAb;AACA,oBAAGL,IAAI,CAAC0B,MAAL,KAAiB,CAAC,CAArB,EACC,OAAOhB,OAAO,CAACC,MAAR,CAAe,wCAAf,CAAP;AAED,qBAAK9B,WAAL,CAAiBF,YAAjB,CAA8BgD,IAA9B,CAAmC;AAClCC,kBAAAA,WAAW,EAAE,CADqB;AAClB;AAChBhC,kBAAAA,KAAK,EAAE,IAAIiC,qBAAJ,CAAiB;AAAE9C,oBAAAA,MAAM,EAAEiB,IAAI,CAACK;AAAf,mBAAjB;AAF2B,iBAAnC;AAKA,uBAAOK,OAAO,CAACG,OAAR,EAAP;AACA,eAhBS,CAAX,CA1BD,CA4CC;AACA;AACD;AACD;AACA;;AACA,eAAK,sBAAL;AACC;AACC;AACA,oBAAMwB,YAAY,GAAG,IAAIC,sBAAJ,CAAkB;AAAEvD,gBAAAA,MAAM,EAAEiC,OAAO,CAACA;AAAlB,eAAlB,CAArB,CAFD,CAGC;AAEA;;AACA,kBAAI,cAActC,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,CAAf,KAAmD,KAAtD,EACC,OAAOL,OAAO,CAACC,MAAR,CAAe,2EAAf,CAAP;AAED,oBAAM4B,QAAQ,GAAG7D,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BwB,QAAhD,CATD,CAUC;AAEA;;AACA3B,cAAAA,QAAQ,GAAGA,QAAQ,CAACsB,IAAT,CACV,MAAMG,YAAY,CAACF,OAAb,CAAqB;AAC1BI,gBAAAA;AAD0B,eAArB,CADI,EAIVC,KAAK,IAAI9B,OAAO,CAACC,MAAR,CAAe6B,KAAf,CAJC,CAAX,CAbD,CAmBC;AAEA;;AACA5B,cAAAA,QAAQ,GAAGA,QAAQ,CAACsB,IAAT;AACV;;;AAGA7B,cAAAA,MAAM,IACN;AACC,sBAAML,IAAI,GAAGR,MAAM,CAACiC,OAAP,CAAepB,MAAf,CAAb;AACA,oBAAGL,IAAI,CAAC0B,MAAL,KAAiB,CAAC,CAArB,EACC,OAAOhB,OAAO,CAACC,MAAR,CAAe,wCAAf,CAAP;AAED,qBAAK9B,WAAL,CAAiBF,YAAjB,CAA8BgD,IAA9B,CAAmC;AAClCC,kBAAAA,WAAW,EAAE,CADqB;AAClB;AAChBhC,kBAAAA,KAAK,EAAE,IAAIiC,qBAAJ,CAAiB;AAAE9C,oBAAAA,MAAM,EAAEiB,IAAI,CAACK;AAAf,mBAAjB;AAF2B,iBAAnC;AAKA,uBAAOK,OAAO,CAACG,OAAR,EAAP;AACA,eAhBS,EAiBV2B,KAAK,IAAI9B,OAAO,CAACC,MAAR,CAAe6B,KAAf,CAjBC,CAAX,CAtBD,CAyCC;AACA;AACD;AACD;AACA;;AACA;AACC,kBAAM,IAAIvD,KAAJ,CAAW,kDAAiD+B,OAAO,CAACC,WAAY,EAAhF,CAAN;AACD;AAzID;AA2IA,OArKF,CAsKC;;AAtKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwKC,WAAOL,QAAP;AACA,GApUF,CAqUC;;;AACA6B,EAAAA,kBAAkB,CAAC/D,UAAD,EAClB;AACC;AACA,QAAI,iBAAiB,IAAlB,KAA4B,KAA/B,EACC,OAAOgC,OAAO,CAACC,MAAR,CAAe,kEAAf,CAAP;AAED,QAAI,KAAK9B,WAAL,YAA4BQ,MAA7B,KAAyC,KAA5C,EACC,OAAOqB,OAAO,CAACC,MAAR,CAAe,mDAAf,CAAP;AAED,QAAI,KAAK9B,WAAL,CAAiBF,YAAjB,YAAyCwB,KAA1C,KAAqD,KAAxD,EACC,OAAOO,OAAO,CAACC,MAAR,CAAe,+DAAf,CAAP,CATF,CAUC;AAEA;;AACA,QAAIjC,UAAU,YAAYW,MAAvB,KAAmC,KAAtC,EACC,OAAOqB,OAAO,CAACC,MAAR,CAAe,6CAAf,CAAP;AAED,QAAI,kBAAkBjC,UAAnB,KAAmC,KAAtC,EACC,OAAOgC,OAAO,CAACC,MAAR,CAAe,6CAAf,CAAP;AAED,QAAIjC,UAAU,CAACC,YAAX,YAAmCwB,KAApC,KAA+C,KAAlD,EACC,OAAOO,OAAO,CAACC,MAAR,CAAe,yDAAf,CAAP;AAED,QAAGjC,UAAU,CAACC,YAAX,CAAwBS,MAAxB,KAAmC,KAAKP,WAAL,CAAiBF,YAAjB,CAA8BS,MAApE,EACC,OAAOsB,OAAO,CAACC,MAAR,CAAe,0FAAf,CAAP,CAvBF,CAwBC;AAEA;;AACA,QAAIC,QAAQ,GAAGF,OAAO,CAACG,OAAR,EAAf,CA3BD,CA4BC;AAEA;;AACA,SAAKlC,YAAL,GAAoB,EAApB;AA/BD;AAAA;AAAA;;AAAA;AAiCC,4BAA8B,KAAKE,WAAL,CAAiBF,YAAjB,CAA8BmC,OAA9B,EAA9B,mIACA;AAAA;AAAA,cADWC,KACX;AAAA,cADkBC,OAClB;;AACC;AACA,YAAI,iBAAiBA,OAAlB,KAA+B,KAAlC,EACC,OAAON,OAAO,CAACC,MAAR,CAAe,8DAAf,CAAP;AAED,YAAI,WAAWK,OAAZ,KAAyB,KAA5B,EACC,OAAON,OAAO,CAACC,MAAR,CAAe,wDAAf,CAAP;AAED,YAAIK,OAAO,CAACpB,KAAR,YAAyBiC,qBAA1B,KAA4C,KAA/C,EACC,OAAOnB,OAAO,CAACC,MAAR,CAAe,sDAAf,CAAP,CATF,CAUC;;AAEA,gBAAOK,OAAO,CAACY,WAAf;AAEC;AACA,eAAK,CAAL;AACC;AACC,oBAAMc,aAAa,GAAG1B,OAAO,CAACpB,KAAR,CAAcW,QAAd,GAAyBoC,KAAzB,CAA+B,KAA/B,CAAtB;AAEA/B,cAAAA,QAAQ,GAAGA,QAAQ,CAACsB,IAAT,CACV,MACA;AACC,qBAAKvD,YAAL,CAAkBgD,IAAlB,CAAuB,IAAI5B,oBAAJ,CAAgB;AACtCkB,kBAAAA,WAAW,EAAE,sBADyB;AAEtCD,kBAAAA,OAAO,EAAE,IAAIxB,MAAM,CAAC0B,WAAX,CAAuB;AAAEM,oBAAAA,QAAQ,EAAEkB;AAAZ,mBAAvB;AAF6B,iBAAhB,CAAvB;AAIA,eAPS,CAAX;AAQA;AACD;AACD;AACA;;AACA,eAAK,CAAL;AACC;AACC;AACA,oBAAML,YAAY,GAAG,IAAIC,sBAAJ,EAArB;AAEA,oBAAMM,iBAAiB,GAAGlE,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,CAA1B;AACA6B,cAAAA,iBAAiB,CAACC,gBAAlB,GAAqC7B,OAAO,CAACpB,KAAR,CAAcW,QAAd,GAAyBoC,KAAzB,CAA+B,KAA/B,CAArC,CALD,CAMC;AAEA;;AACA/B,cAAAA,QAAQ,GAAGA,QAAQ,CAACsB,IAAT,CACV,MAAMG,YAAY,CAACS,OAAb,CAAqBF,iBAArB,CADI,EAEVJ,KAAK,IAAI9B,OAAO,CAACC,MAAR,CAAe6B,KAAf,CAFC,CAAX,CATD,CAaC;AAEA;;AACA5B,cAAAA,QAAQ,GAAGA,QAAQ,CAACsB,IAAT,CACV,MACA;AACC,qBAAKvD,YAAL,CAAkBgD,IAAlB,CAAuB,IAAI5B,oBAAJ,CAAgB;AACtCkB,kBAAAA,WAAW,EAAE,sBADyB;AAEtCD,kBAAAA,OAAO,EAAEqB,YAAY,CAAC9B,QAAb;AAF6B,iBAAhB,CAAvB;AAIA,eAPS,EAQViC,KAAK,IAAI9B,OAAO,CAACC,MAAR,CAAe6B,KAAf,CARC,CAAX,CAhBD,CA0BC;AACA;AACD;AACD;AACA;;AACA,eAAK,CAAL;AACC;AACC;AACA,oBAAMV,YAAY,GAAG,IAAIC,sBAAJ,EAArB;AACA,oBAAMc,gBAAgB,GAAG7B,OAAO,CAACpB,KAAR,CAAcW,QAAd,GAAyBoC,KAAzB,CAA+B,KAA/B,CAAzB,CAHD,CAIC;AAEA;;AACA,kBAAI,2BAA2BjE,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,CAA5B,KAAgE,KAAnE,EACC,OAAOL,OAAO,CAACC,MAAR,CAAe,wFAAf,CAAP;AAED,kBAAI,yBAAyBjC,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,CAA1B,KAA8D,KAAjE,EACC,OAAOL,OAAO,CAACC,MAAR,CAAe,sFAAf,CAAP;;AAED,sBAAO,IAAP;AAEC,qBAAMjC,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BgC,mBAA/B,CAAmDrD,IAAnD,CAAwDsD,WAAxD,OAA0E,SAAhF;AACA,qBAAMtE,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BgC,mBAA/B,CAAmDrD,IAAnD,CAAwDsD,WAAxD,OAA0E,SAAhF;AACC;;AACD;AACC,yBAAOtC,OAAO,CAACC,MAAR,CAAgB,8EAA6EjC,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BgC,mBAAoB,EAAhJ,CAAP;AANF;;AASA,sBAAO,IAAP;AAEC,qBAAMrE,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BgC,mBAA/B,CAAmD3D,MAAnD,KAA8D,GAApE;AACA,qBAAMV,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BgC,mBAA/B,CAAmD3D,MAAnD,KAA8D,GAApE;AACA,qBAAMV,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BgC,mBAA/B,CAAmD3D,MAAnD,KAA8D,GAApE;AACC;;AACD;AACC,yBAAOsB,OAAO,CAACC,MAAR,CAAgB,qFAAoFjC,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BgC,mBAA/B,CAAmD3D,MAAO,EAA9J,CAAP;AAPF,eAtBD,CA+BC;AAEA;;;AACA,oBAAM2D,mBAAmB,GAAGrE,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BgC,mBAA3D,CAlCD,CAmCC;AAEA;;AACAjB,cAAAA,YAAY,CAACmB,yBAAb,CAAuCvE,UAAU,CAACC,YAAX,CAAwBoC,KAAxB,EAA+BmC,qBAAtE,EAtCD,CAuCC;AAEA;;AACAtC,cAAAA,QAAQ,GAAGA,QAAQ,CAACsB,IAAT,CACV,MAAMJ,YAAY,CAACgB,OAAb,CAAqBC,mBAArB,EAA0CF,gBAA1C,CADI,CAAX;AAIAjC,cAAAA,QAAQ,GAAGA,QAAQ,CAACsB,IAAT,CACV,MACA;AACC,qBAAKvD,YAAL,CAAkBgD,IAAlB,CAAuB,IAAI5B,oBAAJ,CAAgB;AACtCkB,kBAAAA,WAAW,EAAE,sBADyB;AAEtCD,kBAAAA,OAAO,EAAEc,YAAY,CAACvB,QAAb;AAF6B,iBAAhB,CAAvB;AAIA,eAPS,CAAX,CA9CD,CAuDC;AACA;AACD;AACD;AACA;;AACA;AACC,mBAAOG,OAAO,CAACC,MAAR,CAAgB,8CAA6CK,OAAO,CAACY,WAAY,EAAjF,CAAP;AACD;AAlHD;AAoHA,OAlKF,CAmKC;AAEA;;AArKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsKC,WAAOhB,QAAQ,CAACsB,IAAT,CACN,MAAM,IADA,EAENM,KAAK,IAAI9B,OAAO,CAACC,MAAR,CAAgB,yBAAwB6B,KAAM,EAA9C,CAFH,CAAP,CAtKD,CA0KC;AACA,GAlfF,CAmfC;;;AAnfD,C,CAqfA","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf, clearProps } from \"pvutils\";\r\nimport ContentInfo from \"./ContentInfo.js\";\r\nimport SafeContents from \"./SafeContents.js\";\r\nimport EnvelopedData from \"./EnvelopedData.js\";\r\nimport EncryptedData from \"./EncryptedData.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC7292\r\n */\r\nexport default class AuthenticatedSafe\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AuthenticatedSafe class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<ContentInfo>}\r\n\t\t * @desc safeContents\r\n\t\t */\r\n\t\tthis.safeContents = getParametersValue(parameters, \"safeContents\", AuthenticatedSafe.defaultValues(\"safeContents\"));\r\n\r\n\t\tif(\"parsedValue\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @desc parsedValue\r\n\t\t\t */\r\n\t\t\tthis.parsedValue = getParametersValue(parameters, \"parsedValue\", AuthenticatedSafe.defaultValues(\"parsedValue\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"safeContents\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AuthenticatedSafe class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"safeContents\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn ((memberValue instanceof Object) && (Object.keys(memberValue).length === 0));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AuthenticatedSafe class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\r\n\t * -- Data if unencrypted\r\n\t * -- EncryptedData if password-encrypted\r\n\t * -- EnvelopedData if public key-encrypted\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [contentInfos]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.contentInfos || \"\"),\r\n\t\t\t\t\tvalue: ContentInfo.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"contentInfos\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAuthenticatedSafe.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcontentInfos: \"contentInfos\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AuthenticatedSafe\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.safeContents = Array.from(asn1.result.contentInfos, element => new ContentInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.safeContents, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tsafeContents: Array.from(this.safeContents, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\tparseInternalValues(parameters)\r\n\t{\r\n\t\t//region Check input data from \"parameters\" \r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((\"safeContents\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"safeContents\\\"\");\r\n\t\t\r\n\t\tif((parameters.safeContents instanceof Array) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters.safeContents\\\" must has \\\"Array\\\" type\");\r\n\t\t\r\n\t\tif(parameters.safeContents.length !== this.safeContents.length)\r\n\t\t\treturn Promise.reject(\"Length of \\\"parameters.safeContents\\\" must be equal to \\\"this.safeContents.length\\\"\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Initial variables \r\n\t\tlet sequence = Promise.resolve();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create value for \"this.parsedValue.authenticatedSafe\" \r\n\t\tthis.parsedValue = {\r\n\t\t\tsafeContents: []\r\n\t\t};\r\n\t\t\r\n\t\tfor(const [index, content] of this.safeContents.entries())\r\n\t\t{\r\n\t\t\tswitch(content.contentType)\r\n\t\t\t{\r\n\t\t\t\t//region data \r\n\t\t\t\tcase \"1.2.840.113549.1.7.1\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Check that we do have OCTETSTRING as \"content\"\r\n\t\t\t\t\t\tif((content.content instanceof asn1js.OctetString) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Wrong type of \\\"this.safeContents[j].content\\\"\");\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check we have \"constructive encoding\" for AuthSafe content\r\n\t\t\t\t\t\tlet authSafeContent = new ArrayBuffer(0);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(content.content.valueBlock.isConstructed)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfor(const contentValue of content.content.valueBlock.value)\r\n\t\t\t\t\t\t\t\tauthSafeContent = utilConcatBuf(authSafeContent, contentValue.valueBlock.valueHex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tauthSafeContent = content.content.valueBlock.valueHex;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Parse internal ASN.1 data\r\n\t\t\t\t\t\tconst asn1 = asn1js.fromBER(authSafeContent);\r\n\t\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of ASN.1 data inside \\\"content.content\\\"\");\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Finilly initialize initial values of \"SafeContents\" type\r\n\t\t\t\t\t\tthis.parsedValue.safeContents.push({\r\n\t\t\t\t\t\t\tprivacyMode: 0, // No privacy, clear data\r\n\t\t\t\t\t\t\tvalue: new SafeContents({ schema: asn1.result })\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region envelopedData \r\n\t\t\t\tcase \"1.2.840.113549.1.7.3\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEnveloped = new EnvelopedData({ schema: content.content });\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check mandatory parameters\r\n\t\t\t\t\t\tif((\"recipientCertificate\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"recipientCertificate\\\" in \\\"parameters.safeContents[j]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst recipientCertificate = parameters.safeContents[index].recipientCertificate;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif((\"recipientKey\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"recipientKey\\\" in \\\"parameters.safeContents[j]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\t\t\t\tconst recipientKey = parameters.safeContents[index].recipientKey;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Decrypt CMS EnvelopedData using first recipient information\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEnveloped.decrypt(0, {\r\n\t\t\t\t\t\t\t\trecipientCertificate,\r\n\t\t\t\t\t\t\t\trecipientPrivateKey: recipientKey\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * @param {ArrayBuffer} result\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconst asn1 = asn1js.fromBER(result);\r\n\t\t\t\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of decrypted data\");\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.parsedValue.safeContents.push({\r\n\t\t\t\t\t\t\t\t\tprivacyMode: 2, // Public-key privacy mode\r\n\t\t\t\t\t\t\t\t\tvalue: new SafeContents({ schema: asn1.result })\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion   \r\n\t\t\t\t//region encryptedData \r\n\t\t\t\tcase \"1.2.840.113549.1.7.6\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEncrypted = new EncryptedData({ schema: content.content });\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check mandatory parameters\r\n\t\t\t\t\t\tif((\"password\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"password\\\" in \\\"parameters.safeContents[j]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst password = parameters.safeContents[index].password;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Decrypt CMS EncryptedData using password\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEncrypted.decrypt({\r\n\t\t\t\t\t\t\t\tpassword\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Initialize internal data\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * @param {ArrayBuffer} result\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tresult =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconst asn1 = asn1js.fromBER(result);\r\n\t\t\t\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(\"Error during parsing of decrypted data\");\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.parsedValue.safeContents.push({\r\n\t\t\t\t\t\t\t\t\tprivacyMode: 1, // Password-based privacy mode\r\n\t\t\t\t\t\t\t\t\tvalue: new SafeContents({ schema: asn1.result })\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion   \r\n\t\t\t\t//region default \r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`Unknown \"contentType\" for AuthenticatedSafe: \" ${content.contentType}`);\r\n\t\t\t\t//endregion \r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\tmakeInternalValues(parameters)\r\n\t{\r\n\t\t//region Check data in \"parsedValue\" \r\n\t\tif((\"parsedValue\" in this) === false)\r\n\t\t\treturn Promise.reject(\"Please run \\\"parseValues\\\" first or add \\\"parsedValue\\\" manually\");\r\n\t\t\r\n\t\tif((this.parsedValue instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"this.parsedValue\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((this.parsedValue.safeContents instanceof Array) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"this.parsedValue.safeContents\\\" must has \\\"Array\\\" type\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Check input data from \"parameters\" \r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters\\\" must has \\\"Object\\\" type\");\r\n\t\t\r\n\t\tif((\"safeContents\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"safeContents\\\"\");\r\n\t\t\r\n\t\tif((parameters.safeContents instanceof Array) === false)\r\n\t\t\treturn Promise.reject(\"The \\\"parameters.safeContents\\\" must has \\\"Array\\\" type\");\r\n\t\t\r\n\t\tif(parameters.safeContents.length !== this.parsedValue.safeContents.length)\r\n\t\t\treturn Promise.reject(\"Length of \\\"parameters.safeContents\\\" must be equal to \\\"this.parsedValue.safeContents\\\"\");\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Initial variables \r\n\t\tlet sequence = Promise.resolve();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create internal values from already parsed values \r\n\t\tthis.safeContents = [];\r\n\t\t\r\n\t\tfor(const [index, content] of this.parsedValue.safeContents.entries())\r\n\t\t{\r\n\t\t\t//region Check current \"content\" value\r\n\t\t\tif((\"privacyMode\" in content) === false)\r\n\t\t\t\treturn Promise.reject(\"The \\\"privacyMode\\\" is a mandatory parameter for \\\"content\\\"\");\r\n\t\t\t\r\n\t\t\tif((\"value\" in content) === false)\r\n\t\t\t\treturn Promise.reject(\"The \\\"value\\\" is a mandatory parameter for \\\"content\\\"\");\r\n\t\t\t\r\n\t\t\tif((content.value instanceof SafeContents) === false)\r\n\t\t\t\treturn Promise.reject(\"The \\\"content.value\\\" must has \\\"SafeContents\\\" type\");\r\n\t\t\t//endregion \r\n\t\t\t\r\n\t\t\tswitch(content.privacyMode)\r\n\t\t\t{\r\n\t\t\t\t//region No privacy \r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst contentBuffer = content.value.toSchema().toBER(false);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.safeContents.push(new ContentInfo({\r\n\t\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.1\",\r\n\t\t\t\t\t\t\t\t\tcontent: new asn1js.OctetString({ valueHex: contentBuffer })\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region Privacy with password\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEncrypted = new EncryptedData();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst currentParameters = parameters.safeContents[index];\r\n\t\t\t\t\t\tcurrentParameters.contentToEncrypt = content.value.toSchema().toBER(false);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Encrypt CMS EncryptedData using password\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEncrypted.encrypt(currentParameters),\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Store result content in CMS_CONTENT_INFO type\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.safeContents.push(new ContentInfo({\r\n\t\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.6\",\r\n\t\t\t\t\t\t\t\t\tcontent: cmsEncrypted.toSchema()\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terror => Promise.reject(error)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region Privacy with public key\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\tconst cmsEnveloped = new EnvelopedData();\r\n\t\t\t\t\t\tconst contentToEncrypt = content.value.toSchema().toBER(false);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Check mandatory parameters\r\n\t\t\t\t\t\tif((\"encryptingCertificate\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"encryptingCertificate\\\" in \\\"parameters.safeContents[i]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif((\"encryptionAlgorithm\" in parameters.safeContents[index]) === false)\r\n\t\t\t\t\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"encryptionAlgorithm\\\" in \\\"parameters.safeContents[i]\\\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tswitch(true)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.name.toLowerCase() === \"aes-cbc\"):\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.name.toLowerCase() === \"aes-gcm\"):\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect parameter \"encryptionAlgorithm\" in \"parameters.safeContents[i]\": ${parameters.safeContents[index].encryptionAlgorithm}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tswitch(true)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.length === 128):\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.length === 192):\r\n\t\t\t\t\t\t\tcase (parameters.safeContents[index].encryptionAlgorithm.length === 256):\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect parameter \"encryptionAlgorithm.length\" in \"parameters.safeContents[i]\": ${parameters.safeContents[index].encryptionAlgorithm.length}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Making correct \"encryptionAlgorithm\" variable\r\n\t\t\t\t\t\tconst encryptionAlgorithm = parameters.safeContents[index].encryptionAlgorithm;\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Append recipient for enveloped data\r\n\t\t\t\t\t\tcmsEnveloped.addRecipientByCertificate(parameters.safeContents[index].encryptingCertificate);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//region Making encryption\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() => cmsEnveloped.encrypt(encryptionAlgorithm, contentToEncrypt)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsequence = sequence.then(\r\n\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.safeContents.push(new ContentInfo({\r\n\t\t\t\t\t\t\t\t\tcontentType: \"1.2.840.113549.1.7.3\",\r\n\t\t\t\t\t\t\t\t\tcontent: cmsEnveloped.toSchema()\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion \r\n\t\t\t\t//region default \r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn Promise.reject(`Incorrect value for \"content.privacyMode\": ${content.privacyMode}`);\r\n\t\t\t\t//endregion \r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Return result of the function \r\n\t\treturn sequence.then(\r\n\t\t\t() => this,\r\n\t\t\terror => Promise.reject(`Error during parsing: ${error}`)\r\n\t\t);\r\n\t\t//endregion   \r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"AuthenticatedSafe.js"}