{"version":3,"sources":["../src/Extension.js"],"names":["Extension","constructor","parameters","extnID","defaultValues","critical","extnValue","asn1js","OctetString","valueHex","parsedValue","fromSchema","schema","memberName","Error","names","Sequence","name","blockName","value","ObjectIdentifier","Boolean","optional","asn1","compareSchema","verified","result","valueBlock","toString","fromBER","offset","SubjectDirectoryAttributes","ex","parsingError","PrivateKeyUsagePeriod","AltName","BasicConstraints","IssuingDistributionPoint","GeneralNames","NameConstraints","CRLDistributionPoints","CertificatePolicies","PolicyMappings","AuthorityKeyIdentifier","PolicyConstraints","ExtKeyUsage","InfoAccess","SignedCertificateTimestampList","CertificateTemplate","CAVersion","QCStatements","toSchema","outputArray","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport SubjectDirectoryAttributes from \"./SubjectDirectoryAttributes.js\";\r\nimport PrivateKeyUsagePeriod from \"./PrivateKeyUsagePeriod.js\";\r\nimport AltName from \"./AltName.js\";\r\nimport BasicConstraints from \"./BasicConstraints.js\";\r\nimport IssuingDistributionPoint from \"./IssuingDistributionPoint.js\";\r\nimport GeneralNames from \"./GeneralNames.js\";\r\nimport NameConstraints from \"./NameConstraints.js\";\r\nimport CRLDistributionPoints from \"./CRLDistributionPoints.js\";\r\nimport CertificatePolicies from \"./CertificatePolicies.js\";\r\nimport PolicyMappings from \"./PolicyMappings.js\";\r\nimport AuthorityKeyIdentifier from \"./AuthorityKeyIdentifier.js\";\r\nimport PolicyConstraints from \"./PolicyConstraints.js\";\r\nimport ExtKeyUsage from \"./ExtKeyUsage.js\";\r\nimport InfoAccess from \"./InfoAccess.js\";\r\nimport SignedCertificateTimestampList from \"./SignedCertificateTimestampList.js\";\r\nimport CertificateTemplate from \"./CertificateTemplate.js\";\r\nimport CAVersion from \"./CAVersion.js\";\r\nimport QCStatements from \"./QCStatements.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class Extension\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Extension class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc extnID\r\n\t\t */\r\n\t\tthis.extnID = getParametersValue(parameters, \"extnID\", Extension.defaultValues(\"extnID\"));\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc critical\r\n\t\t */\r\n\t\tthis.critical = getParametersValue(parameters, \"critical\", Extension.defaultValues(\"critical\"));\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @desc extnValue\r\n\t\t */\r\n\t\tif(\"extnValue\" in parameters)\r\n\t\t\tthis.extnValue = new asn1js.OctetString({ valueHex: parameters.extnValue });\r\n\t\telse\r\n\t\t\tthis.extnValue = Extension.defaultValues(\"extnValue\");\r\n\r\n\t\tif(\"parsedValue\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Object}\r\n\t\t\t * @desc parsedValue\r\n\t\t\t */\r\n\t\t\tthis.parsedValue = getParametersValue(parameters, \"parsedValue\", Extension.defaultValues(\"parsedValue\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"extnID\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"critical\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"extnValue\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Extension class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * Extension  ::=  SEQUENCE  {\r\n\t *    extnID      OBJECT IDENTIFIER,\r\n\t *    critical    BOOLEAN DEFAULT FALSE,\r\n\t *    extnValue   OCTET STRING\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [extnID]\r\n\t\t * @property {string} [critical]\r\n\t\t * @property {string} [extnValue]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.extnID || \"\") }),\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\tname: (names.critical || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.OctetString({ name: (names.extnValue || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"extnID\",\r\n\t\t\t\"critical\",\r\n\t\t\t\"extnValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tlet asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tExtension.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\textnID: \"extnID\",\r\n\t\t\t\t\tcritical: \"critical\",\r\n\t\t\t\t\textnValue: \"extnValue\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for Extension\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.extnID = asn1.result.extnID.valueBlock.toString();\r\n\t\tif(\"critical\" in asn1.result)\r\n\t\t\tthis.critical = asn1.result.critical.valueBlock.value;\r\n\t\tthis.extnValue = asn1.result.extnValue;\r\n\r\n\t\t//region Get \"parsedValue\" for well-known extensions\r\n\t\tasn1 = asn1js.fromBER(this.extnValue.valueBlock.valueHex);\r\n\t\tif(asn1.offset === (-1))\r\n\t\t\treturn;\r\n\r\n\t\tswitch(this.extnID)\r\n\t\t{\r\n\t\t\tcase \"2.5.29.9\": // SubjectDirectoryAttributes\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SubjectDirectoryAttributes({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SubjectDirectoryAttributes();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated SubjectDirectoryAttributes\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.14\": // SubjectKeyIdentifier\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple OCTETSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.15\": // KeyUsage\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple BITSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.16\": // PrivateKeyUsagePeriod\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PrivateKeyUsagePeriod({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PrivateKeyUsagePeriod();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated PrivateKeyUsagePeriod\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.17\": // SubjectAltName\r\n\t\t\tcase \"2.5.29.18\": // IssuerAltName\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AltName({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AltName();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated AltName\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.19\": // BasicConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new BasicConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new BasicConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated BasicConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.20\": // CRLNumber\r\n\t\t\tcase \"2.5.29.27\": // BaseCRLNumber (delta CRL indicator)\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.21\": // CRLReason\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple ENUMERATED\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.24\": // InvalidityDate\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple GeneralizedTime\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.28\": // IssuingDistributionPoint\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new IssuingDistributionPoint({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new IssuingDistributionPoint();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated IssuingDistributionPoint\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.29\": // CertificateIssuer\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new GeneralNames({ schema: asn1.result }); // Should be just a simple\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new GeneralNames();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated GeneralNames\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.30\": // NameConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new NameConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new NameConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated NameConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.31\": // CRLDistributionPoints\r\n\t\t\tcase \"2.5.29.46\": // FreshestCRL\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CRLDistributionPoints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CRLDistributionPoints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CRLDistributionPoints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.32\": // CertificatePolicies\r\n\t\t\tcase \"1.3.6.1.4.1.311.21.10\": // szOID_APPLICATION_CERT_POLICIES - Microsoft-specific OID\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificatePolicies({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificatePolicies();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificatePolicies\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.33\": // PolicyMappings\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyMappings({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyMappings();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificatePolicies\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.35\": // AuthorityKeyIdentifier\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AuthorityKeyIdentifier({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AuthorityKeyIdentifier();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated AuthorityKeyIdentifier\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.36\": // PolicyConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated PolicyConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.37\": // ExtKeyUsage\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new ExtKeyUsage({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new ExtKeyUsage();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated ExtKeyUsage\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.54\": // InhibitAnyPolicy\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.1\": // AuthorityInfoAccess\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.11\": // SubjectInfoAccess\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new InfoAccess({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new InfoAccess();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated InfoAccess\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.11129.2.4.2\": // SignedCertificateTimestampList\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SignedCertificateTimestampList({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SignedCertificateTimestampList();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated SignedCertificateTimestampList\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.311.20.2\": // szOID_ENROLL_CERTTYPE_EXTENSION - Microsoft-specific extension\r\n\t\t\t\tthis.parsedValue = asn1.result; // Used to be simple Unicode string\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.311.21.2\": // szOID_CERTSRV_PREVIOUS_CERT_HASH - Microsoft-specific extension\r\n\t\t\t\tthis.parsedValue = asn1.result; // Used to be simple OctetString\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.311.21.7\": // szOID_CERTIFICATE_TEMPLATE - Microsoft-specific extension\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificateTemplate({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificateTemplate();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificateTemplate\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.311.21.1\": // szOID_CERTSRV_CA_VERSION - Microsoft-specific extension\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CAVersion({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CAVersion();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CAVersion\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.3\": // QCStatements\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new QCStatements({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new QCStatements();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated QCStatements\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.extnID }));\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.critical }));\r\n\r\n\t\toutputArray.push(this.extnValue);\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\textnID: this.extnID,\r\n\t\t\textnValue: this.extnValue.toJSON()\r\n\t\t};\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\tobject.critical = this.critical;\r\n\r\n\t\tif(\"parsedValue\" in this)\r\n\t\t{\r\n\t\t\tif(\"toJSON\" in this.parsedValue)\r\n\t\t\t\tobject.parsedValue = this.parsedValue.toJSON();\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"Extension.js"}