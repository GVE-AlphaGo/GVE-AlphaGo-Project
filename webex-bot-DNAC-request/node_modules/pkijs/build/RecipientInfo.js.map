{"version":3,"sources":["../src/RecipientInfo.js"],"names":["RecipientInfo","constructor","parameters","variant","defaultValues","value","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","Object","keys","length","names","asn1js","Choice","KeyTransRecipientInfo","blockName","Constructed","name","idBlock","tagClass","tagNumber","KeyAgreeRecipientInfo","valueBlock","KEKRecipientInfo","PasswordRecipientinfo","OtherRecipientInfo","asn1","compareSchema","verified","result","blockSequence","Sequence","toSchema","_schema","Any","toJSON","_object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport KeyTransRecipientInfo from \"./KeyTransRecipientInfo.js\";\r\nimport KeyAgreeRecipientInfo from \"./KeyAgreeRecipientInfo.js\";\r\nimport KEKRecipientInfo from \"./KEKRecipientInfo.js\";\r\nimport PasswordRecipientinfo from \"./PasswordRecipientinfo.js\";\r\nimport OtherRecipientInfo from \"./OtherRecipientInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class RecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", RecipientInfo.defaultValues(\"variant\"));\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @desc value\r\n\t\t\t */\r\n\t\t\tthis.value = getParametersValue(parameters, \"value\", RecipientInfo.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === RecipientInfo.defaultValues(memberName));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RecipientInfo ::= CHOICE {\r\n\t *    ktri KeyTransRecipientInfo,\r\n\t *    kari [1] KeyAgreeRecipientInfo,\r\n\t *    kekri [2] KEKRecipientInfo,\r\n\t *    pwri [3] PasswordRecipientinfo,\r\n\t *    ori [4] OtherRecipientInfo }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tKeyTransRecipientInfo.schema({\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KeyAgreeRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KEKRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: PasswordRecipientinfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: OtherRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"blockName\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RecipientInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new KeyTransRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//region Create \"SEQUENCE\" from \"ASN1_CONSTRUCTED\"\r\n\t\t\tconst blockSequence = new asn1js.Sequence({\r\n\t\t\t\tvalue: asn1.result.blockName.valueBlock.value\r\n\t\t\t});\r\n\t\t\t//endregion\r\n\r\n\t\t\tswitch(asn1.result.blockName.idBlock.tagNumber)\r\n\t\t\t{\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.variant = 2;\r\n\t\t\t\t\tthis.value = new KeyAgreeRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.variant = 3;\r\n\t\t\t\t\tthis.value = new KEKRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.variant = 4;\r\n\t\t\t\t\tthis.value = new PasswordRecipientinfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis.variant = 5;\r\n\t\t\t\t\tthis.value = new OtherRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Incorrect structure of RecipientInfo block\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tconst _schema = this.value.toSchema();\r\n\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn _schema;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\tcase 4:\r\n\t\t\t\t//region Create \"ASN1_CONSTRUCTED\" from \"SEQUENCE\"\r\n\t\t\t\t_schema.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\t\t_schema.idBlock.tagNumber = (this.variant - 1);\r\n\t\t\t\t//endregion\r\n\r\n\t\t\t\treturn _schema;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant >= 1) && (this.variant <= 4))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RecipientInfo.js"}