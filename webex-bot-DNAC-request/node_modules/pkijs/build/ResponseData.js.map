{"version":3,"sources":["../src/ResponseData.js"],"names":["ResponseData","constructor","parameters","tbs","defaultValues","responderID","producedAt","responses","responseExtensions","fromSchema","schema","memberName","ArrayBuffer","Date","Error","compareWithDefault","memberValue","byteLength","Object","keys","length","names","asn1js","Sequence","name","blockName","value","Constructed","optional","idBlock","tagClass","tagNumber","Integer","version","Choice","RelativeDistinguishedNames","ResponseDataByName","OctetString","ResponseDataByKey","GeneralizedTime","Repeated","SingleResponse","response","Extensions","extensions","asn1","compareSchema","verified","result","valueBeforeDecode","valueBlock","valueDec","toDate","Array","from","element","Extension","toSchema","encodeFlag","tbsSchema","fromBER","outputArray","push","valueDate","toJSON","_object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\nimport SingleResponse from \"./SingleResponse.js\";\r\nimport Extension from \"./Extension.js\";\r\nimport Extensions from \"./Extensions.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6960\r\n */\r\nexport default class ResponseData\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ResponseData class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc tbs\r\n\t\t */\r\n\t\tthis.tbs = getParametersValue(parameters, \"tbs\", ResponseData.defaultValues(\"tbs\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc responderID\r\n\t\t */\r\n\t\tthis.responderID = getParametersValue(parameters, \"responderID\", ResponseData.defaultValues(\"responderID\"));\r\n\t\t/**\r\n\t\t * @type {Date}\r\n\t\t * @desc producedAt\r\n\t\t */\r\n\t\tthis.producedAt = getParametersValue(parameters, \"producedAt\", ResponseData.defaultValues(\"producedAt\"));\r\n\t\t/**\r\n\t\t * @type {Array.<SingleResponse>}\r\n\t\t * @desc responses\r\n\t\t */\r\n\t\tthis.responses = getParametersValue(parameters, \"responses\", ResponseData.defaultValues(\"responses\"));\r\n\r\n\t\tif(\"responseExtensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @desc responseExtensions\r\n\t\t\t */\r\n\t\t\tthis.responseExtensions = getParametersValue(parameters, \"responseExtensions\", ResponseData.defaultValues(\"responseExtensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn {};\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn new Date(0, 0, 0);\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn (memberValue === ResponseData.defaultValues(memberName));\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * ResponseData ::= SEQUENCE {\r\n\t *    version              [0] EXPLICIT Version DEFAULT v1,\r\n\t *    responderID              ResponderID,\r\n\t *    producedAt               GeneralizedTime,\r\n\t *    responses                SEQUENCE OF SingleResponse,\r\n\t *    responseExtensions   [1] EXPLICIT Extensions OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [ResponseDataByName]\r\n\t\t * @property {string} [ResponseDataByKey]\r\n\t\t * @property {string} [producedAt]\r\n\t\t * @property {string} [response]\r\n\t\t * @property {string} [extensions]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"ResponseData\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.version || \"ResponseData.version\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [RelativeDistinguishedNames.schema(names.ResponseDataByName || {\r\n\t\t\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\t\t\tblockName: \"ResponseData.byName\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [new asn1js.OctetString({ name: (names.ResponseDataByKey || \"ResponseData.byKey\") })]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.GeneralizedTime({ name: (names.producedAt || \"ResponseData.producedAt\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: \"ResponseData.responses\",\r\n\t\t\t\t\t\t\tvalue: SingleResponse.schema(names.response || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [Extensions.schema(names.extensions || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"ResponseData.responseExtensions\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})]\r\n\t\t\t\t}) // EXPLICIT SEQUENCE value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"ResponseData\",\r\n\t\t\t\"ResponseData.version\",\r\n\t\t\t\"ResponseData.responderID\",\r\n\t\t\t\"ResponseData.producedAt\",\r\n\t\t\t\"ResponseData.responses\",\r\n\t\t\t\"ResponseData.responseExtensions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tResponseData.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ResponseData\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.tbs = asn1.result.ResponseData.valueBeforeDecode;\r\n\r\n\t\tif(\"ResponseData.version\" in asn1.result)\r\n\t\t\tthis.version = asn1.result[\"ResponseData.version\"].valueBlock.valueDec;\r\n\r\n\t\tif(asn1.result[\"ResponseData.responderID\"].idBlock.tagNumber === 1)\r\n\t\t\tthis.responderID = new RelativeDistinguishedNames({ schema: asn1.result[\"ResponseData.responderID\"].valueBlock.value[0] });\r\n\t\telse\r\n\t\t\tthis.responderID = asn1.result[\"ResponseData.responderID\"].valueBlock.value[0]; // OCTETSTRING\r\n\r\n\t\tthis.producedAt = asn1.result[\"ResponseData.producedAt\"].toDate();\r\n\t\tthis.responses = Array.from(asn1.result[\"ResponseData.responses\"], element => new SingleResponse({ schema: element }));\r\n\r\n\t\tif(\"ResponseData.responseExtensions\" in asn1.result)\r\n\t\t\tthis.responseExtensions = Array.from(asn1.result[\"ResponseData.responseExtensions\"].valueBlock.value, element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @param {boolean} encodeFlag If param equal to false then create TBS schema via decoding stored value. In othe case create TBS schema via assembling from TBS parts.\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema(encodeFlag = false)\r\n\t{\r\n\t\t//region Decode stored TBS value \r\n\t\tlet tbsSchema;\r\n\t\t\r\n\t\tif(encodeFlag === false)\r\n\t\t{\r\n\t\t\tif(this.tbs.length === 0) // No stored certificate TBS part\r\n\t\t\t\treturn ResponseData.schema();\r\n\t\t\t\r\n\t\t\ttbsSchema = asn1js.fromBER(this.tbs).result;\r\n\t\t}\r\n\t\t//endregion \r\n\t\t//region Create TBS schema via assembling from TBS parts\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst outputArray = [];\r\n\t\t\t\r\n\t\t\tif(\"version\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ value: this.version })]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.responderID instanceof RelativeDistinguishedNames)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID.toSchema()]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.GeneralizedTime({ valueDate: this.producedAt }));\r\n\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.responses, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\tif(\"responseExtensions\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Sequence({\r\n\t\t\t\t\t\tvalue: Array.from(this.responseExtensions, element => element.toSchema())\r\n\t\t\t\t\t})]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttbsSchema = new asn1js.Sequence({\r\n\t\t\t\tvalue: outputArray\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn tbsSchema;\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\r\n\t\tif(\"version\" in this)\r\n\t\t\t_object.version = this.version;\r\n\r\n\t\tif(\"responderID\" in this)\r\n\t\t\t_object.responderID = this.responderID;\r\n\r\n\t\tif(\"producedAt\" in this)\r\n\t\t\t_object.producedAt = this.producedAt;\r\n\r\n\t\tif(\"responses\" in this)\r\n\t\t\t_object.responses = Array.from(this.responses, element => element.toJSON());\r\n\r\n\t\tif(\"responseExtensions\" in this)\r\n\t\t\t_object.responseExtensions = Array.from(this.responseExtensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"ResponseData.js"}