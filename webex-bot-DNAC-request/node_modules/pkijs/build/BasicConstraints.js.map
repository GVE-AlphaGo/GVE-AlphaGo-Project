{"version":3,"sources":["../src/BasicConstraints.js"],"names":["BasicConstraints","constructor","parameters","cA","pathLenConstraint","fromSchema","schema","defaultValues","memberName","Error","names","asn1js","Sequence","name","blockName","value","Boolean","optional","Integer","asn1","compareSchema","verified","result","valueBlock","isHexOnly","valueDec","toSchema","outputArray","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class BasicConstraints\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for BasicConstraints class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {Object} [cA]\r\n\t * @property {Object} [pathLenConstraint]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc cA\r\n\t\t */\r\n\t\tthis.cA = getParametersValue(parameters, \"cA\", false);\r\n\r\n\t\tif(\"pathLenConstraint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number|Integer}\r\n\t\t\t * @desc pathLenConstraint\r\n\t\t\t */\r\n\t\t\tthis.pathLenConstraint = getParametersValue(parameters, \"pathLenConstraint\", 0);\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"cA\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for BasicConstraints class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * BasicConstraints ::= SEQUENCE {\r\n\t *    cA                      BOOLEAN DEFAULT FALSE,\r\n\t *    pathLenConstraint       INTEGER (0..MAX) OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [cA]\r\n\t\t * @property {string} [pathLenConstraint]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.cA || \"\")\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.pathLenConstraint || \"\")\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"cA\",\r\n\t\t\t\"pathLenConstraint\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tBasicConstraints.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcA: \"cA\",\r\n\t\t\t\t\tpathLenConstraint: \"pathLenConstraint\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for BasicConstraints\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"cA\" in asn1.result)\r\n\t\t\tthis.cA = asn1.result.cA.valueBlock.value;\r\n\r\n\t\tif(\"pathLenConstraint\" in asn1.result)\r\n\t\t{\r\n\t\t\tif(asn1.result.pathLenConstraint.valueBlock.isHexOnly)\r\n\t\t\t\tthis.pathLenConstraint = asn1.result.pathLenConstraint;\r\n\t\t\telse\r\n\t\t\t\tthis.pathLenConstraint = asn1.result.pathLenConstraint.valueBlock.valueDec;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(this.cA !== BasicConstraints.defaultValues(\"cA\"))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.cA }));\r\n\t\t\r\n\t\tif(\"pathLenConstraint\" in this)\r\n\t\t{\r\n\t\t\tif(this.pathLenConstraint instanceof asn1js.Integer)\r\n\t\t\t\toutputArray.push(this.pathLenConstraint);\r\n\t\t\telse\r\n\t\t\t\toutputArray.push(new asn1js.Integer({ value: this.pathLenConstraint }));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(this.cA !== BasicConstraints.defaultValues(\"cA\"))\r\n\t\t\tobject.cA = this.cA;\r\n\r\n\t\tif(\"pathLenConstraint\" in this)\r\n\t\t{\r\n\t\t\tif(this.pathLenConstraint instanceof asn1js.Integer)\r\n\t\t\t\tobject.pathLenConstraint = this.pathLenConstraint.toJSON();\r\n\t\t\telse\r\n\t\t\t\tobject.pathLenConstraint = this.pathLenConstraint;\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"BasicConstraints.js"}