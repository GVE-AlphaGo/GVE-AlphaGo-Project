{"version":3,"sources":["../src/PolicyConstraints.js"],"names":["PolicyConstraints","constructor","parameters","requireExplicitPolicy","defaultValues","inhibitPolicyMapping","fromSchema","schema","memberName","Error","names","asn1js","Sequence","name","blockName","value","Primitive","optional","idBlock","tagClass","tagNumber","asn1","compareSchema","verified","result","field1","ber1","toBER","int1","fromBER","valueBlock","valueDec","field2","ber2","int2","toSchema","outputArray","Integer","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PolicyConstraints\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PolicyConstraints class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"requireExplicitPolicy\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc requireExplicitPolicy\r\n\t\t\t */\r\n\t\t\tthis.requireExplicitPolicy = getParametersValue(parameters, \"requireExplicitPolicy\", PolicyConstraints.defaultValues(\"requireExplicitPolicy\"));\r\n\r\n\t\tif(\"inhibitPolicyMapping\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc Value of the TIME class\r\n\t\t\t */\r\n\t\t\tthis.inhibitPolicyMapping = getParametersValue(parameters, \"inhibitPolicyMapping\", PolicyConstraints.defaultValues(\"inhibitPolicyMapping\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"requireExplicitPolicy\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"inhibitPolicyMapping\":\r\n\t\t\t\treturn 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PolicyConstraints class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PolicyConstraints ::= SEQUENCE {\r\n\t *    requireExplicitPolicy           [0] SkipCerts OPTIONAL,\r\n\t *    inhibitPolicyMapping            [1] SkipCerts OPTIONAL }\r\n\t *\r\n\t * SkipCerts ::= INTEGER (0..MAX)\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [requireExplicitPolicy]\r\n\t\t * @property {string} [inhibitPolicyMapping]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.requireExplicitPolicy || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT integer value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.inhibitPolicyMapping || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}) // IMPLICIT integer value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"requireExplicitPolicy\",\r\n\t\t\t\"inhibitPolicyMapping\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPolicyConstraints.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\trequireExplicitPolicy: \"requireExplicitPolicy\",\r\n\t\t\t\t\tinhibitPolicyMapping: \"inhibitPolicyMapping\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PolicyConstraints\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"requireExplicitPolicy\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst field1 = asn1.result.requireExplicitPolicy;\r\n\r\n\t\t\tfield1.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tfield1.idBlock.tagNumber = 2; // INTEGER\r\n\r\n\t\t\tconst ber1 = field1.toBER(false);\r\n\t\t\tconst int1 = asn1js.fromBER(ber1);\r\n\r\n\t\t\tthis.requireExplicitPolicy = int1.result.valueBlock.valueDec;\r\n\t\t}\r\n\r\n\t\tif(\"inhibitPolicyMapping\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst field2 = asn1.result.inhibitPolicyMapping;\r\n\r\n\t\t\tfield2.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tfield2.idBlock.tagNumber = 2; // INTEGER\r\n\r\n\t\t\tconst ber2 = field2.toBER(false);\r\n\t\t\tconst int2 = asn1js.fromBER(ber2);\r\n\r\n\t\t\tthis.inhibitPolicyMapping = int2.result.valueBlock.valueDec;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create correct values for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"requireExplicitPolicy\" in this)\r\n\t\t{\r\n\t\t\tconst int1 = new asn1js.Integer({ value: this.requireExplicitPolicy });\r\n\t\t\t\r\n\t\t\tint1.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tint1.idBlock.tagNumber = 0; // [0]\r\n\t\t\t\r\n\t\t\toutputArray.push(int1);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"inhibitPolicyMapping\" in this)\r\n\t\t{\r\n\t\t\tconst int2 = new asn1js.Integer({ value: this.inhibitPolicyMapping });\r\n\t\t\t\r\n\t\t\tint2.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tint2.idBlock.tagNumber = 1; // [1]\r\n\t\t\t\r\n\t\t\toutputArray.push(int2);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"requireExplicitPolicy\" in this)\r\n\t\t\tobject.requireExplicitPolicy = this.requireExplicitPolicy;\r\n\r\n\t\tif(\"inhibitPolicyMapping\" in this)\r\n\t\t\tobject.inhibitPolicyMapping = this.inhibitPolicyMapping;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"PolicyConstraints.js"}