{"version":3,"sources":["../src/TimeStampReq.js"],"names":["TimeStampReq","constructor","parameters","version","defaultValues","messageImprint","reqPolicy","nonce","certReq","extensions","fromSchema","schema","memberName","MessageImprint","asn1js","Integer","Error","compareWithDefault","memberValue","hashAlgorithm","hashedMessage","isEqual","length","names","Sequence","name","blockName","value","ObjectIdentifier","optional","Boolean","Constructed","idBlock","tagClass","tagNumber","Repeated","Extension","asn1","compareSchema","verified","result","valueBlock","valueDec","toString","Array","from","element","toSchema","outputArray","push","toJSON","_object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport MessageImprint from \"./MessageImprint.js\";\r\nimport Extension from \"./Extension.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3161\r\n */\r\nexport default class TimeStampReq\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for TimeStampReq class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", TimeStampReq.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {MessageImprint}\r\n\t\t * @desc messageImprint\r\n\t\t */\r\n\t\tthis.messageImprint = getParametersValue(parameters, \"messageImprint\", TimeStampReq.defaultValues(\"messageImprint\"));\r\n\r\n\t\tif(\"reqPolicy\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {string}\r\n\t\t\t * @desc reqPolicy\r\n\t\t\t */\r\n\t\t\tthis.reqPolicy = getParametersValue(parameters, \"reqPolicy\", TimeStampReq.defaultValues(\"reqPolicy\"));\r\n\r\n\t\tif(\"nonce\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Integer}\r\n\t\t\t * @desc nonce\r\n\t\t\t */\r\n\t\t\tthis.nonce = getParametersValue(parameters, \"nonce\", TimeStampReq.defaultValues(\"nonce\"));\r\n\r\n\t\tif(\"certReq\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {boolean}\r\n\t\t\t * @desc certReq\r\n\t\t\t */\r\n\t\t\tthis.certReq = getParametersValue(parameters, \"certReq\", TimeStampReq.defaultValues(\"certReq\"));\r\n\r\n\t\tif(\"extensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @desc extensions\r\n\t\t\t */\r\n\t\t\tthis.extensions = getParametersValue(parameters, \"extensions\", TimeStampReq.defaultValues(\"extensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"messageImprint\":\r\n\t\t\t\treturn new MessageImprint();\r\n\t\t\tcase \"reqPolicy\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"nonce\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"certReq\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"extensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for TimeStampReq class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\tcase \"reqPolicy\":\r\n\t\t\tcase \"certReq\":\r\n\t\t\t\treturn (memberValue === TimeStampReq.defaultValues(memberName));\r\n\t\t\tcase \"messageImprint\":\r\n\t\t\t\treturn ((MessageImprint.compareWithDefault(\"hashAlgorithm\", memberValue.hashAlgorithm)) &&\r\n\t\t\t\t\t\t(MessageImprint.compareWithDefault(\"hashedMessage\", memberValue.hashedMessage)));\r\n\t\t\tcase \"nonce\":\r\n\t\t\t\treturn (memberValue.isEqual(TimeStampReq.defaultValues(memberName)));\r\n\t\t\tcase \"extensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for TimeStampReq class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * TimeStampReq ::= SEQUENCE  {\r\n\t *    version               INTEGER  { v1(1) },\r\n\t *    messageImprint        MessageImprint,\r\n\t *    reqPolicy             TSAPolicyId              OPTIONAL,\r\n\t *    nonce                 INTEGER                  OPTIONAL,\r\n\t *    certReq               BOOLEAN                  DEFAULT FALSE,\r\n\t *    extensions            [0] IMPLICIT Extensions  OPTIONAL  }\r\n\t *\r\n\t * TSAPolicyId ::= OBJECT IDENTIFIER\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"TimeStampReq\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"TimeStampReq.version\") }),\r\n\t\t\t\tMessageImprint.schema(names.messageImprint || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: \"TimeStampReq.messageImprint\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.ObjectIdentifier({\r\n\t\t\t\t\tname: (names.reqPolicy || \"TimeStampReq.reqPolicy\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\tname: (names.nonce || \"TimeStampReq.nonce\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\tname: (names.certReq || \"TimeStampReq.certReq\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Repeated({\r\n\t\t\t\t\t\tname: (names.extensions || \"TimeStampReq.extensions\"),\r\n\t\t\t\t\t\tvalue: Extension.schema()\r\n\t\t\t\t\t})]\r\n\t\t\t\t}) // IMPLICIT SEQUENCE value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"TimeStampReq.version\",\r\n\t\t\t\"TimeStampReq.messageImprint\",\r\n\t\t\t\"TimeStampReq.reqPolicy\",\r\n\t\t\t\"TimeStampReq.nonce\",\r\n\t\t\t\"TimeStampReq.certReq\",\r\n\t\t\t\"TimeStampReq.extensions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tTimeStampReq.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for TimeStampReq\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result[\"TimeStampReq.version\"].valueBlock.valueDec;\r\n\t\tthis.messageImprint = new MessageImprint({ schema: asn1.result[\"TimeStampReq.messageImprint\"] });\r\n\t\tif(\"TimeStampReq.reqPolicy\" in asn1.result)\r\n\t\t\tthis.reqPolicy = asn1.result[\"TimeStampReq.reqPolicy\"].valueBlock.toString();\r\n\t\tif(\"TimeStampReq.nonce\" in asn1.result)\r\n\t\t\tthis.nonce = asn1.result[\"TimeStampReq.nonce\"];\r\n\t\tif(\"TimeStampReq.certReq\" in asn1.result)\r\n\t\t\tthis.certReq = asn1.result[\"TimeStampReq.certReq\"].valueBlock.value;\r\n\t\tif(\"TimeStampReq.extensions\" in asn1.result)\r\n\t\t\tthis.extensions = Array.from(asn1.result[\"TimeStampReq.extensions\"], element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.messageImprint.toSchema());\r\n\t\tif(\"reqPolicy\" in this)\r\n\t\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.reqPolicy }));\r\n\t\tif(\"nonce\" in this)\r\n\t\t\toutputArray.push(this.nonce);\r\n\t\tif((\"certReq\" in this) && (TimeStampReq.compareWithDefault(\"certReq\", this.certReq) === false))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.certReq }));\r\n\r\n\t\t//region Create array of extensions\r\n\t\tif(\"extensions\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.extensions, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tversion: this.version,\r\n\t\t\tmessageImprint: this.messageImprint.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"reqPolicy\" in this)\r\n\t\t\t_object.reqPolicy = this.reqPolicy;\r\n\r\n\t\tif(\"nonce\" in this)\r\n\t\t\t_object.nonce = this.nonce.toJSON();\r\n\r\n\t\tif((\"certReq\" in this) && (TimeStampReq.compareWithDefault(\"certReq\", this.certReq) === false))\r\n\t\t\t_object.certReq = this.certReq;\r\n\r\n\t\tif(\"extensions\" in this)\r\n\t\t\t_object.extensions = Array.from(this.extensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"TimeStampReq.js"}