{"version":3,"sources":["../src/RSASSAPSSParams.js"],"names":["RSASSAPSSParams","constructor","parameters","hashAlgorithm","defaultValues","maskGenAlgorithm","saltLength","trailerField","fromSchema","schema","memberName","AlgorithmIdentifier","algorithmId","algorithmParams","asn1js","Null","toSchema","Error","names","Sequence","name","blockName","value","Constructed","idBlock","tagClass","tagNumber","optional","Integer","asn1","compareSchema","verified","result","valueBlock","valueDec","outputArray","isEqual","push","toJSON","object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC4055\r\n */\r\nexport default class RSASSAPSSParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSASSAPSSParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc Algorithms of hashing (DEFAULT sha1)\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSASSAPSSParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc Algorithm of \"mask generaion function (MGF)\" (DEFAULT mgf1SHA1)\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc Salt length (DEFAULT 20)\r\n\t\t */\r\n\t\tthis.saltLength = getParametersValue(parameters, \"saltLength\", RSASSAPSSParams.defaultValues(\"saltLength\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc (DEFAULT 1)\r\n\t\t */\r\n\t\tthis.trailerField = getParametersValue(parameters, \"trailerField\", RSASSAPSSParams.defaultValues(\"trailerField\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"saltLength\":\r\n\t\t\t\treturn 20;\r\n\t\t\tcase \"trailerField\":\r\n\t\t\t\treturn 1;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSASSAPSSParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSASSA-PSS-params  ::=  Sequence  {\r\n\t *    hashAlgorithm      [0] HashAlgorithm DEFAULT sha1Identifier,\r\n\t *    maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT mgf1SHA1Identifier,\r\n\t *    saltLength         [2] Integer DEFAULT 20,\r\n\t *    trailerField       [3] Integer DEFAULT 1  }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [saltLength]\r\n\t\t * @property {string} [trailerField]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.saltLength || \"\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.trailerField || \"\") })]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"hashAlgorithm\",\r\n\t\t\t\"maskGenAlgorithm\",\r\n\t\t\t\"saltLength\",\r\n\t\t\t\"trailerField\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSASSAPSSParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsaltLength: \"saltLength\",\r\n\t\t\t\t\ttrailerField: \"trailerField\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSASSAPSSParams\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"saltLength\" in asn1.result)\r\n\t\t\tthis.saltLength = asn1.result.saltLength.valueBlock.valueDec;\r\n\r\n\t\tif(\"trailerField\" in asn1.result)\r\n\t\t\tthis.trailerField = asn1.result.trailerField.valueBlock.valueDec;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.saltLength })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.trailerField })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t\tobject.saltLength = this.saltLength;\r\n\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t\tobject.trailerField = this.trailerField;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RSASSAPSSParams.js"}