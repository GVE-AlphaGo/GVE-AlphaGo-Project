{"version":3,"sources":["../src/RSAESOAEPParams.js"],"names":["RSAESOAEPParams","constructor","parameters","hashAlgorithm","defaultValues","maskGenAlgorithm","pSourceAlgorithm","fromSchema","schema","memberName","AlgorithmIdentifier","algorithmId","algorithmParams","asn1js","Null","toSchema","OctetString","valueHex","Uint8Array","buffer","Error","names","Sequence","name","blockName","value","Constructed","idBlock","tagClass","tagNumber","optional","asn1","compareSchema","verified","result","outputArray","isEqual","push","toJSON","object"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AACA;;AACA;;;AAGe,MAAMA,eAAN,CACf;AACC;;AACA;;;;;AAKAC,EAAAA,WAAW,CAACC,UAAU,GAAG,EAAd,EACX;AACC;;AACA;;;;AAIA,SAAKC,aAAL,GAAqB,iCAAmBD,UAAnB,EAA+B,eAA/B,EAAgDF,eAAe,CAACI,aAAhB,CAA8B,eAA9B,CAAhD,CAArB;AACA;;;;;AAIA,SAAKC,gBAAL,GAAwB,iCAAmBH,UAAnB,EAA+B,kBAA/B,EAAmDF,eAAe,CAACI,aAAhB,CAA8B,kBAA9B,CAAnD,CAAxB;AACA;;;;;AAIA,SAAKE,gBAAL,GAAwB,iCAAmBJ,UAAnB,EAA+B,kBAA/B,EAAmDF,eAAe,CAACI,aAAhB,CAA8B,kBAA9B,CAAnD,CAAxB,CAhBD,CAiBC;AAEA;;AACA,QAAG,YAAYF,UAAf,EACC,KAAKK,UAAL,CAAgBL,UAAU,CAACM,MAA3B,EArBF,CAsBC;AACA,GA/BF,CAgCC;;AACA;;;;;;AAIA,SAAOJ,aAAP,CAAqBK,UAArB,EACA;AACC,YAAOA,UAAP;AAEC,WAAK,eAAL;AACC,eAAO,IAAIC,4BAAJ,CAAwB;AAC9BC,UAAAA,WAAW,EAAE,eADiB;AACA;AAC9BC,UAAAA,eAAe,EAAE,IAAIC,MAAM,CAACC,IAAX;AAFa,SAAxB,CAAP;;AAID,WAAK,kBAAL;AACC,eAAO,IAAIJ,4BAAJ,CAAwB;AAC9BC,UAAAA,WAAW,EAAE,sBADiB;AACO;AACrCC,UAAAA,eAAe,EAAG,IAAIF,4BAAJ,CAAwB;AACzCC,YAAAA,WAAW,EAAE,eAD4B;AACX;AAC9BC,YAAAA,eAAe,EAAE,IAAIC,MAAM,CAACC,IAAX;AAFwB,WAAxB,CAAD,CAGbC,QAHa;AAFa,SAAxB,CAAP;;AAOD,WAAK,kBAAL;AACC,eAAO,IAAIL,4BAAJ,CAAwB;AAC9BC,UAAAA,WAAW,EAAE,sBADiB;AACO;AACrCC,UAAAA,eAAe,EAAE,IAAIC,MAAM,CAACG,WAAX,CAAuB;AAAEC,YAAAA,QAAQ,EAAG,IAAIC,UAAJ,CAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,EAAiG,IAAjG,EAAuG,IAAvG,EAA6G,IAA7G,EAAmH,IAAnH,CAAf,CAAD,CAA2IC;AAAvJ,WAAvB,CAFa,CAE2K;;AAF3K,SAAxB,CAAP;;AAID;AACC,cAAM,IAAIC,KAAJ,CAAW,kDAAiDX,UAAW,EAAvE,CAAN;AArBF;AAuBA,GA9DF,CA+DC;;AACA;;;;;;;;;;;;;;;;;AAeA,SAAOD,MAAP,CAAcN,UAAU,GAAG,EAA3B,EACA;AACC;;;;;;;AAOA,UAAMmB,KAAK,GAAG,iCAAmBnB,UAAnB,EAA+B,OAA/B,EAAwC,EAAxC,CAAd;AAEA,WAAQ,IAAIW,MAAM,CAACS,QAAX,CAAoB;AAC3BC,MAAAA,IAAI,EAAGF,KAAK,CAACG,SAAN,IAAmB,EADC;AAE3BC,MAAAA,KAAK,EAAE,CACN,IAAIZ,MAAM,CAACa,WAAX,CAAuB;AACtBC,QAAAA,OAAO,EAAE;AACRC,UAAAA,QAAQ,EAAE,CADF;AACK;AACbC,UAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,SADa;AAKtBC,QAAAA,QAAQ,EAAE,IALY;AAMtBL,QAAAA,KAAK,EAAE,CAACf,6BAAoBF,MAApB,CAA2Ba,KAAK,CAAClB,aAAN,IAAuB,EAAlD,CAAD;AANe,OAAvB,CADM,EASN,IAAIU,MAAM,CAACa,WAAX,CAAuB;AACtBC,QAAAA,OAAO,EAAE;AACRC,UAAAA,QAAQ,EAAE,CADF;AACK;AACbC,UAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,SADa;AAKtBC,QAAAA,QAAQ,EAAE,IALY;AAMtBL,QAAAA,KAAK,EAAE,CAACf,6BAAoBF,MAApB,CAA2Ba,KAAK,CAAChB,gBAAN,IAA0B,EAArD,CAAD;AANe,OAAvB,CATM,EAiBN,IAAIQ,MAAM,CAACa,WAAX,CAAuB;AACtBC,QAAAA,OAAO,EAAE;AACRC,UAAAA,QAAQ,EAAE,CADF;AACK;AACbC,UAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,SADa;AAKtBC,QAAAA,QAAQ,EAAE,IALY;AAMtBL,QAAAA,KAAK,EAAE,CAACf,6BAAoBF,MAApB,CAA2Ba,KAAK,CAACf,gBAAN,IAA0B,EAArD,CAAD;AANe,OAAvB,CAjBM;AAFoB,KAApB,CAAR;AA6BA,GAvHF,CAwHC;;AACA;;;;;;AAIAC,EAAAA,UAAU,CAACC,MAAD,EACV;AACC;AACA,6BAAWA,MAAX,EAAmB,CAClB,eADkB,EAElB,kBAFkB,EAGlB,kBAHkB,CAAnB,EAFD,CAOC;AAEA;;AACA,UAAMuB,IAAI,GAAGlB,MAAM,CAACmB,aAAP,CAAqBxB,MAArB,EACZA,MADY,EAEZR,eAAe,CAACQ,MAAhB,CAAuB;AACtBa,MAAAA,KAAK,EAAE;AACNlB,QAAAA,aAAa,EAAE;AACdkB,UAAAA,KAAK,EAAE;AACNG,YAAAA,SAAS,EAAE;AADL;AADO,SADT;AAMNnB,QAAAA,gBAAgB,EAAE;AACjBgB,UAAAA,KAAK,EAAE;AACNG,YAAAA,SAAS,EAAE;AADL;AADU,SANZ;AAWNlB,QAAAA,gBAAgB,EAAE;AACjBe,UAAAA,KAAK,EAAE;AACNG,YAAAA,SAAS,EAAE;AADL;AADU;AAXZ;AADe,KAAvB,CAFY,CAAb;AAuBA,QAAGO,IAAI,CAACE,QAAL,KAAkB,KAArB,EACC,MAAM,IAAIb,KAAJ,CAAU,yEAAV,CAAN,CAlCF,CAmCC;AAEA;;AACA,QAAG,mBAAmBW,IAAI,CAACG,MAA3B,EACC,KAAK/B,aAAL,GAAqB,IAAIO,4BAAJ,CAAwB;AAAEF,MAAAA,MAAM,EAAEuB,IAAI,CAACG,MAAL,CAAY/B;AAAtB,KAAxB,CAArB;AAED,QAAG,sBAAsB4B,IAAI,CAACG,MAA9B,EACC,KAAK7B,gBAAL,GAAwB,IAAIK,4BAAJ,CAAwB;AAAEF,MAAAA,MAAM,EAAEuB,IAAI,CAACG,MAAL,CAAY7B;AAAtB,KAAxB,CAAxB;AAED,QAAG,sBAAsB0B,IAAI,CAACG,MAA9B,EACC,KAAK5B,gBAAL,GAAwB,IAAII,4BAAJ,CAAwB;AAAEF,MAAAA,MAAM,EAAEuB,IAAI,CAACG,MAAL,CAAY5B;AAAtB,KAAxB,CAAxB,CA7CF,CA8CC;AACA,GA7KF,CA8KC;;AACA;;;;;;AAIAS,EAAAA,QAAQ,GACR;AACC;AACA,UAAMoB,WAAW,GAAG,EAApB;;AAEA,QAAG,CAAC,KAAKhC,aAAL,CAAmBiC,OAAnB,CAA2BpC,eAAe,CAACI,aAAhB,CAA8B,eAA9B,CAA3B,CAAJ,EACA;AACC+B,MAAAA,WAAW,CAACE,IAAZ,CAAiB,IAAIxB,MAAM,CAACa,WAAX,CAAuB;AACvCC,QAAAA,OAAO,EAAE;AACRC,UAAAA,QAAQ,EAAE,CADF;AACK;AACbC,UAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,SAD8B;AAKvCJ,QAAAA,KAAK,EAAE,CAAC,KAAKtB,aAAL,CAAmBY,QAAnB,EAAD;AALgC,OAAvB,CAAjB;AAOA;;AAED,QAAG,CAAC,KAAKV,gBAAL,CAAsB+B,OAAtB,CAA8BpC,eAAe,CAACI,aAAhB,CAA8B,kBAA9B,CAA9B,CAAJ,EACA;AACC+B,MAAAA,WAAW,CAACE,IAAZ,CAAiB,IAAIxB,MAAM,CAACa,WAAX,CAAuB;AACvCC,QAAAA,OAAO,EAAE;AACRC,UAAAA,QAAQ,EAAE,CADF;AACK;AACbC,UAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,SAD8B;AAKvCJ,QAAAA,KAAK,EAAE,CAAC,KAAKpB,gBAAL,CAAsBU,QAAtB,EAAD;AALgC,OAAvB,CAAjB;AAOA;;AAED,QAAG,CAAC,KAAKT,gBAAL,CAAsB8B,OAAtB,CAA8BpC,eAAe,CAACI,aAAhB,CAA8B,kBAA9B,CAA9B,CAAJ,EACA;AACC+B,MAAAA,WAAW,CAACE,IAAZ,CAAiB,IAAIxB,MAAM,CAACa,WAAX,CAAuB;AACvCC,QAAAA,OAAO,EAAE;AACRC,UAAAA,QAAQ,EAAE,CADF;AACK;AACbC,UAAAA,SAAS,EAAE,CAFH,CAEK;;AAFL,SAD8B;AAKvCJ,QAAAA,KAAK,EAAE,CAAC,KAAKnB,gBAAL,CAAsBS,QAAtB,EAAD;AALgC,OAAvB,CAAjB;AAOA,KAnCF,CAoCC;AAEA;;;AACA,WAAQ,IAAIF,MAAM,CAACS,QAAX,CAAoB;AAC3BG,MAAAA,KAAK,EAAEU;AADoB,KAApB,CAAR,CAvCD,CA0CC;AACA,GA/NF,CAgOC;;AACA;;;;;;AAIAG,EAAAA,MAAM,GACN;AACC,UAAMC,MAAM,GAAG,EAAf;AAEA,QAAG,CAAC,KAAKpC,aAAL,CAAmBiC,OAAnB,CAA2BpC,eAAe,CAACI,aAAhB,CAA8B,eAA9B,CAA3B,CAAJ,EACCmC,MAAM,CAACpC,aAAP,GAAuB,KAAKA,aAAL,CAAmBmC,MAAnB,EAAvB;AAED,QAAG,CAAC,KAAKjC,gBAAL,CAAsB+B,OAAtB,CAA8BpC,eAAe,CAACI,aAAhB,CAA8B,kBAA9B,CAA9B,CAAJ,EACCmC,MAAM,CAAClC,gBAAP,GAA0B,KAAKA,gBAAL,CAAsBiC,MAAtB,EAA1B;AAED,QAAG,CAAC,KAAKhC,gBAAL,CAAsB8B,OAAtB,CAA8BpC,eAAe,CAACI,aAAhB,CAA8B,kBAA9B,CAA9B,CAAJ,EACCmC,MAAM,CAACjC,gBAAP,GAA0B,KAAKA,gBAAL,CAAsBgC,MAAtB,EAA1B;AAED,WAAOC,MAAP;AACA,GAnPF,CAoPC;;;AApPD,C,CAsPA","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAESOAEPParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAESOAEPParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc hashAlgorithm\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSAESOAEPParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc maskGenAlgorithm\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc pSourceAlgorithm\r\n\t\t */\r\n\t\tthis.pSourceAlgorithm = getParametersValue(parameters, \"pSourceAlgorithm\", RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"pSourceAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.9\", // id-pSpecified\r\n\t\t\t\t\talgorithmParams: new asn1js.OctetString({ valueHex: (new Uint8Array([0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90, 0xaf, 0xd8, 0x07, 0x09])).buffer }) // SHA-1 hash of empty string\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAESOAEPParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSAES-OAEP-params ::= SEQUENCE {\r\n\t *    hashAlgorithm     [0] HashAlgorithm    DEFAULT sha1,\r\n\t *    maskGenAlgorithm  [1] MaskGenAlgorithm DEFAULT mgf1SHA1,\r\n\t *    pSourceAlgorithm  [2] PSourceAlgorithm DEFAULT pSpecifiedEmpty\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [pSourceAlgorithm]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.pSourceAlgorithm || {})]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"hashAlgorithm\",\r\n\t\t\t\"maskGenAlgorithm\",\r\n\t\t\t\"pSourceAlgorithm\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAESOAEPParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpSourceAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"pSourceAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAESOAEPParams\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"pSourceAlgorithm\" in asn1.result)\r\n\t\t\tthis.pSourceAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.pSourceAlgorithm });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tif(!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.pSourceAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\")))\r\n\t\t\tobject.pSourceAlgorithm = this.pSourceAlgorithm.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"RSAESOAEPParams.js"}