{"version":3,"sources":["../src/SafeBag.js"],"names":["SafeBag","constructor","parameters","bagId","defaultValues","bagValue","bagAttributes","fromSchema","schema","memberName","asn1js","Any","Error","compareWithDefault","memberValue","length","names","Sequence","name","blockName","value","ObjectIdentifier","Constructed","idBlock","tagClass","tagNumber","Set","optional","Repeated","Attribute","asn1","compareSchema","verified","result","valueBlock","toString","PrivateKeyInfo","PKCS8ShroudedKeyBag","CertBag","CRLBag","SecretBag","SafeContents","Array","from","element","toSchema","outputArray","push","toJSON","output"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport Attribute from \"./Attribute.js\";\r\nimport PrivateKeyInfo from \"./PrivateKeyInfo.js\";\r\nimport PKCS8ShroudedKeyBag from \"./PKCS8ShroudedKeyBag.js\";\r\nimport CertBag from \"./CertBag.js\";\r\nimport CRLBag from \"./CRLBag.js\";\r\nimport SecretBag from \"./SecretBag.js\";\r\nimport SafeContents from \"./SafeContents.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC7292\r\n */\r\nexport default class SafeBag\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for SafeBag class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc bagId\r\n\t\t */\r\n\t\tthis.bagId = getParametersValue(parameters, \"bagId\", SafeBag.defaultValues(\"bagId\"));\r\n\t\t/**\r\n\t\t * @type {*}\r\n\t\t * @desc bagValue\r\n\t\t */\r\n\t\tthis.bagValue = getParametersValue(parameters, \"bagValue\", SafeBag.defaultValues(\"bagValue\"));\r\n\t\t\r\n\t\tif(\"bagAttributes\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Attribute>}\r\n\t\t\t * @desc bagAttributes\r\n\t\t\t */\r\n\t\t\tthis.bagAttributes = getParametersValue(parameters, \"bagAttributes\", SafeBag.defaultValues(\"bagAttributes\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"bagId\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"bagValue\":\r\n\t\t\t\treturn (new asn1js.Any());\r\n\t\t\tcase \"bagAttributes\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SafeBag class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"bagId\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"bagValue\":\r\n\t\t\t\treturn (memberValue instanceof asn1js.Any);\r\n\t\t\tcase \"bagAttributes\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SafeBag class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * SafeBag ::= SEQUENCE {\r\n\t *    bagId\t      \tBAG-TYPE.&id ({PKCS12BagSet}),\r\n\t *    bagValue      [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\r\n\t *    bagAttributes SET OF PKCS12Attribute OPTIONAL\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [bagId]\r\n\t\t * @property {string} [bagValue]\r\n\t\t * @property {string} [bagAttributes]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.bagId || \"bagId\") }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Any({ name: (names.bagValue || \"bagValue\") })] // EXPLICIT ANY value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Set({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.bagAttributes || \"bagAttributes\"),\r\n\t\t\t\t\t\t\tvalue: Attribute.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"bagId\",\r\n\t\t\t\"bagValue\",\r\n\t\t\t\"bagAttributes\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tSafeBag.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tbagId: \"bagId\",\r\n\t\t\t\t\tbagValue: \"bagValue\",\r\n\t\t\t\t\tbagAttributes: \"bagAttributes\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for SafeBag\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.bagId = asn1.result.bagId.valueBlock.toString();\r\n\t\t\r\n\t\tswitch(this.bagId)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.1\": // keyBag\r\n\t\t\t\tthis.bagValue = new PrivateKeyInfo({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.2\": // pkcs8ShroudedKeyBag\r\n\t\t\t\tthis.bagValue = new PKCS8ShroudedKeyBag({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.3\": // certBag\r\n\t\t\t\tthis.bagValue = new CertBag({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.4\": // crlBag\r\n\t\t\t\tthis.bagValue = new CRLBag({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.5\": // secretBag\r\n\t\t\t\tthis.bagValue = new SecretBag({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.12.10.1.6\": // safeContentsBag\r\n\t\t\t\tthis.bagValue = new SafeContents({ schema: asn1.result.bagValue });\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid \"bagId\" for SafeBag: ${this.bagId}`);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"bagAttributes\" in asn1.result)\r\n\t\t\tthis.bagAttributes = Array.from(asn1.result.bagAttributes, element => new Attribute({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tconst outputArray = [\r\n\t\t\tnew asn1js.ObjectIdentifier({ value: this.bagId }),\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.bagValue.toSchema()]\r\n\t\t\t})\r\n\t\t];\r\n\t\t\r\n\t\tif(\"bagAttributes\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Set({\r\n\t\t\t\tvalue: Array.from(this.bagAttributes, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst output = {\r\n\t\t\tbagId: this.bagId,\r\n\t\t\tbagValue: this.bagValue.toJSON()\r\n\t\t};\r\n\t\t\r\n\t\tif(\"bagAttributes\" in this)\r\n\t\t\toutput.bagAttributes = Array.from(this.bagAttributes, element => element.toJSON());\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"SafeBag.js"}