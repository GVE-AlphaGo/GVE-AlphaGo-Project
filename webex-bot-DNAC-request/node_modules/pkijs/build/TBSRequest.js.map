{"version":3,"sources":["../src/TBSRequest.js"],"names":["TBSRequest","constructor","parameters","tbs","defaultValues","version","requestorName","requestList","requestExtensions","fromSchema","schema","memberName","ArrayBuffer","GeneralName","Error","compareWithDefault","memberValue","byteLength","type","Object","keys","value","length","names","asn1js","Sequence","name","blockName","Constructed","optional","idBlock","tagClass","tagNumber","Integer","TBSRequestVersion","Repeated","requests","Request","requestNames","Extensions","extensions","asn1","compareSchema","verified","result","valueBeforeDecode","valueBlock","valueDec","Array","from","element","Extension","toSchema","encodeFlag","tbsSchema","fromBER","outputArray","push","toJSON","_object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\nimport Request from \"./Request.js\";\r\nimport Extension from \"./Extension.js\";\r\nimport Extensions from \"./Extensions.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6960\r\n */\r\nexport default class TBSRequest\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for TBSRequest class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc tbs\r\n\t\t */\r\n\t\tthis.tbs = getParametersValue(parameters, \"tbs\", TBSRequest.defaultValues(\"tbs\"));\r\n\r\n\t\tif(\"version\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc version\r\n\t\t\t */\r\n\t\t\tthis.version = getParametersValue(parameters, \"version\", TBSRequest.defaultValues(\"version\"));\r\n\r\n\t\tif(\"requestorName\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {GeneralName}\r\n\t\t\t * @desc requestorName\r\n\t\t\t */\r\n\t\t\tthis.requestorName = getParametersValue(parameters, \"requestorName\", TBSRequest.defaultValues(\"requestorName\"));\r\n\r\n\t\t/**\r\n\t\t * @type {Array.<Request>}\r\n\t\t * @desc requestList\r\n\t\t */\r\n\t\tthis.requestList = getParametersValue(parameters, \"requestList\", TBSRequest.defaultValues(\"requestList\"));\r\n\r\n\t\tif(\"requestExtensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @desc requestExtensions\r\n\t\t\t */\r\n\t\t\tthis.requestExtensions = getParametersValue(parameters, \"requestExtensions\", TBSRequest.defaultValues(\"requestExtensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"requestorName\":\r\n\t\t\t\treturn new GeneralName();\r\n\t\t\tcase \"requestList\":\r\n\t\t\tcase \"requestExtensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for TBSRequest class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn (memberValue === TBSRequest.defaultValues(memberName));\r\n\t\t\tcase \"requestorName\":\r\n\t\t\t\treturn ((memberValue.type === GeneralName.defaultValues(\"type\")) && (Object.keys(memberValue.value).length === 0));\r\n\t\t\tcase \"requestList\":\r\n\t\t\tcase \"requestExtensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for TBSRequest class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * TBSRequest      ::=     SEQUENCE {\r\n\t *    version             [0]     EXPLICIT Version DEFAULT v1,\r\n\t *    requestorName       [1]     EXPLICIT GeneralName OPTIONAL,\r\n\t *    requestList                 SEQUENCE OF Request,\r\n\t *    requestExtensions   [2]     EXPLICIT Extensions OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [TBSRequestVersion]\r\n\t\t * @property {string} [requestorName]\r\n\t\t * @property {string} [requestList]\r\n\t\t * @property {string} [requests]\r\n\t\t * @property {string} [requestNames]\r\n\t\t * @property {string} [extensions]\r\n\t\t * @property {string} [requestExtensions]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"TBSRequest\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.TBSRequestVersion || \"TBSRequest.version\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [GeneralName.schema(names.requestorName || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"TBSRequest.requestorName\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\tname: (names.requestList || \"TBSRequest.requestList\"),\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.requests || \"TBSRequest.requests\"),\r\n\t\t\t\t\t\t\tvalue: Request.schema(names.requestNames || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [Extensions.schema(names.extensions || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: (names.requestExtensions || \"TBSRequest.requestExtensions\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"TBSRequest\",\r\n\t\t\t\"TBSRequest.version\",\r\n\t\t\t\"TBSRequest.requestorName\",\r\n\t\t\t\"TBSRequest.requests\",\r\n\t\t\t\"TBSRequest.requestExtensions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tTBSRequest.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for TBSRequest\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.tbs = asn1.result.TBSRequest.valueBeforeDecode;\r\n\r\n\t\tif(\"TBSRequest.version\" in asn1.result)\r\n\t\t\tthis.version = asn1.result[\"TBSRequest.version\"].valueBlock.valueDec;\r\n\t\tif(\"TBSRequest.requestorName\" in asn1.result)\r\n\t\t\tthis.requestorName = new GeneralName({ schema: asn1.result[\"TBSRequest.requestorName\"] });\r\n\r\n\t\tthis.requestList = Array.from(asn1.result[\"TBSRequest.requests\"], element => new Request({ schema: element }));\r\n\r\n\t\tif(\"TBSRequest.requestExtensions\" in asn1.result)\r\n\t\t\tthis.requestExtensions = Array.from(asn1.result[\"TBSRequest.requestExtensions\"].valueBlock.value, element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @param {boolean} encodeFlag If param equal to false then create TBS schema via decoding stored value. In othe case create TBS schema via assembling from TBS parts.\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema(encodeFlag = false)\r\n\t{\r\n\t\t//region Decode stored TBS value\r\n\t\tlet tbsSchema;\r\n\r\n\t\tif(encodeFlag === false)\r\n\t\t{\r\n\t\t\tif(this.tbs.byteLength === 0) // No stored TBS part\r\n\t\t\t\treturn TBSRequest.schema();\r\n\r\n\t\t\ttbsSchema = asn1js.fromBER(this.tbs).result;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//region Create TBS schema via assembling from TBS parts\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst outputArray = [];\r\n\r\n\t\t\tif(\"version\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ value: this.version })]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\r\n\t\t\tif(\"requestorName\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.requestorName.toSchema()]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.requestList, element => element.toSchema())\r\n\t\t\t}));\r\n\r\n\t\t\tif(\"requestExtensions\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\t\t\tvalue: Array.from(this.requestExtensions, element => element.toSchema())\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\r\n\t\t\ttbsSchema = new asn1js.Sequence({\r\n\t\t\t\tvalue: outputArray\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn tbsSchema;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\r\n\t\tif(\"version\" in this)\r\n\t\t\t_object.version = this.version;\r\n\r\n\t\tif(\"requestorName\" in this)\r\n\t\t\t_object.requestorName = this.requestorName.toJSON();\r\n\r\n\t\t_object.requestList = Array.from(this.requestList, element => element.toJSON());\r\n\r\n\t\tif(\"requestExtensions\" in this)\r\n\t\t\t_object.requestExtensions = Array.from(this.requestExtensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"TBSRequest.js"}