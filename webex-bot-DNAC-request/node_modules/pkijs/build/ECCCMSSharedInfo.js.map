{"version":3,"sources":["../src/ECCCMSSharedInfo.js"],"names":["ECCCMSSharedInfo","constructor","parameters","keyInfo","defaultValues","entityUInfo","suppPubInfo","fromSchema","schema","memberName","AlgorithmIdentifier","asn1js","OctetString","Error","compareWithDefault","memberValue","isEqual","names","Sequence","name","blockName","value","Constructed","idBlock","tagClass","tagNumber","optional","asn1","compareSchema","verified","result","valueBlock","toSchema","outputArray","push","toJSON","_object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6318\r\n */\r\nexport default class ECCCMSSharedInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ECCCMSSharedInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc keyInfo\r\n\t\t */\r\n\t\tthis.keyInfo = getParametersValue(parameters, \"keyInfo\", ECCCMSSharedInfo.defaultValues(\"keyInfo\"));\r\n\r\n\t\tif(\"entityUInfo\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @desc entityUInfo\r\n\t\t\t */\r\n\t\t\tthis.entityUInfo = getParametersValue(parameters, \"entityUInfo\", ECCCMSSharedInfo.defaultValues(\"entityUInfo\"));\r\n\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @desc suppPubInfo\r\n\t\t */\r\n\t\tthis.suppPubInfo = getParametersValue(parameters, \"suppPubInfo\", ECCCMSSharedInfo.defaultValues(\"suppPubInfo\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn (memberValue.isEqual(ECCCMSSharedInfo.defaultValues(memberName)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * ECC-CMS-SharedInfo  ::=  SEQUENCE {\r\n\t *    keyInfo      AlgorithmIdentifier,\r\n\t *    entityUInfo  [0] EXPLICIT OCTET STRING OPTIONAL,\r\n\t *    suppPubInfo  [2] EXPLICIT OCTET STRING }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyInfo]\r\n\t\t * @property {string} [entityUInfo]\r\n\t\t * @property {string} [suppPubInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tAlgorithmIdentifier.schema(names.keyInfo || {}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.entityUInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.suppPubInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"keyInfo\",\r\n\t\t\t\"entityUInfo\",\r\n\t\t\t\"suppPubInfo\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tECCCMSSharedInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"keyInfo\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tentityUInfo: \"entityUInfo\",\r\n\t\t\t\t\tsuppPubInfo: \"suppPubInfo\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECCCMSSharedInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.keyInfo = new AlgorithmIdentifier({ schema: asn1.result.keyInfo });\r\n\r\n\t\tif(\"entityUInfo\" in asn1.result)\r\n\t\t\tthis.entityUInfo = asn1.result.entityUInfo.valueBlock.value[0];\r\n\r\n\t\tthis.suppPubInfo = asn1.result.suppPubInfo.valueBlock.value[0];\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create output array for sequence \r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(this.keyInfo.toSchema());\r\n\t\t\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.entityUInfo]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\tidBlock: {\r\n\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t},\r\n\t\t\tvalue: [this.suppPubInfo]\r\n\t\t}));\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t});\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tkeyInfo: this.keyInfo.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t\t_object.entityUInfo = this.entityUInfo.toJSON();\r\n\r\n\t\t_object.suppPubInfo = this.suppPubInfo.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"ECCCMSSharedInfo.js"}