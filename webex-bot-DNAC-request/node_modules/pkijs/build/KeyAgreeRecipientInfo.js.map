{"version":3,"sources":["../src/KeyAgreeRecipientInfo.js"],"names":["KeyAgreeRecipientInfo","constructor","parameters","version","defaultValues","originator","ukm","keyEncryptionAlgorithm","recipientEncryptedKeys","recipientCertificate","fromSchema","schema","memberName","OriginatorIdentifierOrKey","asn1js","OctetString","AlgorithmIdentifier","RecipientEncryptedKeys","Certificate","Error","compareWithDefault","memberValue","variant","isEqual","algorithmId","encryptedKeys","length","names","Sequence","name","blockName","value","Integer","Constructed","idBlock","tagClass","tagNumber","optional","asn1","compareSchema","verified","result","valueBlock","valueDec","toSchema","outputArray","push","toJSON","_object"],"mappings":"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","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport OriginatorIdentifierOrKey from \"./OriginatorIdentifierOrKey.js\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\nimport RecipientEncryptedKeys from \"./RecipientEncryptedKeys.js\";\r\nimport Certificate from \"./Certificate.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class KeyAgreeRecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for KeyAgreeRecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", KeyAgreeRecipientInfo.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {OriginatorIdentifierOrKey}\r\n\t\t * @desc originator\r\n\t\t */\r\n\t\tthis.originator = getParametersValue(parameters, \"originator\", KeyAgreeRecipientInfo.defaultValues(\"originator\"));\r\n\r\n\t\tif(\"ukm\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @desc ukm\r\n\t\t\t */\r\n\t\t\tthis.ukm = getParametersValue(parameters, \"ukm\", KeyAgreeRecipientInfo.defaultValues(\"ukm\"));\r\n\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc keyEncryptionAlgorithm\r\n\t\t */\r\n\t\tthis.keyEncryptionAlgorithm = getParametersValue(parameters, \"keyEncryptionAlgorithm\", KeyAgreeRecipientInfo.defaultValues(\"keyEncryptionAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {RecipientEncryptedKeys}\r\n\t\t * @desc recipientEncryptedKeys\r\n\t\t */\r\n\t\tthis.recipientEncryptedKeys = getParametersValue(parameters, \"recipientEncryptedKeys\", KeyAgreeRecipientInfo.defaultValues(\"recipientEncryptedKeys\"));\r\n\t\t/**\r\n\t\t * @type {Certificate}\r\n\t\t * @desc recipientCertificate For some reasons we need to store recipient's certificate here\r\n\t\t */\r\n\t\tthis.recipientCertificate = getParametersValue(parameters, \"recipientCertificate\", KeyAgreeRecipientInfo.defaultValues(\"recipientCertificate\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"originator\":\r\n\t\t\t\treturn new OriginatorIdentifierOrKey();\r\n\t\t\tcase \"ukm\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"keyEncryptionAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"recipientEncryptedKeys\":\r\n\t\t\t\treturn new RecipientEncryptedKeys();\r\n\t\t\tcase \"recipientCertificate\":\r\n\t\t\t\treturn new Certificate();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn (memberValue === 0);\r\n\t\t\tcase \"originator\":\r\n\t\t\t\treturn ((memberValue.variant === (-1)) && ((\"value\" in memberValue) === false));\r\n\t\t\tcase \"ukm\":\r\n\t\t\t\treturn (memberValue.isEqual(KeyAgreeRecipientInfo.defaultValues(\"ukm\")));\r\n\t\t\tcase \"keyEncryptionAlgorithm\":\r\n\t\t\t\treturn ((memberValue.algorithmId === \"\") && ((\"algorithmParams\" in memberValue) === false));\r\n\t\t\tcase \"recipientEncryptedKeys\":\r\n\t\t\t\treturn (memberValue.encryptedKeys.length === 0);\r\n\t\t\tcase \"recipientCertificate\":\r\n\t\t\t\treturn false; // For now leave it as is\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * KeyAgreeRecipientInfo ::= SEQUENCE {\r\n\t *    version CMSVersion,  -- always set to 3\r\n\t *    originator [0] EXPLICIT OriginatorIdentifierOrKey,\r\n\t *    ukm [1] EXPLICIT UserKeyingMaterial OPTIONAL,\r\n\t *    keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\r\n\t *    recipientEncryptedKeys RecipientEncryptedKeys }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [originator]\r\n\t\t * @property {string} [ukm]\r\n\t\t * @property {string} [keyEncryptionAlgorithm]\r\n\t\t * @property {string} [recipientEncryptedKeys]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: names.blockName || \"\",\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: names.version || \"\" }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tOriginatorIdentifierOrKey.schema(names.originator || {})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.OctetString({ name: names.ukm || \"\" })]\r\n\t\t\t\t}),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.keyEncryptionAlgorithm || {}),\r\n\t\t\t\tRecipientEncryptedKeys.schema(names.recipientEncryptedKeys || {})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"originator\",\r\n\t\t\t\"ukm\",\r\n\t\t\t\"keyEncryptionAlgorithm\",\r\n\t\t\t\"recipientEncryptedKeys\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tKeyAgreeRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\toriginator: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"originator\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tukm: \"ukm\",\r\n\t\t\t\t\tkeyEncryptionAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"keyEncryptionAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\trecipientEncryptedKeys: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"recipientEncryptedKeys\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for KeyAgreeRecipientInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.originator = new OriginatorIdentifierOrKey({ schema: asn1.result.originator });\r\n\r\n\t\tif(\"ukm\" in asn1.result)\r\n\t\t\tthis.ukm = asn1.result.ukm;\r\n\r\n\t\tthis.keyEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.keyEncryptionAlgorithm });\r\n\t\tthis.recipientEncryptedKeys = new RecipientEncryptedKeys({ schema: asn1.result.recipientEncryptedKeys });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for final sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\tidBlock: {\r\n\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t},\r\n\t\t\tvalue: [this.originator.toSchema()]\r\n\t\t}));\r\n\r\n\t\tif(\"ukm\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.ukm]\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\toutputArray.push(this.keyEncryptionAlgorithm.toSchema());\r\n\t\toutputArray.push(this.recipientEncryptedKeys.toSchema());\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tversion: this.version,\r\n\t\t\toriginator: this.originator.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"ukm\" in this)\r\n\t\t\t_object.ukm = this.ukm.toJSON();\r\n\r\n\t\t_object.keyEncryptionAlgorithm = this.keyEncryptionAlgorithm.toJSON();\r\n\t\t_object.recipientEncryptedKeys = this.recipientEncryptedKeys.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"KeyAgreeRecipientInfo.js"}